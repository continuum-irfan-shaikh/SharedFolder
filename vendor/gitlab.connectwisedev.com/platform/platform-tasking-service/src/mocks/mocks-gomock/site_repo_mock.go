// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.connectwisedev.com/platform/platform-tasking-service/src/services/tasks (interfaces: SiteRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gocql "github.com/gocql/gocql"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSiteRepo is a mock of SiteRepo interface
type MockSiteRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSiteRepoMockRecorder
}

// MockSiteRepoMockRecorder is the mock recorder for MockSiteRepo
type MockSiteRepoMockRecorder struct {
	mock *MockSiteRepo
}

// NewMockSiteRepo creates a new mock instance
func NewMockSiteRepo(ctrl *gomock.Controller) *MockSiteRepo {
	mock := &MockSiteRepo{ctrl: ctrl}
	mock.recorder = &MockSiteRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSiteRepo) EXPECT() *MockSiteRepoMockRecorder {
	return m.recorder
}

// GetEndpointsBySiteIDs mocks base method
func (m *MockSiteRepo) GetEndpointsBySiteIDs(arg0 context.Context, arg1 string, arg2 []string) ([]gocql.UUID, error) {
	ret := m.ctrl.Call(m, "GetEndpointsBySiteIDs", arg0, arg1, arg2)
	ret0, _ := ret[0].([]gocql.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEndpointsBySiteIDs indicates an expected call of GetEndpointsBySiteIDs
func (mr *MockSiteRepoMockRecorder) GetEndpointsBySiteIDs(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpointsBySiteIDs", reflect.TypeOf((*MockSiteRepo)(nil).GetEndpointsBySiteIDs), arg0, arg1, arg2)
}
