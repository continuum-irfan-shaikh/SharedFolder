// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go

// Package mockrepositories is a generated GoMock package.
package mockrepositories

import (
	reflect "reflect"

	entities "gitlab.connectwisedev.com/platform/platform-tasking-service/src/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockTaskExecutionHistoryRepo is a mock of TaskExecutionHistoryRepo interface
type MockTaskExecutionHistoryRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTaskExecutionHistoryRepoMockRecorder
}

// MockTaskExecutionHistoryRepoMockRecorder is the mock recorder for MockTaskExecutionHistoryRepo
type MockTaskExecutionHistoryRepoMockRecorder struct {
	mock *MockTaskExecutionHistoryRepo
}

// NewMockTaskExecutionHistoryRepo creates a new mock instance
func NewMockTaskExecutionHistoryRepo(ctrl *gomock.Controller) *MockTaskExecutionHistoryRepo {
	mock := &MockTaskExecutionHistoryRepo{ctrl: ctrl}
	mock.recorder = &MockTaskExecutionHistoryRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTaskExecutionHistoryRepo) EXPECT() *MockTaskExecutionHistoryRepoMockRecorder {
	return m.recorder
}

// Insert mocks base method
func (m *MockTaskExecutionHistoryRepo) Insert(arg0 entities.TaskExecHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert
func (mr *MockTaskExecutionHistoryRepoMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockTaskExecutionHistoryRepo)(nil).Insert), arg0)
}
