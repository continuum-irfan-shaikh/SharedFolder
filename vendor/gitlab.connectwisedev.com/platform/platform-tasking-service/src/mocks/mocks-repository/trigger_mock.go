// Code generated by MockGen. DO NOT EDIT.
// Source: ./loader.go

// Package mockrepositories is a generated GoMock package.
package mockrepositories

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTriggerRepo is a mock of TriggerRepo interface
type MockTriggerRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTriggerRepoMockRecorder
}

// MockTriggerRepoMockRecorder is the mock recorder for MockTriggerRepo
type MockTriggerRepoMockRecorder struct {
	mock *MockTriggerRepo
}

// NewMockTriggerRepo creates a new mock instance
func NewMockTriggerRepo(ctrl *gomock.Controller) *MockTriggerRepo {
	mock := &MockTriggerRepo{ctrl: ctrl}
	mock.recorder = &MockTriggerRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTriggerRepo) EXPECT() *MockTriggerRepoMockRecorder {
	return m.recorder
}

// LoadTriggersToCache mocks base method
func (m *MockTriggerRepo) LoadTriggersToCache() error {
	ret := m.ctrl.Call(m, "LoadTriggersToCache")
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadTriggersToCache indicates an expected call of LoadTriggersToCache
func (mr *MockTriggerRepoMockRecorder) LoadTriggersToCache() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadTriggersToCache", reflect.TypeOf((*MockTriggerRepo)(nil).LoadTriggersToCache))
}
