// Automatically generated by MockGen. DO NOT EDIT!
// Source: gitlab.connectwisedev.com/platform/platform-common-lib/src/namedpipes (interfaces: ServerPipe,ClientPipe)

package mock

import (
	namedpipes "gitlab.connectwisedev.com/platform/platform-common-lib/src/namedpipes"
	gomock "github.com/golang/mock/gomock"
	net "net"
	time "time"
)

// Mock of ServerPipe interface
type MockServerPipe struct {
	ctrl     *gomock.Controller
	recorder *_MockServerPipeRecorder
}

// Recorder for MockServerPipe (not exported)
type _MockServerPipeRecorder struct {
	mock *MockServerPipe
}

func NewMockServerPipe(ctrl *gomock.Controller) *MockServerPipe {
	mock := &MockServerPipe{ctrl: ctrl}
	mock.recorder = &_MockServerPipeRecorder{mock}
	return mock
}

func (_m *MockServerPipe) EXPECT() *_MockServerPipeRecorder {
	return _m.recorder
}

func (_m *MockServerPipe) CreatePipe(_param0 string, _param1 *namedpipes.PipeConfig) (net.Listener, error) {
	ret := _m.ctrl.Call(_m, "CreatePipe", _param0, _param1)
	ret0, _ := ret[0].(net.Listener)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockServerPipeRecorder) CreatePipe(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreatePipe", arg0, arg1)
}

// Mock of ClientPipe interface
type MockClientPipe struct {
	ctrl     *gomock.Controller
	recorder *_MockClientPipeRecorder
}

// Recorder for MockClientPipe (not exported)
type _MockClientPipeRecorder struct {
	mock *MockClientPipe
}

func NewMockClientPipe(ctrl *gomock.Controller) *MockClientPipe {
	mock := &MockClientPipe{ctrl: ctrl}
	mock.recorder = &_MockClientPipeRecorder{mock}
	return mock
}

func (_m *MockClientPipe) EXPECT() *_MockClientPipeRecorder {
	return _m.recorder
}

func (_m *MockClientPipe) DialPipe(_param0 string, _param1 *time.Duration) (net.Conn, error) {
	ret := _m.ctrl.Call(_m, "DialPipe", _param0, _param1)
	ret0, _ := ret[0].(net.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClientPipeRecorder) DialPipe(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DialPipe", arg0, arg1)
}
