// Automatically generated by MockGen. DO NOT EDIT!
// Source: gitlab.connectwisedev.com/platform/platform-common-lib/src/webClient (interfaces: ClientFactory,ClientService,HTTPClientFactory,HTTPClientService)

package mock

import (
	gomock "github.com/golang/mock/gomock"
	webClient "gitlab.connectwisedev.com/platform/platform-common-lib/src/webClient"
	http "net/http"
)

// Mock of ClientFactory interface
type MockClientFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockClientFactoryRecorder
}

// Recorder for MockClientFactory (not exported)
type _MockClientFactoryRecorder struct {
	mock *MockClientFactory
}

func NewMockClientFactory(ctrl *gomock.Controller) *MockClientFactory {
	mock := &MockClientFactory{ctrl: ctrl}
	mock.recorder = &_MockClientFactoryRecorder{mock}
	return mock
}

func (_m *MockClientFactory) EXPECT() *_MockClientFactoryRecorder {
	return _m.recorder
}

func (_m *MockClientFactory) GetClientService(_param0 webClient.HTTPClientFactory, _param1 webClient.ClientConfig) webClient.ClientService {
	ret := _m.ctrl.Call(_m, "GetClientService", _param0, _param1)
	ret0, _ := ret[0].(webClient.ClientService)
	return ret0
}

func (_mr *_MockClientFactoryRecorder) GetClientService(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetClientService", arg0, arg1)
}

func (_m *MockClientFactory) GetClientServiceByType(_param0 webClient.ClientType, _param1 webClient.ClientConfig) webClient.HTTPClientService {
	ret := _m.ctrl.Call(_m, "GetClientServiceByType", _param0, _param1)
	ret0, _ := ret[0].(webClient.HTTPClientService)
	return ret0
}

func (_mr *_MockClientFactoryRecorder) GetClientServiceByType(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetClientServiceByType", arg0, arg1)
}

// Mock of ClientService interface
type MockClientService struct {
	ctrl     *gomock.Controller
	recorder *_MockClientServiceRecorder
}

// Recorder for MockClientService (not exported)
type _MockClientServiceRecorder struct {
	mock *MockClientService
}

func NewMockClientService(ctrl *gomock.Controller) *MockClientService {
	mock := &MockClientService{ctrl: ctrl}
	mock.recorder = &_MockClientServiceRecorder{mock}
	return mock
}

func (_m *MockClientService) EXPECT() *_MockClientServiceRecorder {
	return _m.recorder
}

func (_m *MockClientService) Do(_param0 *http.Request) (*http.Response, error) {
	ret := _m.ctrl.Call(_m, "Do", _param0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClientServiceRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", arg0)
}

// Mock of HTTPClientFactory interface
type MockHTTPClientFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockHTTPClientFactoryRecorder
}

// Recorder for MockHTTPClientFactory (not exported)
type _MockHTTPClientFactoryRecorder struct {
	mock *MockHTTPClientFactory
}

func NewMockHTTPClientFactory(ctrl *gomock.Controller) *MockHTTPClientFactory {
	mock := &MockHTTPClientFactory{ctrl: ctrl}
	mock.recorder = &_MockHTTPClientFactoryRecorder{mock}
	return mock
}

func (_m *MockHTTPClientFactory) EXPECT() *_MockHTTPClientFactoryRecorder {
	return _m.recorder
}

func (_m *MockHTTPClientFactory) GetHTTPClient(_param0 webClient.ClientConfig) webClient.HTTPClientService {
	ret := _m.ctrl.Call(_m, "GetHTTPClient", _param0)
	ret0, _ := ret[0].(webClient.HTTPClientService)
	return ret0
}

func (_mr *_MockHTTPClientFactoryRecorder) GetHTTPClient(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHTTPClient", arg0)
}

// Mock of HTTPClientService interface
type MockHTTPClientService struct {
	ctrl     *gomock.Controller
	recorder *_MockHTTPClientServiceRecorder
}

// Recorder for MockHTTPClientService (not exported)
type _MockHTTPClientServiceRecorder struct {
	mock *MockHTTPClientService
}

func NewMockHTTPClientService(ctrl *gomock.Controller) *MockHTTPClientService {
	mock := &MockHTTPClientService{ctrl: ctrl}
	mock.recorder = &_MockHTTPClientServiceRecorder{mock}
	return mock
}

func (_m *MockHTTPClientService) EXPECT() *_MockHTTPClientServiceRecorder {
	return _m.recorder
}

func (_m *MockHTTPClientService) Create() {
	_m.ctrl.Call(_m, "Create")
}

func (_mr *_MockHTTPClientServiceRecorder) Create() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create")
}

func (_m *MockHTTPClientService) Do(_param0 *http.Request) (*http.Response, error) {
	ret := _m.ctrl.Call(_m, "Do", _param0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHTTPClientServiceRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", arg0)
}

func (_m *MockHTTPClientService) SetCheckRedirect(_param0 func(*http.Request, []*http.Request) error) {
	_m.ctrl.Call(_m, "SetCheckRedirect", _param0)
}

func (_mr *_MockHTTPClientServiceRecorder) SetCheckRedirect(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetCheckRedirect", arg0)
}
