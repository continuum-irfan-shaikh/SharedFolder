// Automatically generated by MockGen. DO NOT EDIT!
// Source: gitlab.connectwisedev.com/platform/platform-common-lib/src/services/model (interfaces: VersionFactory,VersionService,VersionDependencies,HealthCheckServiceFactory,HealthCheckService,HealthCheckDalFactory,HealthCheckDal,HealthCheckDependencies)

package mock

import (
	healthCheck "gitlab.connectwisedev.com/platform/platform-api-model/clients/model/Golang/resourceModel/healthCheck"
	version "gitlab.connectwisedev.com/platform/platform-api-model/clients/model/Golang/resourceModel/version"
	env "gitlab.connectwisedev.com/platform/platform-common-lib/src/env"
	procParser "gitlab.connectwisedev.com/platform/platform-common-lib/src/procParser"
	model "gitlab.connectwisedev.com/platform/platform-common-lib/src/services/model"
	gomock "github.com/golang/mock/gomock"
)

// Mock of VersionFactory interface
type MockVersionFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockVersionFactoryRecorder
}

// Recorder for MockVersionFactory (not exported)
type _MockVersionFactoryRecorder struct {
	mock *MockVersionFactory
}

func NewMockVersionFactory(ctrl *gomock.Controller) *MockVersionFactory {
	mock := &MockVersionFactory{ctrl: ctrl}
	mock.recorder = &_MockVersionFactoryRecorder{mock}
	return mock
}

func (_m *MockVersionFactory) EXPECT() *_MockVersionFactoryRecorder {
	return _m.recorder
}

func (_m *MockVersionFactory) GetVersionService() model.VersionService {
	ret := _m.ctrl.Call(_m, "GetVersionService")
	ret0, _ := ret[0].(model.VersionService)
	return ret0
}

func (_mr *_MockVersionFactoryRecorder) GetVersionService() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVersionService")
}

// Mock of VersionService interface
type MockVersionService struct {
	ctrl     *gomock.Controller
	recorder *_MockVersionServiceRecorder
}

// Recorder for MockVersionService (not exported)
type _MockVersionServiceRecorder struct {
	mock *MockVersionService
}

func NewMockVersionService(ctrl *gomock.Controller) *MockVersionService {
	mock := &MockVersionService{ctrl: ctrl}
	mock.recorder = &_MockVersionServiceRecorder{mock}
	return mock
}

func (_m *MockVersionService) EXPECT() *_MockVersionServiceRecorder {
	return _m.recorder
}

func (_m *MockVersionService) GetVersion(_param0 model.Version) version.Version {
	ret := _m.ctrl.Call(_m, "GetVersion", _param0)
	ret0, _ := ret[0].(version.Version)
	return ret0
}

func (_mr *_MockVersionServiceRecorder) GetVersion(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVersion", arg0)
}

// Mock of VersionDependencies interface
type MockVersionDependencies struct {
	ctrl     *gomock.Controller
	recorder *_MockVersionDependenciesRecorder
}

// Recorder for MockVersionDependencies (not exported)
type _MockVersionDependenciesRecorder struct {
	mock *MockVersionDependencies
}

func NewMockVersionDependencies(ctrl *gomock.Controller) *MockVersionDependencies {
	mock := &MockVersionDependencies{ctrl: ctrl}
	mock.recorder = &_MockVersionDependenciesRecorder{mock}
	return mock
}

func (_m *MockVersionDependencies) EXPECT() *_MockVersionDependenciesRecorder {
	return _m.recorder
}

func (_m *MockVersionDependencies) GetVersionService() model.VersionService {
	ret := _m.ctrl.Call(_m, "GetVersionService")
	ret0, _ := ret[0].(model.VersionService)
	return ret0
}

func (_mr *_MockVersionDependenciesRecorder) GetVersionService() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVersionService")
}

// Mock of HealthCheckServiceFactory interface
type MockHealthCheckServiceFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockHealthCheckServiceFactoryRecorder
}

// Recorder for MockHealthCheckServiceFactory (not exported)
type _MockHealthCheckServiceFactoryRecorder struct {
	mock *MockHealthCheckServiceFactory
}

func NewMockHealthCheckServiceFactory(ctrl *gomock.Controller) *MockHealthCheckServiceFactory {
	mock := &MockHealthCheckServiceFactory{ctrl: ctrl}
	mock.recorder = &_MockHealthCheckServiceFactoryRecorder{mock}
	return mock
}

func (_m *MockHealthCheckServiceFactory) EXPECT() *_MockHealthCheckServiceFactoryRecorder {
	return _m.recorder
}

func (_m *MockHealthCheckServiceFactory) GetHealthCheckService(_param0 model.HealthCheckDependencies) model.HealthCheckService {
	ret := _m.ctrl.Call(_m, "GetHealthCheckService", _param0)
	ret0, _ := ret[0].(model.HealthCheckService)
	return ret0
}

func (_mr *_MockHealthCheckServiceFactoryRecorder) GetHealthCheckService(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHealthCheckService", arg0)
}

// Mock of HealthCheckService interface
type MockHealthCheckService struct {
	ctrl     *gomock.Controller
	recorder *_MockHealthCheckServiceRecorder
}

// Recorder for MockHealthCheckService (not exported)
type _MockHealthCheckServiceRecorder struct {
	mock *MockHealthCheckService
}

func NewMockHealthCheckService(ctrl *gomock.Controller) *MockHealthCheckService {
	mock := &MockHealthCheckService{ctrl: ctrl}
	mock.recorder = &_MockHealthCheckServiceRecorder{mock}
	return mock
}

func (_m *MockHealthCheckService) EXPECT() *_MockHealthCheckServiceRecorder {
	return _m.recorder
}

func (_m *MockHealthCheckService) GetHealthCheck(_param0 model.HealthCheck) (healthCheck.HealthCheck, error) {
	ret := _m.ctrl.Call(_m, "GetHealthCheck", _param0)
	ret0, _ := ret[0].(healthCheck.HealthCheck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHealthCheckServiceRecorder) GetHealthCheck(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHealthCheck", arg0)
}

// Mock of HealthCheckDalFactory interface
type MockHealthCheckDalFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockHealthCheckDalFactoryRecorder
}

// Recorder for MockHealthCheckDalFactory (not exported)
type _MockHealthCheckDalFactoryRecorder struct {
	mock *MockHealthCheckDalFactory
}

func NewMockHealthCheckDalFactory(ctrl *gomock.Controller) *MockHealthCheckDalFactory {
	mock := &MockHealthCheckDalFactory{ctrl: ctrl}
	mock.recorder = &_MockHealthCheckDalFactoryRecorder{mock}
	return mock
}

func (_m *MockHealthCheckDalFactory) EXPECT() *_MockHealthCheckDalFactoryRecorder {
	return _m.recorder
}

func (_m *MockHealthCheckDalFactory) GetHealthCheckDal(_param0 model.HealthCheckDependencies) model.HealthCheckDal {
	ret := _m.ctrl.Call(_m, "GetHealthCheckDal", _param0)
	ret0, _ := ret[0].(model.HealthCheckDal)
	return ret0
}

func (_mr *_MockHealthCheckDalFactoryRecorder) GetHealthCheckDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHealthCheckDal", arg0)
}

// Mock of HealthCheckDal interface
type MockHealthCheckDal struct {
	ctrl     *gomock.Controller
	recorder *_MockHealthCheckDalRecorder
}

// Recorder for MockHealthCheckDal (not exported)
type _MockHealthCheckDalRecorder struct {
	mock *MockHealthCheckDal
}

func NewMockHealthCheckDal(ctrl *gomock.Controller) *MockHealthCheckDal {
	mock := &MockHealthCheckDal{ctrl: ctrl}
	mock.recorder = &_MockHealthCheckDalRecorder{mock}
	return mock
}

func (_m *MockHealthCheckDal) EXPECT() *_MockHealthCheckDalRecorder {
	return _m.recorder
}

func (_m *MockHealthCheckDal) GetHealthCheck(_param0 model.HealthCheck) (healthCheck.HealthCheck, error) {
	ret := _m.ctrl.Call(_m, "GetHealthCheck", _param0)
	ret0, _ := ret[0].(healthCheck.HealthCheck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHealthCheckDalRecorder) GetHealthCheck(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHealthCheck", arg0)
}

// Mock of HealthCheckDependencies interface
type MockHealthCheckDependencies struct {
	ctrl     *gomock.Controller
	recorder *_MockHealthCheckDependenciesRecorder
}

// Recorder for MockHealthCheckDependencies (not exported)
type _MockHealthCheckDependenciesRecorder struct {
	mock *MockHealthCheckDependencies
}

func NewMockHealthCheckDependencies(ctrl *gomock.Controller) *MockHealthCheckDependencies {
	mock := &MockHealthCheckDependencies{ctrl: ctrl}
	mock.recorder = &_MockHealthCheckDependenciesRecorder{mock}
	return mock
}

func (_m *MockHealthCheckDependencies) EXPECT() *_MockHealthCheckDependenciesRecorder {
	return _m.recorder
}

func (_m *MockHealthCheckDependencies) GetEnv() env.Env {
	ret := _m.ctrl.Call(_m, "GetEnv")
	ret0, _ := ret[0].(env.Env)
	return ret0
}

func (_mr *_MockHealthCheckDependenciesRecorder) GetEnv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnv")
}

func (_m *MockHealthCheckDependencies) GetHealthCheckDal(_param0 model.HealthCheckDependencies) model.HealthCheckDal {
	ret := _m.ctrl.Call(_m, "GetHealthCheckDal", _param0)
	ret0, _ := ret[0].(model.HealthCheckDal)
	return ret0
}

func (_mr *_MockHealthCheckDependenciesRecorder) GetHealthCheckDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHealthCheckDal", arg0)
}

func (_m *MockHealthCheckDependencies) GetHealthCheckService(_param0 model.HealthCheckDependencies) model.HealthCheckService {
	ret := _m.ctrl.Call(_m, "GetHealthCheckService", _param0)
	ret0, _ := ret[0].(model.HealthCheckService)
	return ret0
}

func (_mr *_MockHealthCheckDependenciesRecorder) GetHealthCheckService(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHealthCheckService", arg0)
}

func (_m *MockHealthCheckDependencies) GetParser() procParser.Parser {
	ret := _m.ctrl.Call(_m, "GetParser")
	ret0, _ := ret[0].(procParser.Parser)
	return ret0
}

func (_mr *_MockHealthCheckDependenciesRecorder) GetParser() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetParser")
}

func (_m *MockHealthCheckDependencies) GetVersionService() model.VersionService {
	ret := _m.ctrl.Call(_m, "GetVersionService")
	ret0, _ := ret[0].(model.VersionService)
	return ret0
}

func (_mr *_MockHealthCheckDependenciesRecorder) GetVersionService() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVersionService")
}
