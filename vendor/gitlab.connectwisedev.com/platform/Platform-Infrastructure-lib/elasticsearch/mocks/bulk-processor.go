// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.connectwisedev.com/platform/Platform-Infrastructure-lib/elasticsearch (interfaces: BulkProcessor)

// Package esMock is a generated GoMock package.
package esMock

import (
	elasticsearch "gitlab.connectwisedev.com/platform/Platform-Infrastructure-lib/elasticsearch"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBulkProcessor is a mock of BulkProcessor interface
type MockBulkProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockBulkProcessorMockRecorder
}

// MockBulkProcessorMockRecorder is the mock recorder for MockBulkProcessor
type MockBulkProcessorMockRecorder struct {
	mock *MockBulkProcessor
}

// NewMockBulkProcessor creates a new mock instance
func NewMockBulkProcessor(ctrl *gomock.Controller) *MockBulkProcessor {
	mock := &MockBulkProcessor{ctrl: ctrl}
	mock.recorder = &MockBulkProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBulkProcessor) EXPECT() *MockBulkProcessorMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockBulkProcessor) Add(arg0 elasticsearch.BulkRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0)
}

// Add indicates an expected call of Add
func (mr *MockBulkProcessorMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockBulkProcessor)(nil).Add), arg0)
}

// Close mocks base method
func (m *MockBulkProcessor) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockBulkProcessorMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockBulkProcessor)(nil).Close))
}

// Flush mocks base method
func (m *MockBulkProcessor) Flush() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flush")
	ret0, _ := ret[0].(error)
	return ret0
}

// Flush indicates an expected call of Flush
func (mr *MockBulkProcessorMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockBulkProcessor)(nil).Flush))
}
