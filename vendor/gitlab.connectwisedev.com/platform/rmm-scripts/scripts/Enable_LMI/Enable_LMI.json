{"id":"8fbacb0f-789f-11e9-93c9-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Enable LMI","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Script executed successfully","internal":false,"name":"Enable LMI","tags":["Windows 7","Windows 10"],"sequence":true,"content":"",
"jsonSchema":"",
"uiSchema":"",
"isHDScript":true}
