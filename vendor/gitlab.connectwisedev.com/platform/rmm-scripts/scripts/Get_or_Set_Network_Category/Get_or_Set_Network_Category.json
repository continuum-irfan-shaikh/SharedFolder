{"id":"db58d7af-86c5-11e9-b8f9-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Get or Set Network Category","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Script executed successfully","internal":false,"name":"Get or Set Network Category","tags":["Windows 7","Windows 10"],"sequence":true,"content":"IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tZ2V0IHNldCBuZXR3b3JrIGNhdGVnb3J5LS0tLS0tLS0tIyMjIyMjIyMjIw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIA0KICMtLS0tLS0tLS0tICRPcGVyYXRpb25UeXBlIHZhbHVlIGNhbiBiZSBSZWFkIG9yIEVkaXQtLS0tLS0tDQogDQo8Iw0KW3N0cmluZ10kT3BlcmF0aW9uVHlwZSA9ICJSZWFkIg0KW3N0cmluZ10kQWRhcHRlck5hbWUgPSAiYWJjZCINCltzdHJpbmddJE5ldHdvcmtDYXRlZ29yeSA9ICJwcml2YXRlIg0KICM+DQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tVmFyaWFibGUgRGVjbGFyYXRpb24tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQokQ29tcHV0ZXJOYW1lID0gJGVudjpjb21wdXRlcm5hbWUNCg0KJFJlc3VsdE9iamVjdCA9IE5ldy1PYmplY3QgLVR5cGVOYW1lIHBzb2JqZWN0DQokUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1Rhc2sgTmFtZScgLVZhbHVlICJHZXQgU2V0IE5ldHdvcmsgQ2F0ZWdvcnkiIA0KDQokU3VjY2Vzc09iamVjdCA9IE5ldy1PYmplY3QgLVR5cGVOYW1lIHBzb2JqZWN0DQoNCiRnbG9iYWw6Q29kZSA9IDANCiRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXk9IEAoKQ0KJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5PSBAKCkNCg0KJGdsb2JhbDpBZGFwdGVySW5mb09iamVjdEFycmF5PSBAKCkNCiRnbG9iYWw6RWRpdGVkQWRhcHRlckluZm9PYmplY3RBcnJheT0gQCgpDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLUNoZWNraW5nIFByZSBDb25kaXRpb24tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gQ2hlY2stUHJlQ29uZGl0aW9uew0KDQogICAgJElzQ29udGludWVkID0gJHRydWUNCg0KICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iDQogICAgV3JpdGUtSG9zdCAiQ2hlY2tpbmcgUHJlY29uZGl0aW9ucyINCiAgICBXcml0ZS1Ib3N0ICIiIA0KICAgDQoNCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQogICAgIyBWZXJpZnkgUG93ZXJTaGVsbCBWZXJzaW9uDQogICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQogICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJgdCBQb3dlclNoZWxsIFZlcnNpb24gOiAkKCRQU1ZlcnNpb25UYWJsZS5QU1ZlcnNpb24uTWFqb3IpIiANCg0KICAgIGlmKC1OT1QoJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbi5NYWpvciAtZ2UgMikpDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAyDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlBvd2VyU2hlbGwgdmVyc2lvbiBiZWxvdyAyLjAgaXMgbm90IHN1cHBvcnRlZCINCg0KICAgICAgICAkSXNDb250aW51ZWQgPSAkZmFsc2UNCiAgICB9DQoNCiAgICANCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgICAgIA0KICAgICMgVmVyaWZ5IG9wZWFyYXRpbmcgc3lzdGVtIFZlcnNpb24NCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiYHQgT3BlcmF0aW5nIFN5c3RlbSBWZXJzaW9uIDogJChbU3lzdGVtLkVudmlyb25tZW50XTo6T1NWZXJzaW9uLlZlcnNpb24ubWFqb3IpIiANCiAgICBpZigtbm90KFtTeXN0ZW0uRW52aXJvbm1lbnRdOjpPU1ZlcnNpb24uVmVyc2lvbi5tYWpvciAtZ2UgNikpDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAyDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlBvd2VyU2hlbGwgU2NyaXB0IHN1cHBvcnRzIFdpbmRvdyA3LCBXaW5kb3cgMjAwOFIyIGFuZCBoaWdoZXIgdmVyc2lvbiBvcGVyYXRpbmcgc3lzdGVtIg0KDQogICAgICAgICRJc0NvbnRpbnVlZCA9ICRmYWxzZQ0KICAgIH0NCiAgICANCiAgICANCiAgICBXcml0ZS1Ib3N0ICIiDQogICAgV3JpdGUtSG9zdCAtRm9yZWdyb3VuZENvbG9yIDggImB0IENoZWNraW5nIFByZWNvbmRpdGlvbiBDb21wbGV0ZWQiDQogICAgV3JpdGUtSG9zdCAiIg0KICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iDQogICAgV3JpdGUtSG9zdCAiIg0KDQogICAgcmV0dXJuICRJc0NvbnRpbnVlZA0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLUpTT04gZm9yIFBTMiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KZnVuY3Rpb24gRXNjYXBlLUpTT05TdHJpbmcoJHN0cikNCnsNCglpZiAoJHN0ciAtZXEgJG51bGwpIA0KICAgIHsNCiAgICAgICAgcmV0dXJuICIiDQogICAgfQ0KDQoJJHN0ciA9ICRzdHIuVG9TdHJpbmcoKS5SZXBsYWNlKCciJywnXCInKS5SZXBsYWNlKCdcJywnXFwnKS5SZXBsYWNlKCJgbiIsJ1xuJykuUmVwbGFjZSgiYHIiLCdccicpLlJlcGxhY2UoImB0IiwnXHQnKQ0KDQoJcmV0dXJuICRzdHI7DQp9DQoNCg0KZnVuY3Rpb24gQ29udmVydFRvLUpTT05QUzIoJG1heERlcHRoID0gNCwkZm9yY2VBcnJheSA9ICRmYWxzZSkgDQp7DQoJYmVnaW4gew0KCQkkZGF0YSA9IEAoKQ0KCX0NCglwcm9jZXNzew0KCQkkZGF0YSArPSAkXw0KCX0NCgkNCgllbmR7DQoJDQoJCWlmICgkZGF0YS5sZW5ndGggLWVxIDEgLWFuZCAkZm9yY2VBcnJheSAtZXEgJGZhbHNlKSB7DQoJCQkkdmFsdWUgPSAkZGF0YVswXQ0KCQl9IGVsc2UgewkNCgkJCSR2YWx1ZSA9ICRkYXRhDQoJCX0NCg0KCQlpZiAoJHZhbHVlIC1lcSAkbnVsbCkgew0KCQkJcmV0dXJuICJudWxsIg0KCQl9DQoNCgkJDQoNCgkJJGRhdGFUeXBlID0gJHZhbHVlLkdldFR5cGUoKS5OYW1lDQoJCQ0KCQlzd2l0Y2ggLXJlZ2V4ICgkZGF0YVR5cGUpIHsNCgkgICAgICAgICAgICAnU3RyaW5nJyAgew0KCQkJCQlyZXR1cm4gICJgInswfWAiIiAtZiAoRXNjYXBlLUpTT05TdHJpbmcgJHZhbHVlICkNCgkJCQl9DQoNCgkgICAgICAgICAgICAnKFN5c3RlbVwuKT9EYXRlVGltZScgIHtyZXR1cm4gICJgInswOnl5eXktTU0tZGR9VHswOkhIOm1tOnNzfWAiIiAtZiAkdmFsdWV9DQoNCgkgICAgICAgICAgICAnSW50MzJ8RG91YmxlJyB7cmV0dXJuICAiJHZhbHVlIn0NCg0KCQkJCSdCb29sZWFuJyB7cmV0dXJuICAiJHZhbHVlIi5Ub0xvd2VyKCl9DQoNCgkgICAgICAgICAgICAnKFN5c3RlbVwuKT9PYmplY3RcW1xdJyB7ICMgYXJyYXkNCgkJCQkJDQoJCQkJCWlmICgkbWF4RGVwdGggLWxlIDApe3JldHVybiAiYCIkdmFsdWVgIiJ9DQoJCQkJCQ0KCQkJCQkkanNvblJlc3VsdCA9ICcnDQoJCQkJCWZvcmVhY2goJGVsZW0gaW4gJHZhbHVlKXsNCgkJCQkJCSNpZiAoJGVsZW0gLWVxICRudWxsKSB7Y29udGludWV9DQoJCQkJCQlpZiAoJGpzb25SZXN1bHQuTGVuZ3RoIC1ndCAwKSB7JGpzb25SZXN1bHQgKz0nLCAnfQkJCQkNCgkJCQkJCSRqc29uUmVzdWx0ICs9ICgkZWxlbSB8IENvbnZlcnRUby1KU09OUFMyIC1tYXhEZXB0aCAoJG1heERlcHRoIC0xKSkNCgkJCQkJfQ0KCQkJCQlyZXR1cm4gIlsiICsgJGpzb25SZXN1bHQgKyAiXSINCgkgICAgICAgICAgICB9DQoNCgkJCQknKFN5c3RlbVwuKT9IYXNodGFibGUnIHsgIyBoYXNodGFibGUNCgkJCQkJJGpzb25SZXN1bHQgPSAnJw0KCQkJCQlmb3JlYWNoKCRrZXkgaW4gJHZhbHVlLktleXMpew0KCQkJCQkJaWYgKCRqc29uUmVzdWx0Lkxlbmd0aCAtZ3QgMCkgeyRqc29uUmVzdWx0ICs9JywgJ30NCgkJCQkJCSRqc29uUmVzdWx0ICs9IA0KQCINCgkiezB9IjogezF9DQoiQCAtZiAka2V5ICwgKCR2YWx1ZVska2V5XSB8IENvbnZlcnRUby1KU09OUFMyIC1tYXhEZXB0aCAoJG1heERlcHRoIC0xKSApDQoJCQkJCX0NCgkJCQkJcmV0dXJuICJ7IiArICRqc29uUmVzdWx0ICsgIn0iDQoJCQkJfQ0KDQoJICAgICAgICAgICAgZGVmYXVsdCB7ICNvYmplY3QNCgkJCQkJaWYgKCRtYXhEZXB0aCAtbGUgMCl7cmV0dXJuICAiYCJ7MH1gIiIgLWYgKEVzY2FwZS1KU09OU3RyaW5nICR2YWx1ZSl9DQoJCQkJCQ0KCQkJCQlyZXR1cm4gInsiICsNCgkJCQkJCSgoJHZhbHVlIHwgR2V0LU1lbWJlciAtTWVtYmVyVHlwZSAqcHJvcGVydHkgfCAlIHsgDQpAIg0KCSJ7MH0iOiB7MX0NCiJAIC1mICRfLk5hbWUgLCAoJHZhbHVlLigkXy5OYW1lKSB8IENvbnZlcnRUby1KU09OUFMyIC1tYXhEZXB0aCAoJG1heERlcHRoIC0xKSApCQkJDQoJCQkJCQ0KCQkJCQl9KSAtam9pbiAnLCAnKSArICJ9Ig0KCSAgICAJCX0NCgkJfQ0KCX0NCn0NCg0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLVJlYWQgTmV0d29yayAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gUmVhZC1OZXR3b3JrKCkNCnsNCiAgICAkZ2xvYmFsOmFkYXB0ZXJuYW1lID0gJG51bGwNCiAgICAkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkgPSAkbnVsbA0KDQogICAgaWYoJE9wZXJhdGlvblR5cGUgLWVxICJSZWFkIikNCiAgICB7DQogICAgICAgIGlmKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOmFkYXB0ZXJuYW1lKSAtYW5kICFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkpICkNCiAgICAgICAgew0KICAgICAgICAgICAgJGdsb2JhbDpjb2RlID0gMQ0KICAgICAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSArPSAiVGhlIGFkYXB0ZXIgbmFtZSBhbmQgbmV0d29yayBjYXRlZ29yeSBwYXJhbWV0ZXJzIGFyZSBub3QgcmVxdWlyZWQgZm9yIHR5cGUgUmVhZCINCiAgICAgICAgfQ0KDQogICAgICAgIGlmKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOmFkYXB0ZXJuYW1lKSAtYW5kIFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRnbG9iYWw6bmV0d29ya19jYXRlZ29yeSkgKQ0KICAgICAgICB7DQogICAgICAgICAgICAkZ2xvYmFsOmNvZGUgPSAxDQogICAgICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5ICs9ICJUaGUgYWRhcHRlciBuYW1lIGlzIG5vdCByZXF1aXJlZCBmb3IgdHlwZSBSZWFkIg0KICAgICAgICB9DQoNCiAgICAgICAgaWYoW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGdsb2JhbDphZGFwdGVybmFtZSkgLWFuZCAhW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5KSApDQogICAgICAgIHsNCiAgICAgICAgICAgICRnbG9iYWw6Y29kZSA9IDENCiAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlRoZSBuZXR3b3JrIGNhdGVnb3J5IGlzIG5vdCByZXF1aXJlZCBmb3IgdHlwZSBSZWFkIiANCiAgICAgICAgfQ0KDQogICAgICAgIA0KICAgICAgICBpZihbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOmFkYXB0ZXJuYW1lKSAtYW5kIFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRnbG9iYWw6bmV0d29ya19jYXRlZ29yeSkgKQ0KICAgICAgICB7DQogICAgICAgICAgICB0cnkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkZ2xvYmFsOmFkcG5hbWUgPSAkbnVsbA0KICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0Y2F0ZWdvcnkgPSAkbnVsbA0KDQogICAgICAgICAgICAgICAgaWYoJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbi5NYWpvciAtZXEgMikNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0d29ya0xpc3RNYW5hZ2VyID0gW0FjdGl2YXRvcl06OkNyZWF0ZUluc3RhbmNlKFtUeXBlXTo6R2V0VHlwZUZyb21DTFNJRChbR3VpZF0ie0RDQjAwQzAxLTU3MEYtNEE5Qi04RDY5LTE5OUZEQkE1NzIzQn0iKSkNCiAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpjb25uZWN0aW9ucyA9ICRnbG9iYWw6bmV0d29ya0xpc3RNYW5hZ2VyLkdldE5ldHdvcmtDb25uZWN0aW9ucygpDQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICBmb3JlYWNoKCRnbG9iYWw6Y29ubiBpbiAkZ2xvYmFsOmNvbm5lY3Rpb25zKQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldHQgPSAkZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldENhdGVnb3J5KCkgDQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldHR5cGUgPSAkZ2xvYmFsOm5ldHQgfCA/eyRfIC1tYXRjaCAiMSIgLW9yICRfIC1tYXRjaCAiMCJ9DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOm5ldHR5cGUpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCRnbG9iYWw6bmV0dHlwZSAtZXEgMSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6YWRwbmFtZSA9ICRnbG9iYWw6Y29ubi5HZXROZXR3b3JrKCkuR2V0TmFtZSgpIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldGNhdGVnb3J5ID0gIlByaXZhdGUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoW2ludF0kZ2xvYmFsOm5ldHR5cGUgLWVxIDApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOmFkcG5hbWUgPSAkZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldE5hbWUoKSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpuZXRjYXRlZ29yeSA9ICJQdWJsaWMiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgJEFkYXB0ZXJJbmZvT2JqZWN0ID0gTmV3LU9iamVjdCAtVHlwZU5hbWUgcHNvYmplY3QNCiAgICAgICAgICAgICAgICAgICAgICAgICRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdBZGFwdGVyIE5hbWU6JyAtVmFsdWUgJCgkZ2xvYmFsOmFkcE5hbWUpDQogICAgICAgICAgICAgICAgICAgICAgICAkQWRhcHRlckluZm9PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTmV0d29yayBUeXBlOicgLVZhbHVlICQoJGdsb2JhbDpuZXRjYXRlZ29yeSkNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpBZGFwdGVySW5mb09iamVjdEFycmF5ICs9ICRBZGFwdGVySW5mb09iamVjdA0KDQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gIkFkYXB0ZXIgTmFtZToiICsgJCgkZ2xvYmFsOmFkcE5hbWUpDQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gIk5ldHdvcmsgVHlwZToiICsgJCgkZ2xvYmFsOm5ldGNhdGVnb3J5KQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYoJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbi5NYWpvciAtZ2UgMykNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0Y29ubiA9IEdldC1OZXRDb25uZWN0aW9uUHJvZmlsZQ0KICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICRBZGFwdGVySW5mb09iamVjdCA9IE5ldy1PYmplY3QgLVR5cGVOYW1lIHBzb2JqZWN0ICAgIA0KICAgICAgICAgICAgICAgICAgICAkQWRhcHRlckluZm9PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnQWRhcHRlciBOYW1lOicgLVZhbHVlICQoJGdsb2JhbDpuZXRjb25uLk5hbWUpDQogICAgICAgICAgICAgICAgICAgICRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdOZXR3b3JrIFR5cGU6JyAtVmFsdWUgJChbc3RyaW5nXSRnbG9iYWw6bmV0Y29ubi5OZXR3b3JrQ2F0ZWdvcnkpDQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6QWRhcHRlckluZm9PYmplY3RBcnJheSArPSAkQWRhcHRlckluZm9PYmplY3QNCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiQWRhcHRlciBOYW1lOiIgKyAkKCRnbG9iYWw6bmV0Y29ubi5OYW1lKQ0KICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gIk5ldHdvcmsgVHlwZToiICsgJCgkZ2xvYmFsOm5ldGNvbm4uTmV0d29ya0NhdGVnb3J5KQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNhdGNoDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJGdsb2JhbDpDb2RlID0gMQ0KICAgICAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlVuYWJsZSB0byBvYnRhaW4gQWRhcHRlciBOYW1lIG9yIE5ldHdvcmsgVHlwZTogJF8uRXhjZXB0aW9uLk1lc3NhZ2UiIA0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLUVkaXQgTmV0d29yayAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gRWRpdC1OZXR3b3JrKCRhZGFwdGVybmFtZSwgJG5ldHdvcmtfY2F0ZWdvcnkpDQp7DQogICAgDQogICAgJGdsb2JhbDphZGFwdGVybmFtZSA9ICAkYWRhcHRlcm5hbWUNCiAgICAkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkgPSAgJG5ldHdvcmtfY2F0ZWdvcnkNCg0KICAgICRnbG9iYWw6c29sID0gQCgpDQogICAgJGdsb2JhbDpuZXR3b3JrTGlzdE1hbmFnZXIgPSBbQWN0aXZhdG9yXTo6Q3JlYXRlSW5zdGFuY2UoW1R5cGVdOjpHZXRUeXBlRnJvbUNMU0lEKFtHdWlkXSJ7RENCMDBDMDEtNTcwRi00QTlCLThENjktMTk5RkRCQTU3MjNCfSIpKQ0KICAgICRnbG9iYWw6Y29ubmVjdGlvbnMgPSAkZ2xvYmFsOm5ldHdvcmtMaXN0TWFuYWdlci5HZXROZXR3b3JrQ29ubmVjdGlvbnMoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgZm9yZWFjaCgkZ2xvYmFsOmNvbm4gaW4gJGdsb2JhbDpjb25uZWN0aW9ucyl7DQogICAgICAgICRnbG9iYWw6bmFtZSA9ICRnbG9iYWw6Y29ubi5HZXROZXR3b3JrKCkuR2V0TmFtZSgpDQogICAgICAgICRnbG9iYWw6Y2F0ZWdvcnkgPSAkZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldENhdGVnb3J5KCkNCiAgICAgICAgICAgICAgICAgDQogICAgICAgIGlmKCRnbG9iYWw6Y2F0ZWdvcnkgLWVxIDApew0KICAgICAgICAgICAgJGdsb2JhbDpuZXQgPSAiUHVibGljIiAgDQogICAgICAgIH0NCiAgICAgICAgaWYoJGdsb2JhbDpjYXRlZ29yeSAtZXEgMSl7DQogICAgICAgICAgICAkZ2xvYmFsOm5ldCA9ICJQcml2YXRlIiAgICAgICAgICAgICAgICAgIA0KICAgICAgICB9DQogICAgICAgICRnbG9iYWw6c29sICs9ICRnbG9iYWw6bmFtZSArICI6IiArICRnbG9iYWw6bmV0DQogICAgfQ0KDQogICAgaWYoW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGdsb2JhbDphZGFwdGVybmFtZSkgLWFuZCBbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkpICkNCiAgICB7DQogICAgICAgICRnbG9iYWw6Y29kZSA9IDINCiAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSArPSAiVGhlIEFkYXB0ZXIgbmFtZSBhbmQgTmV0d29yayBjYXRlZ29yeSBpcyBtYW5kYXRvcnkuICBUaGUgbmV0d29yayBhZGFwdGVyIGZvdW5kIGluIHRoaXMgbWFjaGluZSBhcmUgJGdsb2JhbDpzb2wiICAgICAgICANCiAgICB9DQogICAgaWYoIVtzdHJpbmddOjpJc051bGxPckVtcHR5KCRnbG9iYWw6YWRhcHRlcm5hbWUpIC1hbmQgW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5KSApDQogICAgew0KICAgICAgICAkZ2xvYmFsOmNvZGUgPSAyDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlRoZSBOZXR3b3JrIGNhdGVnb3J5IGlzIG1hbmRhdG9yeS4gIFRoZSBuZXR3b3JrIGFkYXB0ZXIgZm91bmQgaW4gdGhpcyBtYWNoaW5lIGFyZSAkZ2xvYmFsOnNvbCIgICAgICAgIA0KICAgIH0NCiAgICBpZihbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOmFkYXB0ZXJuYW1lKSAtYW5kICFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkpICkNCiAgICB7DQogICAgICAgICRnbG9iYWw6Y29kZSA9IDINCiAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSArPSAiVGhlIEFkYXB0ZXIgbmFtZSBpcyBtYW5kYXRvcnkuICBUaGUgbmV0d29yayBhZGFwdGVyIGZvdW5kIGluIHRoaXMgbWFjaGluZSBhcmUgJGdsb2JhbDpzb2wiICAgICAgICANCiAgICB9DQogICANCg0KICAgIGlmKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOmFkYXB0ZXJuYW1lKSAtYW5kICFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkpICkNCiAgICB7DQogICAgICAgICBpZigkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkgLW5lICJwcml2YXRlIiAtYW5kICRnbG9iYWw6bmV0d29ya19jYXRlZ29yeSAtbmUgInB1YmxpYyIpDQogICAgICAgIHsNCiAgICAgICAgICAgICRnbG9iYWw6Y29kZSA9IDINCiAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlRoZSBuZXR3b3JrIGNhdGVnb3J5IHNob3VsZCBiZSBlaXRoZXIgUHJpdmF0ZSBvciBQdWJsaWMuICBUaGUgbmV0d29yayBhZGFwdGVyIGZvdW5kIGluIHRoaXMgbWFjaGluZSBhcmUgJGdsb2JhbDpzb2wiICAgICAgICANCiAgICAgICAgfQ0KICAgICAgICBpZigkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkgLWVxICJQcml2YXRlIiAtb3IgJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5IC1lcSAiUHVibGljIikNCiAgICAgICAgew0KICAgICAgICAgICAgaWYoJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbi5tYWpvciAtZXEgMikNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldHdvcmtMaXN0TWFuYWdlciA9IFtBY3RpdmF0b3JdOjpDcmVhdGVJbnN0YW5jZShbVHlwZV06OkdldFR5cGVGcm9tQ0xTSUQoW0d1aWRdIntEQ0IwMEMwMS01NzBGLTRBOUItOEQ2OS0xOTlGREJBNTcyM0J9IikpDQogICAgICAgICAgICAgICAgJGdsb2JhbDpjb25uZWN0aW9ucyA9ICRnbG9iYWw6bmV0d29ya0xpc3RNYW5hZ2VyLkdldE5ldHdvcmtDb25uZWN0aW9ucygpDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBmb3JlYWNoKCRnbG9iYWw6Y29ubiBpbiAkZ2xvYmFsOmNvbm5lY3Rpb25zKQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpuYW1lID0gJGdsb2JhbDpjb25uLkdldE5ldHdvcmsoKS5HZXROYW1lKCkgfCA/eyAkXyAtbWF0Y2ggJGdsb2JhbDphZGFwdGVybmFtZSB9DQogICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgaWYoJGdsb2JhbDpuYW1lIC1ub3RtYXRjaCAkZ2xvYmFsOmFkYXB0ZXJuYW1lKQ0KICAgICAgICAgICAgICAgICAgICB7IA0KICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOmNvZGUgPSAyDQogICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIkludmFsaWQgYWRhcHRlciBuYW1lICRnbG9iYWw6YWRhcHRlcm5hbWUuIFRoZSBuZXR3b3JrIGFkYXB0ZXIgZm91bmQgaW4gdGhpcyBtYWNoaW5lIGFyZSBgbiAkZ2xvYmFsOnNvbCINCiAgICAgICAgICAgICAgICAgICAgfSANCiAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICBpZigkZ2xvYmFsOm5hbWUgLW1hdGNoICRnbG9iYWw6YWRhcHRlcm5hbWUpDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5IC1lcSAiUHJpdmF0ZSIpDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpjb25uLkdldE5ldHdvcmsoKS5zZXRDYXRlZ29yeSgxKSB8P3skZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldE5hbWUoKSAtbWF0Y2ggJGdsb2JhbDphZGFwdGVybmFtZSB9ICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZigkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkgLWVxICJQdWJsaWMiKQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6Y29ubi5HZXROZXR3b3JrKCkuc2V0Q2F0ZWdvcnkoMCkgfD97JGdsb2JhbDpjb25uLkdldE5ldHdvcmsoKS5HZXROYW1lKCkgLW1hdGNoICRnbG9iYWw6YWRhcHRlcm5hbWUgfSAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0d29ya0xpc3RNYW5hZ2VyID0gJG51bGwNCiAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldHdvcmtMaXN0TWFuYWdlciA9IFtBY3RpdmF0b3JdOjpDcmVhdGVJbnN0YW5jZShbVHlwZV06OkdldFR5cGVGcm9tQ0xTSUQoW0d1aWRdIntEQ0IwMEMwMS01NzBGLTRBOUItOEQ2OS0xOTlGREJBNTcyM0J9IikpDQogICAgICAgICAgICAgICAgJGdsb2JhbDpjb25uZWN0aW9ucyA9ICRnbG9iYWw6bmV0d29ya0xpc3RNYW5hZ2VyLkdldE5ldHdvcmtDb25uZWN0aW9ucygpDQogICAgICAgICAgICAgICAgJGlwcyA9IGFycCAtYSB8U2VsZWN0LVN0cmluZyAiSW50ZXJmYWNlIiB8IEZvckVhY2gtT2JqZWN0IHskXyAtc3BsaXQgIjoiIC1zcGxpdCAiLS0tIiB8IHNlbGVjdCAtSW5kZXggMX0gICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgDQogICAgICAgICAgICAgICAgZm9yZWFjaCgkaXAgaW4gJGlwcykNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGZvcmVhY2goJGdsb2JhbDpjb25uIGluICRnbG9iYWw6Y29ubmVjdGlvbnMpDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6Y2hlY2sgPSAkZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldENhdGVnb3J5KCkgfD97JGdsb2JhbDpjb25uLkdldE5ldHdvcmsoKS5HZXROYW1lKCkgLW1hdGNoICRnbG9iYWw6YWRhcHRlcm5hbWUgfQ0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCRnbG9iYWw6Y2hlY2sgLW1hdGNoICRnbG9iYWw6bmV0Y2F0ZWdvcnkpDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpjb2RlID0gMQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgPSAiJGdsb2JhbDphZGFwdGVybmFtZSBpcyBhbHJlYWR5IHNldCB0byAkZ2xvYmFsOm5ldHdvcmtjYXRlZ29yeSINCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0dCA9ICRnbG9iYWw6Y29ubi5HZXROZXR3b3JrKCkuR2V0Q2F0ZWdvcnkoKSB8P3skZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldE5hbWUoKSAtbWF0Y2ggJGdsb2JhbDphZGFwdGVybmFtZSB9DQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldHR5cGUgPSAkZ2xvYmFsOm5ldHQgfCA/eyRfIC1tYXRjaCAiMSIgLW9yICRfIC1tYXRjaCAiMCJ9DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkZ2xvYmFsOm5ldHR5cGUpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCRnbG9iYWw6bmV0dHlwZSAtZXEgMSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6YWRwbmFtZSA9ICRnbG9iYWw6Y29ubi5HZXROZXR3b3JrKCkuR2V0TmFtZSgpIHwgP3skXyAtbWF0Y2ggJGdsb2JhbDphZGFwdGVybmFtZSB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0Y2F0ZWdvcnkgPSAiUHJpdmF0ZSINCiAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoW2ludF0kZ2xvYmFsOm5ldHR5cGUgLWVxIDApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOmFkcG5hbWUgPSAkZ2xvYmFsOmNvbm4uR2V0TmV0d29yaygpLkdldE5hbWUoKSB8ID97JF8gLW1hdGNoICRnbG9iYWw6YWRhcHRlcm5hbWUgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOm5ldGNhdGVnb3J5ID0gIlB1YmxpYyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgDQogICAgICAgICAgICAgICAgICAgICAgICAkbmV0X2NvbmZpZyA9IEdldC1XbWlPYmplY3Qgd2luMzJfbmV0d29ya2FkYXB0ZXJjb25maWd1cmF0aW9uIA0KICAgICAgICAgICAgICAgICAgICAgICAgJGluZGV4ID0gJG5ldF9jb25maWd8IHNlbGVjdCBETlNEb21haW4sRGVzY3JpcHRpb24sSW50ZXJmYWNlSW5kZXgsSXBhZGRyZXNzIHwgP3skXy5JcGFkZHJlc3MgLW5lICRudWxsIC1vciAkXy5ETlNEb21haW4gLW1hdGNoICRnbG9iYWw6YWRhcHRlcm5hbWV9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2goJGluZGV4MSBpbiAkaW5kZXgpDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGFkciA9ICRpbmRleDEuaXBhZGRyZXNzIC1ub3RtYXRjaCAiOiIgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGlwX3RyaW0gPVtzdHJpbmddJGlwDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihbc3RyaW5nXSRhZHIgLW1hdGNoICRpcF90cmltLnRyaW0oKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbmRleCA9ICRpbmRleDEgfCBzZWxlY3QgLUV4cGFuZFByb3BlcnR5IEludGVyZmFjZUluZGV4DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5ldGFkYXB0ZXIgPSBHZXQtV21pT2JqZWN0IHdpbjMyX25ldHdvcmthZGFwdGVyIC1GaWx0ZXIgTmV0Y29ubmVjdGlvbnN0YXR1cz0yIHwgP3skXy5JbnRlcmZhY2VJbmRleCAtZXEgJGluZGV4fQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6aW50ZXJmYWNlID0gJG5ldGFkYXB0ZXIgfCBzZWxlY3QgLUV4cGFuZFByb3BlcnR5IE5ldGNvbm5lY3Rpb25JRA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCQoZ2V0LXdtaW9iamVjdCB3aW4zMl9vcGVyYXRpbmdzeXN0ZW0gfCBzZWxlY3QgLUV4cGFuZFByb3BlcnR5IE5hbWUpIC1tYXRjaCAiNyBQcm9mZXNzaW9uYWwiKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDppcHY0ID0gIkludGVybmV0IiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6aXB2NiA9ICJObyBpbnRlcm5ldCBhY2Nlc3MiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCQoZ2V0LXdtaW9iamVjdCB3aW4zMl9vcGVyYXRpbmdzeXN0ZW0gfCBzZWxlY3QgLUV4cGFuZFByb3BlcnR5IE5hbWUpIC1tYXRjaCAiMjAwOCBTdGFuZGFyZCIpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOmlwdjQgPSAiSW50ZXJuZXQiICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDppcHY2ID0gIkxvY2FsIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRWRpdGVkQWRhcHRlckluZm9PYmplY3QgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBwc29iamVjdA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdOYW1lOicgLVZhbHVlICQoJGdsb2JhbDphZHBuYW1lKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdJbnRlcmZhY2UgQWxpYXM6JyAtVmFsdWUgJCgkZ2xvYmFsOmludGVyZmFjZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRWRpdGVkQWRhcHRlckluZm9PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTmV0d29yayBDYXRlZ29yeTonIC1WYWx1ZSAkKCRnbG9iYWw6bmV0Y2F0ZWdvcnkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJEVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ0lQdjQgQ29ubmVjdGl2aXR5OicgLVZhbHVlICQoJGdsb2JhbDppcHY0KQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdJUHY2IENvbm5lY3Rpdml0eTonIC1WYWx1ZSAkKCRnbG9iYWw6aXB2NikNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOkVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0QXJyYXkgKz0gJEVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gJ05hbWU6JyArICQoJGdsb2JhbDphZHBuYW1lKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAnSW50ZXJmYWNlIEFsaWFzOicgKyAkKCRnbG9iYWw6SW50ZXJmYWNlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAnTmV0d29yayBDYXRlZ29yeTonICsgJCgkZ2xvYmFsOk5ldHdvcmtDYXRlZ29yeSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gJ0lQdjQgQ29ubmVjdGl2aXR5OicgKyAkKCRnbG9iYWw6SVB2NCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gJ0lQdjYgQ29ubmVjdGl2aXR5OicgKyAkKCRnbG9iYWw6SVB2NikNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgfSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICBpZigkZ2xvYmFsOm5ldGNvbm5lY3Rpb24uTmV0d29ya0NhdGVnb3J5IC1lcSAkZ2xvYmFsOm5ldHdvcmtfY2F0ZWdvcnkpDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpDb2RlID0gMQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIk5ldHdvcmsgY2F0ZWdvcnkgZm9yICgkZ2xvYmFsOm5ldGNvbm5lY3Rpb24uTmFtZSkgaXMgYWxyZWFkeSBzZXQgdG8gJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5ICIgDQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gDQogIA0KDQogICAgICAgICAgICBpZigkUFNWZXJzaW9uVGFibGUuUFNWZXJzaW9uLk1ham9yIC1nZSAzKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0Y29ubmVjdGlvbiA9IEdldC1OZXRDb25uZWN0aW9uUHJvZmlsZQ0KICAgICAgICAgICAgICAgIGlmKCQoR2V0LU5ldENvbm5lY3Rpb25Qcm9maWxlIHwgP3skXy5OYW1lIC1tYXRjaCAkZ2xvYmFsOmFkYXB0ZXJuYW1lfSkgLW5lICRudWxsKXsNCiAgICAgICAgICAgICAgICAgICAgaWYoICRnbG9iYWw6bmV0Y29ubmVjdGlvbi5OZXR3b3JrQ2F0ZWdvcnkgLW5lICRnbG9iYWw6bmV0d29ya19jYXRlZ29yeSkNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgU2V0LU5ldENvbm5lY3Rpb25Qcm9maWxlIC1OZXR3b3JrQ2F0ZWdvcnkgJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5IHwgP3skXy5OYW1lIC1tYXRjaCAiJGdsb2JhbDphZHBuYW1lIn0NCiAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6bmV0Y29ubmVjdGlvbjEgPSBHZXQtTmV0Q29ubmVjdGlvblByb2ZpbGUNCg0KICAgICAgICAgICAgICAgICAgICAgICAgJEVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0ID0gTmV3LU9iamVjdCAtVHlwZU5hbWUgcHNvYmplY3QNCiAgICAgICAgICAgICAgICAgICAgICAgICRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdNZXNzYWdlOicgLVZhbHVlICQoJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5KQ0KICAgICAgICAgICAgICAgICAgICAgICAgJEVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ05hbWU6JyAtVmFsdWUgJCgkZ2xvYmFsOm5ldGNvbm5lY3Rpb24xLk5hbWUpDQogICAgICAgICAgICAgICAgICAgICAgICAkRWRpdGVkQWRhcHRlckluZm9PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnSW50ZXJmYWNlIEFsaWFzOicgLVZhbHVlICQoJGdsb2JhbDpuZXRjb25uZWN0aW9uMS5JbnRlcmZhY2VBbGlhcykNCiAgICAgICAgICAgICAgICAgICAgICAgICRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdOZXR3b3JrIENhdGVnb3J5OicgLVZhbHVlICQoW3N0cmluZ10kZ2xvYmFsOm5ldGNvbm5lY3Rpb24xLk5ldHdvcmtDYXRlZ29yeSkNCiAgICAgICAgICAgICAgICAgICAgICAgICRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdJUHY0IENvbm5lY3Rpdml0eTonIC1WYWx1ZSAkKFtzdHJpbmddJGdsb2JhbDpuZXRjb25uZWN0aW9uMS5JUHY0Q29ubmVjdGl2aXR5KQ0KICAgICAgICAgICAgICAgICAgICAgICAgJEVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ0lQdjYgQ29ubmVjdGl2aXR5OicgLVZhbHVlICQoW3N0cmluZ10kZ2xvYmFsOm5ldGNvbm5lY3Rpb24xLklQdjZDb25uZWN0aXZpdHkpDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6RWRpdGVkQWRhcHRlckluZm9PYmplY3RBcnJheSArPSAkRWRpdGVkQWRhcHRlckluZm9PYmplY3QNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJOZXR3b3JrIHR5cGUgY2hhbmdlZCINCiAgICAgICAgICAgICAgICAgICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAnTmFtZTonICsgJCgkZ2xvYmFsOm5ldGNvbm5lY3Rpb24xLk5hbWUpDQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gJ0ludGVyZmFjZSBBbGlhczonICsgJCgkZ2xvYmFsOm5ldGNvbm5lY3Rpb24xLkludGVyZmFjZUFsaWFzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICdOZXR3b3JrIENhdGVnb3J5OicgKyAkKCRnbG9iYWw6bmV0Y29ubmVjdGlvbjEuTmV0d29ya0NhdGVnb3J5KQ0KICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICdJUHY0IENvbm5lY3Rpdml0eTonICsgJCgkZ2xvYmFsOm5ldGNvbm5lY3Rpb24xLklQdjRDb25uZWN0aXZpdHkpDQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gJ0lQdjYgQ29ubmVjdGl2aXR5OicgKyAkKCRnbG9iYWw6bmV0Y29ubmVjdGlvbjEuSVB2NkNvbm5lY3Rpdml0eSkNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiggJGdsb2JhbDpuZXRjb25uZWN0aW9uLk5ldHdvcmtDYXRlZ29yeSAtZXEgJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5KQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOmNvZGUgPSAxDQogICAgICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5ID0gIlRoZSBOZXR3b3JrIGNhdGVnb3J5IGZvciAkKCRnbG9iYWw6bmV0Y29ubmVjdGlvbjEuTmFtZSkgaXMgYWxyZWFkeSBzZXQgdG8gJGdsb2JhbDpuZXR3b3JrX2NhdGVnb3J5Ig0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmKCQoR2V0LU5ldENvbm5lY3Rpb25Qcm9maWxlIHwgP3skXy5OYW1lIC1tYXRjaCAkZ2xvYmFsOmFkYXB0ZXJuYW1lfSkgLWVxICRudWxsKXsNCiAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpjb2RlID0gMg0KICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5ICs9ICJJbnZhbGlkIGFkYXB0ZXIgbmFtZSAkZ2xvYmFsOmFkYXB0ZXJuYW1lLiBUaGUgbmV0d29yayBhZGFwdGVyIGZvdW5kIGluIHRoaXMgbWFjaGluZSBhcmUgJGdsb2JhbDpzb2wiDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSANCiAgICAgICAgfQ0KICAgIH0NCiB9DQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tU2V0IFJlc3VsdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpmdW5jdGlvbiBTZXRSZXN1bHQgDQp7DQogICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdDb2RlJyAtVmFsdWUgJGdsb2JhbDpDb2RlDQoNCiAgICBpZigoJGdsb2JhbDpDb2RlIC1lcSAwKSAtb3IgKCRnbG9iYWw6Q29kZSAtZXEgMSkpDQogICAgew0KICAgICAgICAkc3RhdHVzTVNHID0gIiINCiAgICAgICAgaWYoJGdsb2JhbDpDb2RlIC1lcSAwKQ0KICAgICAgICB7DQogICAgICAgICAgICAkc3VjY2Vzc1N0cmluZyA9ICJTdWNjZXNzOiAiICsgIlRoZSBvcGVyYXRpb24gY29tcGxldGVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgICAgICRzdGF0dXNNU0cgPSAic3VjY2VzcyINCiAgICAgICAgfQ0KICAgICAgICBlbHNlDQogICAgICAgIHsNCiAgICAgICAgICAgICRzdWNjZXNzU3RyaW5nID0gIkZhaWw6ICIgKyAiVGhlIG9wZXJhdGlvbiBmYWlsZCB3aXRoIGVycm9yIg0KICAgICAgICAgICAgJHN0YXR1c01TRyA9ICJmYWlsIg0KICAgICAgICB9DQoNCiAgICAgICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdTdGF0dXMnIC1WYWx1ZSAkc3RhdHVzTVNHDQogICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAncmVzdWx0JyAtVmFsdWUgJHN1Y2Nlc3NTdHJpbmcNCiAgICAgICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdzdGRvdXQnIC1WYWx1ZSAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkNCiANCg0KICAgICAgICAkT3V0cHV0T2JqZWN0ID0gTmV3LU9iamVjdCAtVHlwZU5hbWUgcHNvYmplY3QNCg0KICAgICAgICBpZigkT3BlcmF0aW9uVHlwZSAtZXEgIlJlYWQiKQ0KICAgICAgICB7DQogICAgICAgICAgICAkT3V0cHV0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ0FkYXB0ZXInIC1WYWx1ZSAkZ2xvYmFsOkFkYXB0ZXJJbmZvT2JqZWN0QXJyYXkNCiAgICAgICAgfQ0KDQogICAgICAgIGlmKCRPcGVyYXRpb25UeXBlIC1lcSAiRWRpdCIpDQogICAgICAgIHsNCiAgICAgICAgICAgICRPdXRwdXRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTW9kZmllZCBOZXR3b3JrIEFkYXB0ZXInIC1WYWx1ZSAkZ2xvYmFsOkVkaXRlZEFkYXB0ZXJJbmZvT2JqZWN0QXJyYXkgIyRFZGl0ZWRBZGFwdGVySW5mb09iamVjdCB8IHNlbGVjdCAtVW5pcXVlDQogICAgICAgIH0NCg0KICAgICAgICAkUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ2RhdGFPYmplY3QnIC1WYWx1ZSAkT3V0cHV0T2JqZWN0DQoNCg0KICAgICAgICAjLS0tLS0tLS0tLS0tRXJyb3Igd2l0aCBTdWNjZXNzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiAgICAgICAgJGVycm9yQ291bnQ9IDANCiAgICAgICAgJEVycm9yT2JqZWN0QXJheT0gQCgpDQoNCiAgICAgICAgZm9yZWFjaCgkRXJyb3JNZXNzYWdlIGluICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkpDQogICAgICAgIHsNCiAgICAgICAgICAgDQogICAgICAgICAgICAkRXJyT2JqZWN0ID0gTmV3LU9iamVjdCAtVHlwZU5hbWUgcHNvYmplY3QNCiAgICAgICAgICAgICRFcnJPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnaWQnIC1WYWx1ZSAkZXJyb3JDb3VudA0KICAgICAgICAgICAgJEVyck9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICd0aXRsZScgLVZhbHVlICRFcnJvck1lc3NhZ2UNCiAgICAgICAgICAgICRFcnJPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnZGV0YWlsJyAtVmFsdWUgJEVycm9yTWVzc2FnZQ0KDQogICAgICAgICAgICAkRXJyb3JPYmplY3RBcmF5ICs9ICRFcnJPYmplY3QNCg0KICAgICAgICAgICAgJGVycm9yQ291bnQgPSAkZXJyb3JDb3VudCArMQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYoJEVycm9yT2JqZWN0QXJheS5Db3VudCAtZ3QgMCkNCiAgICAgICAgew0KICAgICAgICAgICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdzdGRlcnInIC1WYWx1ZSAkRXJyb3JPYmplY3RBcmF5DQogICAgICAgIH0NCg0KICAgIH0NCiAgICBlbHNlDQogICAgew0KICAgICAgICAkUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1N0YXR1cycgLVZhbHVlICJmYWlsIg0KDQogICAgICAgICRFcnJvck9iamVjdEFyYXk9IEAoKQ0KICAgICAgICAkZXJyb3JDb3VudD0gMA0KICAgICAgICAkZXJyb3JTdHJpbmcgPSAiRXJyb3I6ICINCg0KICAgICAgICBmb3JlYWNoKCRFcnJvck1lc3NhZ2UgaW4gJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSkNCiAgICAgICAgew0KICAgICAgICAgICAgJGVycm9yU3RyaW5nICs9ICRFcnJvck1lc3NhZ2UgKyAiLCAiDQogICAgICAgICAgICANCiAgICAgICAgICAgICRFcnJPYmplY3QgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBwc29iamVjdA0KICAgICAgICAgICAgJEVyck9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdpZCcgLVZhbHVlICRlcnJvckNvdW50DQogICAgICAgICAgICAkRXJyT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ3RpdGxlJyAtVmFsdWUgJEVycm9yTWVzc2FnZQ0KICAgICAgICAgICAgJEVyck9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdkZXRhaWwnIC1WYWx1ZSAkRXJyb3JNZXNzYWdlDQoNCiAgICAgICAgICAgICRFcnJvck9iamVjdEFyYXkgKz0gJEVyck9iamVjdA0KDQogICAgICAgICAgICAkZXJyb3JDb3VudCA9ICRlcnJvckNvdW50ICsxDQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAncmVzdWx0JyAtVmFsdWUgJGVycm9yU3RyaW5nDQogICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnc3Rkb3V0JyAtVmFsdWUgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheQ0KICAgICAgICAkUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ3N0ZGVycicgLVZhbHVlICRFcnJvck9iamVjdEFyYXkNCiAgICB9DQp9DQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tRGlzcGxheSBSZXN1bHQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpmdW5jdGlvbiBEaXNwbGF5UmVzdWx0IA0Kew0KDQogICAgaWYoJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbi5NYWpvciAtZ3QgMikNCiAgICB7DQogICAgICAgICRKU09OUmVzdWx0PSAkUmVzdWx0T2JqZWN0fENvbnZlcnRUby1Kc29uIC1EZXB0aCA2DQogICAgICAgICRKU09OUmVzdWx0DQogICAgfQ0KICAgIGVsc2UNCiAgICB7DQogICAgICAgICRKU09OUmVzdWx0PSAkUmVzdWx0T2JqZWN0fENvbnZlcnRUby1KU09OUFMyIC1tYXhEZXB0aCA2DQogICAgICAgICRKU09OUmVzdWx0DQogICAgfQ0KfQ0KDQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tRXhlY3V0ZSBGdW5jdGlvbnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KY2xzDQoNCmlmKENoZWNrLVByZUNvbmRpdGlvbikNCnsNCiAgICBpZigkT3BlcmF0aW9uVHlwZSAtZXEgIiIpDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAyDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlR5cGUgaXMgcmVxdWllZCIgDQogICAgfQ0KICAgIGVsc2UNCiAgICB7DQogICAgICAgIGlmKCRPcGVyYXRpb25UeXBlIC1lcSAiUmVhZCIpDQogICAgICAgIHsNCiAgICAgICAgICAgIFJlYWQtTmV0d29yaw0KICAgICAgICB9DQoNCiAgICAgICAgaWYoJE9wZXJhdGlvblR5cGUgLWVxICJFZGl0IikNCiAgICAgICAgew0KICAgICAgICAgICAgRWRpdC1OZXR3b3JrIC1hZGFwdGVybmFtZSAkQWRhcHRlck5hbWUgLW5ldHdvcmtfY2F0ZWdvcnkgJE5ldHdvcmtDYXRlZ29yeQ0KICAgICAgICB9DQogICAgfQ0KICAgICAgICAgIA0KICAgIFNldFJlc3VsdA0KICAgIERpc3BsYXlSZXN1bHQgDQp9DQplbHNlDQp7DQogICAgU2V0UmVzdWx0DQogICAgRGlzcGxheVJlc3VsdA0KfQ0K","jsonSchema":{"type":"object","properties":{"OperationType":{"type":"string","title":"Operation Type","minLength":1},"AdapterName":{"type":"string","title":"Adapter Name","minLength":1},"NetworkCategory":{"type":"string","title":"Network Category","minLength":1}},"required":["OperationType"],"additionalProperties": false},"uiSchema":{"OperationType":{"ui:autofocus":true,"classNames":"col-sm-12"},"AdapterName":{"ui:autofocus":true,"classNames":"col-sm-12"},"NetworkCategory":{"ui:autofocus":true,"classNames":"col-sm-12"},"ui:order":["OperationType", "AdapterName", "NetworkCategory"]},"isHDScript":true}