{"id":"0863398d-385d-11ea-982d-00155d130b01","partnerId":"00000000-0000-0000-0000-000000000000","category":["Application"],"description":"Installs a partner-defined application on Windows desktops and servers","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":14400,"failureMessage":"Executed with errors","successMessage":"Executed successfully","internal":false,"name":"Create own application (new)","tags":["Windows 7","Windows 10"],"sequence":true,"content":"","jsonSchema":{"additionalproperties":false,"definitions":{"download_location":{"dependencies":{"LocationType":{"oneOf":[{"properties":{"LocationType":{"enum":["ftp"]},"ftpPath":{"title":"FTP","type":"string"},"password":{"title":"Password","type":"string"},"userName":{"title":"User Name","type":"string"}},"required":["ftpPath"]},{"properties":{"LocationType":{"enum":["http"]},"httpPath":{"title":"HTTP","type":"string"}},"required":["httpPath"]},{"properties":{"LocationType":{"enum":["https"]},"httpsPath":{"title":"HTTPS","type":"string"}},"required":["httpsPath"]},{"properties":{"LocationType":{"enum":["network"]},"networkPath":{"title":"Network","type":"string"},"password":{"title":"Password","type":"string"},"userName":{"title":"User Name","type":"string"}},"required":["networkPath"]},{"properties":{"LocationType":{"enum":["local"]},"localPath":{"title":"Local","type":"string"}},"required":["localPath"]}]}},"properties":{"LocationType":{"default":"ftp","enum":["ftp","http","https","local","network"],"enumNames":["FTP","HTTP","HTTPS","LOCAL","NETWORK"],"title":"Location","type":"string"}},"type":"object"},"installer_application_details":{"properties":{"InstallExecuteMode":{"default":"Install","enum":["Install"],"title":"Execute Mode","type":"string"},"InstallationParameter":{"title":"Installation Parameter","type":"string"},"MD5CheckSum":{"title":"MD5 Checksum","type":"string"},"PackageName":{"title":"Package/Exe name","type":"string"},"TypeOfApplication":{"$ref":"#/definitions/type_of_application"}},"required":["PackageName"],"type":"object"},"post_and_pre_check_type":{"default":"Check if file exists","enum":["Check if file exists","Check if registry information exists","Check if Add / Remove program exists","Check for file version"],"title":"Type","type":"string"},"type_of_application":{"default":"exe","enum":["exe","msi"],"enumNames":["Regular Setup Executables(Exe)","MSI Package"],"title":"Type Of Application","type":"string"},"uninstaller_application_details":{"dependencies":{"TypeOfApplication":{"oneOf":[{"properties":{"TypeOfApplication":{"enum":["exe"]},"UninstallExecuteMode":{"default":"Uninstall","enum":["Uninstall"],"title":"Execute Mode","type":"string"},"UninstallationParameter":{"title":"Uninstallation Parameter","type":"string"},"UninstallationPath":{"title":"Uninstallation Path","type":"string"}},"required":["UninstallationPath"]},{"properties":{"TypeOfApplication":{"enum":["msi"]},"UninstallExecuteMode":{"default":"Uninstall","enum":["Uninstall"],"title":"Execute Mode","type":"string"},"UninstallationParameter":{"title":"Uninstallation Parameter","type":"string"}}}]}},"properties":{"TypeOfApplication":{"$ref":"#/definitions/type_of_application"}},"type":"object"}},"dependencies":{"PerformPostCheck":{"oneOf":[{"dependencies":{"PostCheckType":{"oneOf":[{"properties":{"PostCheckAction_for_PostCheckType_1":{"default":"If the file exists then mark success","enum":["If the file exists then mark success","If the file does not exists then mark success","If the file exists then mark Fail","If the file does not exists then mark Fail"],"title":"Action","type":"string"},"PostCheckFileName":{"title":"File Name","type":"string"},"PostCheckType":{"enum":["Check if file exists"]}},"required":["PostCheckFileName"]},{"properties":{"PostCheckAction_for_PostCheckType_2":{"default":"If the key exists then mark success","enum":["If the key exists then mark success","If the key does not exists then mark success","If the key exists then mark fail","If the key not exists then mark fail","If the key exists and value matches then mark success","If the key exists and value does not match then mark success","If the key exists and value matches then mark fail","If the key exists and value does not match then mark fail","If the key exists and value exists and data matches then mark success","If the key exists and value exists and data does not match then mark success","If the key exists and value exists and data matches then mark fail","If the key exists and value exists and data does not match then mark fail"],"title":"Action","type":"string"},"PostCheckData":{"title":"Data","type":"string"},"PostCheckKey":{"title":"Key","type":"string"},"PostCheckType":{"enum":["Check if registry information exists"]},"PostCheckValue":{"title":"Value","type":"string"}},"required":["PostCheckKey"]},{"properties":{"PostCheckAction_for_PostCheckType_3":{"default":"If the program exists then mark success","enum":["If the program exists then mark success","If the program does not exists then mark success","If the program exists then mark fail","If the program does not exists then mark fail"],"title":"Action","type":"string"},"PostCheckProgram":{"title":"Program","type":"string"},"PostCheckType":{"enum":["Check if Add / Remove program exists"]}},"required":["PostCheckProgram"]},{"properties":{"PostCheckAction_for_PostCheckType_4":{"default":"If the file exists and the version matches then mark success","enum":["If the file exists and the version matches then mark success","If the file exists and version does not match then mark success","If the file exists and version is greater than specified then mark success","If the file exists and version is lower than specified then mark success","If the file exists and the version is matches then mark fail","If the file exists and version does not match then mark fail","If the file exists and version is greater than specified then mark fail","If the file exists and version is lower than specified then mark fail","If the file does not exists then mark fail"],"title":"Action","type":"string"},"PostCheckFileName":{"title":"File Name","type":"string"},"PostCheckType":{"enum":["Check for file version"]},"PostCheckVersion":{"title":"Version","type":"string"}},"required":["PostCheckFileName"]}]}},"properties":{"PerformPostCheck":{"enum":[true]},"PostCheckType":{"$ref":"#/definitions/post_and_pre_check_type"}}},{"properties":{"PerformPostCheck":{"enum":[false]}}}]},"PerformPreCheck":{"oneOf":[{"dependencies":{"PreCheckType":{"oneOf":[{"properties":{"PreCheckAction_for_PreCheckType_1":{"default":"If file exists then continue","enum":["If file exists then continue","If file does not exists then continue","If file exists then abort","If file does not exists then abort"],"title":"Action","type":"string"},"PreCheckFileName":{"title":"File Name","type":"string"},"PreCheckType":{"enum":["Check if file exists"]}},"required":["PreCheckFileName"]},{"properties":{"PreCheckAction_for_PreCheckType_2":{"default":"If key exists then continue","enum":["If key exists then continue","If key does not exists then continue","If key exists then abort","If key not exists then abort","If key exists and value matches then continue","If key exists and value does not matches then continue","If key exists and value matches then abort","If key exists and value does not matches then abort","If key exists and value exists and data matches then continue","If key exists and value exists and data does not matches then continue","If key exists and value exists and data matches then abort","If key exists and value exists and data does not matches then abort"],"title":"Action","type":"string"},"PreCheckData":{"title":"Data","type":"string"},"PreCheckKey":{"title":"Key","type":"string"},"PreCheckType":{"enum":["Check if registry information exists"]},"PreCheckValue":{"title":"Value","type":"string"}},"required":["PreCheckKey"]},{"properties":{"PreCheckAction_for_PreCheckType_3":{"default":"If the program exists then continue","enum":["If the program exists then continue","If the program does not exists then continue","If the program exists then abort","If the program does not exists then abort"],"title":"Action","type":"string"},"PreCheckProgram":{"title":"Program","type":"string"},"PreCheckType":{"enum":["Check if Add / Remove program exists"]}},"required":["PreCheckProgram"]},{"properties":{"PreCheckAction_for_PreCheckType_4":{"default":"If file exists and version equal to specified then continue","enum":["If file exists and version equal to specified then continue","If file exists and version not equal to specified then continue","If file exists and version higher to specified then continue","If file exists and version lower to specified then continue","If file exists and version equal to specified then abort","If file exists and version not equal to specified then abort","If file exists and version higher to specified then abort","If file exists and version lower to specified then abort","If file does not exists then abort"],"title":"Action","type":"string"},"PreCheckFileName":{"title":"File Name","type":"string"},"PreCheckType":{"enum":["Check for file version"]},"PreCheckVersion":{"title":"Version","type":"string"}},"required":["PreCheckFileName"]}]}},"properties":{"PerformPreCheck":{"enum":[true]},"PreCheckType":{"$ref":"#/definitions/post_and_pre_check_type"}}},{"properties":{"PerformPreCheck":{"enum":[false]}}}]},"TypeOfInstaller":{"oneOf":[{"properties":{"Download_Location":{"$ref":"#/definitions/download_location","title":"Download Details"},"Installer_Application_Details":{"$ref":"#/definitions/installer_application_details","title":"Application Details"},"TypeOfInstaller":{"enum":["Installer"]}}},{"properties":{"TypeOfInstaller":{"enum":["UnInstaller"]},"Uninstaller_Application_Details":{"$ref":"#/definitions/uninstaller_application_details","title":"Application Details"}}}]}},"properties":{"PerformPostCheck":{"title":"Perform post check","type":"boolean"},"PerformPreCheck":{"title":"Perform pre check","type":"boolean"},"TypeOfInstaller":{"default":"Installer","enum":["Installer","UnInstaller"],"title":"Type Of Installer","type":"string"}},"type":"object"},"uiSchema":{"Download_Location":{"LocationType":{"classNames":"col-sm-4"},"classNames":"col-sm-12","ftpPath":{"classNames":"col-sm-8","ui:placeholder":"ftp://mysite.com/Mysetup"},"httpPath":{"classNames":"col-sm-7","ui:placeholder":"http://mysite.com/Mysetup"},"httpsPath":{"classNames":"col-sm-7","ui:placeholder":"https://mysite.com/Mysetup"},"localPath":{"classNames":"col-sm-7","ui:placeholder":"C:\\package\\setup"},"networkPath":{"classNames":"col-sm-8","ui:placeholder":"\\\\host\\\\sharename\\\\package"},"password":{"classNames":"col-sm-6","ui:widget":"password"},"ui:order":["LocationType","ftpPath","httpPath","httpsPath","localPath","networkPath","userName","password"],"userName":{"classNames":"col-sm-6","validationSchema":{"notEmpty":"userName","required":["password"],"type":"requiredFieldsIfNotEmpty"}}},"Installer_Application_Details":{"InstallExecuteMode":{"classNames":"col-sm-5"},"InstallationParameter":{"classNames":"col-sm-6"},"MD5CheckSum":{"classNames":"col-sm-7"},"PackageName":{"classNames":"col-sm-6","ui:placeholder":"Eg: setup.exe or setup.msi"},"TypeOfApplication":{"classNames":"col-sm-12","ui:options":{"inline":true},"ui:widget":"radio"},"classNames":"col-sm-12","ui:order":["TypeOfApplication","PackageName","InstallationParameter","MD5CheckSum","InstallExecuteMode"]},"PerformPostCheck":{"classNames":"col-sm-12"},"PerformPreCheck":{"classNames":"col-sm-12"},"PostCheckAction_for_PostCheckType_1":{"classNames":"col-sm-8"},"PostCheckAction_for_PostCheckType_2":{"classNames":"col-sm-8"},"PostCheckAction_for_PostCheckType_3":{"classNames":"col-sm-8"},"PostCheckAction_for_PostCheckType_4":{"classNames":"col-sm-8"},"PostCheckData":{"classNames":"col-sm-7"},"PostCheckFileName":{"classNames":"col-sm-7"},"PostCheckKey":{"classNames":"col-sm-7"},"PostCheckProgram":{"classNames":"col-sm-7"},"PostCheckType":{"classNames":"col-sm-6"},"PostCheckValue":{"classNames":"col-sm-7"},"PostCheckVersion":{"classNames":"col-sm-7"},"PreCheckAction_for_PreCheckType_1":{"classNames":"col-sm-8"},"PreCheckAction_for_PreCheckType_2":{"classNames":"col-sm-8"},"PreCheckAction_for_PreCheckType_3":{"classNames":"col-sm-8"},"PreCheckAction_for_PreCheckType_4":{"classNames":"col-sm-8"},"PreCheckData":{"classNames":"col-sm-7"},"PreCheckFileName":{"classNames":"col-sm-7"},"PreCheckKey":{"classNames":"col-sm-7"},"PreCheckProgram":{"classNames":"col-sm-7"},"PreCheckType":{"classNames":"col-sm-6"},"PreCheckValue":{"classNames":"col-sm-7"},"PreCheckVersion":{"classNames":"col-sm-7"},"TypeOfInstaller":{"classNames":"col-sm-12","ui:options":{"inline":true},"ui:widget":"radio"},"UninstallationParameter":{"classNames":"col-sm-8","ui:help":"Eg. for EXE : /SILENT  and for MSI : msiexec.exe /X {58D379F7-62BC-4748-8237-FE071ECE797C}"},"UninstallationPath":{"classNames":"col-sm-8"},"Uninstaller_Application_Details":{"TypeOfApplication":{"classNames":"col-sm-12","ui:options":{"inline":true},"ui:widget":"radio"},"UninstallExecuteMode":{"classNames":"col-sm-4 col-sm-offset-right-8"},"UninstallationParameter":{"classNames":"col-sm-6"},"UninstallationPath":{"classNames":"col-sm-6"},"classNames":"col-sm-12","ui:order":["TypeOfApplication","UninstallationPath","UninstallationParameter","UninstallExecuteMode"]},"ui:order":["TypeOfInstaller","Download_Location","Installer_Application_Details","Uninstaller_Application_Details","PerformPreCheck","PreCheckType","PreCheckFileName","PreCheckKey","PreCheckValue","PreCheckData","PreCheckProgram","PreCheckVersion","PreCheckAction_for_PreCheckType_1","PreCheckAction_for_PreCheckType_2","PreCheckAction_for_PreCheckType_3","PreCheckAction_for_PreCheckType_4","PerformPostCheck","PostCheckType","PostCheckFileName","PostCheckKey","PostCheckValue","PostCheckData","PostCheckProgram","PostCheckVersion","PostCheckAction_for_PostCheckType_1","PostCheckAction_for_PostCheckType_2","PostCheckAction_for_PostCheckType_3","PostCheckAction_for_PostCheckType_4"]},"isHDScript":false}