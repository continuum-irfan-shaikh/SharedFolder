{"id":"3b1594af-7cb5-11e9-881b-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Pull S.M.A.R.T Information","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Successfully Executed","internal":false,"name":"S.M.A.R.T Information","tags":["Windows 7","Windows 10"],"sequence":true,"content":"",
 "jsonSchema":"",
"uiSchema":"",
"isHDScript":true}
