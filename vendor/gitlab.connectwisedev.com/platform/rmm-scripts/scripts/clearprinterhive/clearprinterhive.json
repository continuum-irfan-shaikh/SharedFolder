{"id":"cc8a69ca-18bf-11e9-8a16-00155d130b17","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"The Script is designed to clear the print hive of a specific printer or all print hive","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Script executed Successfully","internal":false,"name":"HD Clear Print Hive","tags":["Windows 7","Windows 10"],"sequence":true,"content":"IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIy0tLS0tLS1DbGVhciBQcmludGVyIEhpdmUgLS0tLS0tLS0tLS0tLS0tIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogCjwjIAogJGJBbGxDbGVhckhpdmUgPSAkZmFsc2UKICRQcmludGVyTmFtZSA9ICdIUCBMYXNlckpldCBQcm8gTUZQIE0xMjctTTEyOCBQQ0xtUzEnCiAkUmVnQmFja3VwUGF0aE5hbWUgPSdDOlxUZW1wMicKICRSZWdCYWNrdXBGaWxlTmFtZSA9J0JhY2t1cCcKICM+CiAkdGltZW91dFNlY29uZHMgPSAzMAogJENvbXB1dGVyTmFtZSA9ICRlbnY6Y29tcHV0ZXJuYW1lCiAkUmVnUHJpbnRQYXRoID0gJ0hLTE06XFNZU1RFTVxDdXJyZW50Q29udHJvbFNldFxDb250cm9sXFByaW50JwogJHJlZ2lzdHJ5ID0gJ0hLRVlfTE9DQUxfTUFDSElORVxTWVNURU1cQ3VycmVudENvbnRyb2xTZXRcQ29udHJvbFxQcmludCcKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjLS0tLS0tQ2hlY2sgUHJlIENvbmRpdGlvbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgpGdW5jdGlvbiBDaGVjay1QcmVDb25kaXRpb257CgogICAgJElzQ29udGludWVkID0gJHRydWUKICAgIFdyaXRlLUhvc3QgIkNoZWNraW5nIFByZWNvbmRpdGlvbnMgc3RhcnRlZC4uLiIKICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICBXcml0ZS1Ib3N0ICIgICAgIiAKICAgCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAjIFN0ZXAgMQogICAgIyBWZXJpZnkgUG93ZXJTaGVsbCBWZXJzaW9uCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgogICAgaWYoLU5PVCgkUFNWZXJzaW9uVGFibGUuUFNWZXJzaW9uLk1ham9yIC1nZSAyKSl7CiAgICAgIAogICAgICAgJElzQ29udGludWVkID0gJGZhbHNlCiAgICAgICBXcml0ZS1XYXJuaW5nICJQb3dlcnNoZWxsIHZlcnNpb24gYmVsb3cgMi4wIGlzIG5vdCBzdXBwb3J0ZWQiCiAgICAgICByZXR1cm4gJGZhbHNlCgogICAgfWVsc2V7CiAgICAgICAgICAgICAKICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJQb3dlclNoZWxsIFZlcnNpb24gOiAkKCRQU1ZlcnNpb25UYWJsZS5QU1ZlcnNpb24uTWFqb3IpIiAKICAgICAgICAgCiAgICB9CiAgICAKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAgICAgCiAgICAjIFN0ZXAgMgogICAgIyBWZXJpZnkgb3BlcmF0aW5nIHN5c3RlbSBWZXJzaW9uCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCiAgICBpZiggJElzQ29udGludWVkIC1hbmQgLW5vdChbU3lzdGVtLkVudmlyb25tZW50XTo6T1NWZXJzaW9uLlZlcnNpb24ubWFqb3IgLWdlIDYpKXsKCiAgICAgICRJc0NvbnRpbnVlZCA9ICRmYWxzZQogICAgICBXcml0ZS1XYXJuaW5nICJQb3dlcnNoZWxsIFNjcmlwdCBzdXBwb2VydHMgV2luZG93IDcsIFdpbmRvdyAyMDA4UjIgYW5kIGhpZ2hlciB2ZXJzaW9uIG9wZXJhdGluZyBzeXN0ZW0iCiAgICAgIHJldHVybiAkZmFsc2UKCiAgICB9ZWxzZXsKICAgICAgICAgICAgICAKICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgMTAgIk9wZXJhdGluZyBTeWF0ZW0gVmVyc2lvbiA6ICQoW1N5c3RlbS5FbnZpcm9ubWVudF06Ok9TVmVyc2lvbi5WZXJzaW9uLm1ham9yKSIgCiAgICAgICAKICAgIH0KICAgIAogICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICAjIFN0ZXAgMwogICAgICMgVmVyaWZ5IFN0YXJ0TW9kZSBpZiBEaXNhYmxlZAogICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCiAgICAgaWYoICRJc0NvbnRpbnVlZCAtYW5kIChHZXQtV21pT2JqZWN0IC1DbGFzcyBXaW4zMl9TZXJ2aWNlIC1Qcm9wZXJ0eSBTdGFydE1vZGUgLUZpbHRlciAiTmFtZT0nU3Bvb2xlciciKS5TdGFydE1vZGUgLWVxICJEaXNhYmxlZCIpewogICAgICAgIAogICAgICAgICRJc0NvbnRpbnVlZCA9ICRmYWxzZQogICAgICAgIHdyaXRlLWhvc3QgIlNlcnZpY2UgU3RhdHVzIDoiIChHZXQtU2VydmljZSB8IFdoZXJlIHskXy5uYW1lIC1lcSAnU3Bvb2xlcid9KS5TdGF0dXMKICAgICAgICBXcml0ZS1XYXJuaW5nICJTcG9vbGVyIFNlcnZpY2UgaXMgZGlzYWJsZWQsIFBsZWFzZSBlbmFibGUgaXQuIiAKICAgICAgICByZXR1cm4gJGZhbHNlCgogICAgIH1lbHNlewoKICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJTcG9vbGVyIFNlcnZpY2UgU3RhcnR1cFR5cGUgOiIgKEdldC1XbWlPYmplY3QgLUNsYXNzIFdpbjMyX1NlcnZpY2UgLVByb3BlcnR5IFN0YXJ0TW9kZSAtRmlsdGVyICJOYW1lPSdTcG9vbGVyJyIpLlN0YXJ0TW9kZSAKICAgICAgICAgCiAgICAgfSAgCiAgICAgCiAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgICMgU3RlcCA0CiAgICAgIyBHZXQgZGVwZW5kZW50IFNlcnZpY2VzICAKICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgogICAgIENoZWNrU2VydmljZVN0YXR1cwoKICAgICBpZigkSXNDb250aW51ZWQpewogICAgICAKICAgICAgICBHZXQtU2VydmljZSAtQ04gLiB8IFdoZXJlLU9iamVjdCB7JF8ubmFtZSAtZXEgJ1Nwb29sZXInfSB8IEZvckVhY2gtT2JqZWN0IHsgCiAgICAgICAgCiAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJTZXJ2aWNlIG5hbWUgOiAkKCRfLm5hbWUpIiAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICBpZigkXy5EZXBlbmRlbnRTZXJ2aWNlcykgIHsgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAzICJgdFNlcnZpY2VzIHRoYXQgZGVwZW5kIG9uICQoJF8ubmFtZSkiIAogICAgICAgICAgICAgICAgICBmb3JlYWNoKCRzIGluICRfLkRlcGVuZGVudFNlcnZpY2VzKXsKICAgICAgICAgICAgICAgICAgV3JpdGUtSG9zdCAiYHRgdCIgKyAkcy5uYW1lIAogICAgICAgICAgICAgICAgICAgfSAKICAgICAgICAgICAgICAgIH0gI2VuZCBpZiBEZXBlbmRlbnRTZXJ2aWNlcyAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIGlmKCRfLlJlcXVpcmVkU2VydmljZXMpIHsKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgV3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDMgImB0U2VydmljZXMgcmVxdWlyZWQgYnkgJCgkXy5uYW1lKSIgCiAgICAgICAgICAgICAgICAgIGZvcmVhY2goJHIgaW4gJF8uUmVxdWlyZWRTZXJ2aWNlcykgewoKICAgICAgICAgICAgICAgICAgIFdyaXRlLUhvc3QgImB0YHQiICsgJHIubmFtZSAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCAtbm90KChHZXQtU2VydmljZSB8IFdoZXJlIHskXy5uYW1lIC1lcSAkci5uYW1lfSkuU3RhdHVzIC1lcSAiUnVubmluZyIpKXsgCiAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgR2V0LVNlcnZpY2UgJHIubmFtZSB8IFdoZXJlIHskXy5TdGF0dXMgLWVxICdTdG9wcGVkJ30gfCBTdGFydC1TZXJ2aWNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdGB0ICQoJHIubmFtZSkgU2VydmljZSBTdGFydGVkIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7CiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1Ib3N0IC1Gb3JlZ3JvdW5kQ29sb3IgMTAgImB0YHQgJCgkci5uYW1lKSBTZXJ2aWNlIGlzIHJ1bm5pbmciCgogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgfSAKICAgICAgICAgICAgICAgIH0gI2VuZCBpZiBEZXBlbmRlbnRTZXJ2aWNlcyAKICAgICAgICAgICAgfSAjZW5kIGZvcmVhY2gtb2JqZWN0CiAgICAgCiAgICAgfQogICAgCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICMgU3RlcCA1CiAgICAjIFZlcmlmeSBTcG9vbGVyIFNlcnZpY2UgcnVubmluZyBzdGF0dXMKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoKICAgIGlmKCRJc0NvbnRpbnVlZCAtYW5kIC1ub3QoKEdldC1TZXJ2aWNlIHwgV2hlcmUgeyRfLm5hbWUgLWVxICdTcG9vbGVyJ30pLlN0YXR1cyAtZXEgIlJ1bm5pbmciKSl7IAogICAgICAKICAgICAgICBHZXQtU2VydmljZSBTcG9vbGVyIHwgV2hlcmUgeyRfLlN0YXR1cyAtZXEgJ1N0b3BwZWQnfSB8IFN0YXJ0LVNlcnZpY2UgIAogICAgICAgIAogICAgICAgIFdyaXRlLUhvc3QgIiAgICAiCiAgICAgICAgV3JpdGUtSG9zdCAiU3Bvb2xlciBTZXJ2aWNlIFN0YXJ0ZWQiCiAgICB9CiAgICBlbHNlewogICAgICAgIAogICAgICAgICBXcml0ZS1Ib3N0ICIgICAgIgogICAgICAgIFdyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiU3Bvb2xlciBTZXJ2aWNlIGlzIHJ1bm5pbmciCgogICAgfQoKCiAgICAKICAgIFdyaXRlLUhvc3QgIiAgICAiCiAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHQgQ2hlY2tpbmcgUHJlY29uZGl0aW9uIENvbXBsZXRlZCIKCiAgICByZXR1cm4gJHRydWUKfQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMtLS0tLS1HZXQgUHJpbnRlciBMaXN0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCkZ1bmN0aW9uIEdldFByaW50ZXJzKFtTdHJpbmddICRQcmludGVyTmFtZSl7CgogICAgV3JpdGUtSG9zdCAiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIKICAgIHdyaXRlLWhvc3QgIlJldHJpdmluZyBwcmludGVycyIKICAgIFdyaXRlLUhvc3QgIiIKCiAgICB0cnkKICAgIHsKICAgICAgICAkUHJpbnRlckNvdW50ID0wCgogICAgICAgIGlmKCRiQWxsQ2xlYXJIaXZlIC1lcSAkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgIEdldC1XTUlPYmplY3QgLUNsYXNzIFdpbjMyX1ByaW50ZXIgLUNvbXB1dGVyICRjb21wdXRlck5hbWUgfCBGb3JFYWNoLU9iamVjdCB7IAogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDggIlByaW50ZXIgbmFtZSA6ICQoJF8ubmFtZSkiIAogICAgICAgICAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiRHJpdmVyIDogJCgkXy5Ecml2ZXJOYW1lKSIKCiAgICAgICAgICAgICAgICAkUHJpbnRlckNvdW50ID0gJFByaW50ZXJDb3VudCArMQogICAgICAgICAgICB9ICAKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgaWYgKChHZXQtV01JT2JqZWN0IC1DbGFzcyBXaW4zMl9QcmludGVyIC1Db21wdXRlciAkY29tcHV0ZXJOYW1lIHwgV2hlcmUtT2JqZWN0IHsgJF8ubmFtZSAtZXEgJFByaW50ZXJOYW1lIH0pIC1lcSAkbnVsbCkgCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIEdldC1XTUlPYmplY3QgLUNsYXNzIFdpbjMyX1ByaW50ZXIgLUNvbXB1dGVyICRjb21wdXRlck5hbWUgfCBGb3JFYWNoLU9iamVjdCB7IAogICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJQcmludGVyIG5hbWUgOiAkKCRfLm5hbWUpIiAKICAgICAgICAgICAgICAgICAgICAjd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJEcml2ZXIgOiAkKCRfLkRyaXZlck5hbWUpIgoKICAgICAgICAgICAgICAgICAgICAkUHJpbnRlckNvdW50ID0gJFByaW50ZXJDb3VudCArMQogICAgICAgICAgICAgICAgfSAKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBHZXQtV01JT2JqZWN0IC1DbGFzcyBXaW4zMl9QcmludGVyIC1Db21wdXRlciAkY29tcHV0ZXJOYW1lIHwgV2hlcmUtT2JqZWN0IHsgJF8ubmFtZSAtZXEgJFByaW50ZXJOYW1lIH0gfCBGb3JFYWNoLU9iamVjdCB7IAogICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJQcmludGVyIG5hbWUgOiAkKCRfLm5hbWUpIiAKICAgICAgICAgICAgICAgICAgICAjd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJEcml2ZXIgOiAkKCRfLkRyaXZlck5hbWUpIgoKICAgICAgICAgICAgICAgICAgICAkUHJpbnRlckNvdW50ID0gJFByaW50ZXJDb3VudCArMQogICAgICAgICAgICAgICAgfSAKICAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICMtLS0tLS0tLS0KICAgICAgICBpZigkUHJpbnRlckNvdW50IC1lcSAwKQogICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLUhvc3QgIiIKICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJGb3VuZCBubyBQcmludGVyIHRvIERlbGV0ZSIKICAgICAgICAgICAgV3JpdGUtSG9zdCAiIgoKICAgICAgICAgICAgcmV0dXJuICRmbGFzZQogICAgICAgICB9CiAgICAgICAgIGVsc2UKICAgICAgICAgewogICAgICAgICAgICByZXR1cm4gJHRydWUKICAgICAgICAgfQogICAgfQogICAgY2F0Y2gKICAgIHsKICAgICAgICBXcml0ZS1XYXJuaW5nICJFcnJvciB3aGlsZSBzZWFyY2hpbmcgcHJpbnRlcjogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiCiAgICAgICAgcmV0dXJuICRmbGFzZQogICAgfQp9CgpGdW5jdGlvbiBHZXRQcmludGVyc19WOChbU3RyaW5nXSAkUHJpbnRlck5hbWUpewoKICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICB3cml0ZS1ob3N0ICJSZXRyaXZpbmcgcHJpbnRlcnMiCiAgICBXcml0ZS1Ib3N0ICIiCgogICAgdHJ5CiAgICB7CiAgICAgICAgaWYoJGJBbGxDbGVhckhpdmUgLWVxICR0cnVlKQogICAgICAgIHsKICAgICAgICAgICAgR2V0LVByaW50ZXIgfEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJOYW1lIDogJCgkXy5OYW1lKSIgCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJFNlbFByaW50ZXIgPSBHZXQtUHJpbnRlciAtTmFtZSAkUHJpbnRlck5hbWUKCiAgICAgICAgICAgIGlmKCRTZWxQcmludGVyIC1lcSAkbnVsbCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgR2V0LVByaW50ZXIgfEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiTmFtZSA6ICQoJF8uTmFtZSkiIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDggIlByaW50ZXIgbmFtZSA6ICRQcmludGVyTmFtZSIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIGNhdGNoCiAgICB7CiAgICAgICAgV3JpdGUtV2FybmluZyAiRXJyb3Igd2hpbGUgc2VhcmNoaW5nIHByaW50ZXI6ICRfLmV4Y2VwdGlvbi5tZXNzYWdlIgogICAgICAgIHJldHVybiAkZmxhc2UKICAgIH0KfQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMtLS0tLS1UYWtlIEJhY2t1cCBvZiBSZWdpc3RyeS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCkZ1bmN0aW9uIEJhY2t1cFJlZ2lzdHJ5UGF0aCgpewoKICAgIHBhcmFtICgKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0kUGF0aCwKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0kQmFja3VwUGF0aCwKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0kQmFja3VwRmlsZU5hbWUKICAgICAgICApCgogICAgdHJ5CiAgICB7CiAgICAgICAgV3JpdGUtSG9zdCAiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIKICAgICAgICBXcml0ZS1Ib3N0ICJDaGVja2luZyBSZWdpc3RyeTogJFBhdGgiCgogICAgICAgIGlmKFRlc3QtUGF0aCAkUGF0aCkKICAgICAgICB7CiAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdCBSZWdpc3RyeSBFeGlzdHM6IHRydWUiCgoJICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdCBCYWNrdXAgUGF0aDogJCgkQmFja3VwUGF0aCkiCgogICAgICAgICAgICAjTmV3LUl0ZW0gLUl0ZW1UeXBlIERpcmVjdG9yeSAtRm9yY2UgLVBhdGggJEJhY2t1cFBhdGggLWVycm9yQWN0aW9uIENvbnRpbnVlCgogICAgICAgICAgICBpZihUZXN0LVBhdGggJEJhY2t1cFBhdGgpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRGaWxlUGF0aD0gJEJhY2t1cFBhdGggKyAiXCIrICRCYWNrdXBGaWxlTmFtZSArICJfIisgKGdldC1kYXRlIC1Gb3JtYXQgZGQtTU0teS1oaC1tbS1zcykgKyAiLnJlZyIgCgogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0IENyZWF0aW5nIEJhY2t1cCBGaWxlIDogJEZpbGVQYXRoIgoKCQkJICAgIEdldC1DaGlsZEl0ZW0gJFBhdGggLXJlY3Vyc2UgfEV4cG9ydC1DbGl4bWwgJEZpbGVQYXRoCgogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0IFJlZ2lzdHJ5IEJhY2t1cCBDb21wbGV0ZWQiCiAgICAgICAgICAgICAgICByZXR1cm4gJHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIlJlZ2lzdHJ5IGJhY2t1cCBQYXRoIG5vdCBiZSBjcmVhdGVkIiAKICAgICAgICAgICAgICAgIHJldHVybiAkZmxhc2UKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJSZWdpc3RyeSBQYXRoIG5vdCBFeGlzdHM6ICRQYXRoIiAKICAgICAgICAgICAgcmV0dXJuICRmbGFzZQogICAgICAgIH0KICAgIH0KICAgIGNhdGNoCiAgICB7CiAgICAgICAgV3JpdGUtV2FybmluZyAiRXJyb3Igd2hpbGUgdGFraW5nIHJlZ2lzdHJ5IGJhY2t1cDogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiCiAgICAgICAgcmV0dXJuICRmbGFzZQogICAgfQp9CgpGdW5jdGlvbiBCYWNrdXBSZWdpc3RyeVBhdGhfVjgoKXsKCiAgICBwYXJhbSAoCiAgICAgICAgW3BhcmFtZXRlcihNYW5kYXRvcnk9JHRydWUpXQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldJFBhdGgsCiAgICAgICAgW3BhcmFtZXRlcihNYW5kYXRvcnk9JHRydWUpXQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldJEJhY2t1cFBhdGgsCiAgICAgICAgW3BhcmFtZXRlcihNYW5kYXRvcnk9JHRydWUpXQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldJEJhY2t1cEZpbGVOYW1lCiAgICAgICAgKQoKICAgIHRyeQogICAgewogICAgICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICAgICAgV3JpdGUtSG9zdCAiQ2hlY2tpbmcgUmVnaXN0cnk6ICRQYXRoIgoKICAgICAgICBpZihUZXN0LVBhdGggJFBhdGgpCiAgICAgICAgewogICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHQgUmVnaXN0cnkgRXhpc3RzOiB0cnVlIgoKICAgICAgICAgICAgd3JpdGUtaG9zdCAiIgogICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHQgQmFja3VwIFBhdGg6ICQoJEJhY2t1cFBhdGgpIgoKICAgICAgICAgICAgaWYoVGVzdC1QYXRoICRCYWNrdXBQYXRoKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHQgQmFja3VwIFBhdGggRXhpc3RzOiB0cnVlIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0IENyZWF0aW5nIEJhY2t1cCBQYXRoIDogJEJhY2t1cFBhdGgiCiAgICAgICAgICAgICAgICBOZXctSXRlbSAtSXRlbVR5cGUgRGlyZWN0b3J5IC1Gb3JjZSAtUGF0aCAkQmFja3VwUGF0aCAtZXJyb3JBY3Rpb24gU3RvcAogICAgICAgICAgICB9CgoKICAgICAgICAgICAgaWYoVGVzdC1QYXRoICRCYWNrdXBQYXRoKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkRmlsZVBhdGg9ICRCYWNrdXBQYXRoICsgIlwiKyAkQmFja3VwRmlsZU5hbWUgKyAiXyIrIChnZXQtZGF0ZSAtRm9ybWF0IGRkLU1NLXktaGgtbW0tc3MpICsgIi5yZWciIAoKICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdCBDcmVhdGluZyBCYWNrdXAgRmlsZSA6ICRGaWxlUGF0aCIKCiAgICAgICAgICAgICAgICBSRUcgRVhQT1JUICRyZWdpc3RyeSAkRmlsZVBhdGgKCiAgICAgICAgICAgICAgICB3cml0ZS1ob3N0ICIiCiAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHQgUmVnaXN0cnkgQmFja3VwIENvbXBsZXRlZCIKICAgICAgICAgICAgICAgIHJldHVybiAkdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiUmVnaXN0cnkgYmFja3VwIFBhdGggbm90IGJlIGNyZWF0ZWQiIAogICAgICAgICAgICAgICAgcmV0dXJuICRmbGFzZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIlJlZ2lzdHJ5IFBhdGggbm90IEV4aXN0czogJFBhdGgiIAogICAgICAgICAgICByZXR1cm4gJGZsYXNlCiAgICAgICAgfQogICAgfQogICAgY2F0Y2gKICAgIHsKICAgICAgICBXcml0ZS1XYXJuaW5nICJFcnJvciB3aGlsZSB0YWtpbmcgcmVnaXN0cnkgYmFja3VwOiAkXy5leGNlcHRpb24ubWVzc2FnZSIKICAgICAgICByZXR1cm4gJGZsYXNlCiAgICB9Cn0KCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjLS0tLS0tRGVsZXRlIFByaW50ZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgpGdW5jdGlvbiBEZWxldGVQcmludGVycygpewoKICAgICAgICAkZm91bmRQcmludGVyID0gJGZhbHNlCgogICAgICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICAgICAgV3JpdGUtSG9zdCAiRGVsZXRpbmcgUHJpbnRlciwgRHJpdmVyLCBQb3J0ICIKICAgICAgICBXcml0ZS1Ib3N0ICIiCgogICAgICAgICRQcmludGVyQ291bnQ9MAogICAgICAgICAKICAgICAgICBnZXQtd21pb2JqZWN0IC1jbGFzcyAid2luMzJfcHJpbnRlciIgLUNvbXB1dGVyICRjb21wdXRlck5hbWUgfCBGb3JFYWNoLU9iamVjdCB7IAogICAgICAgICAgICAKICAgICAgICAgICAgICN3cml0ZS1ob3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICAgICAgICAgICAjd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJQcmludGVyIE5hbWUgOiAkKCRfLm5hbWUpIiAKICAgICAgICAgICAgICN3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiUG9ydCBOYW1lIDogJCgkXy5Qb3J0TmFtZSkiIAogICAgICAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJEZWxldGluZyBEcml2ZXI6ICQoJF8uRHJpdmVyTmFtZSkiCiAgICAgICAgICAgICAjd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDggIlByaW50IFByb2Nlc3NvciA6ICQoJF8uUHJpbnRQcm9jZXNzb3IpIgogICAgICAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJTcG9vbCBFbmFibGVkOiAkKCRfLlNwb29sRW5hYmxlZCkiIAoKICAgICAgICAgICAgJFByaW50ZXJEcml2ZXJOYW1lID0gJF8uRHJpdmVyTmFtZQoKICAgICAgICAgICAgaWYoJGJBbGxDbGVhckhpdmUgLWVxICR0cnVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB3cml0ZS1ob3N0ICIgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIKICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiICBQcmludGVyIE5hbWUgOiAkKCRfLm5hbWUpIgogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiIgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYoJF8uUHJpbnRQcm9jZXNzb3IgLW5lICd3aW5wcmludCcpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgUmVtb3ZlVGhpcmRQYXJ0eVByaW50UHJvY2Vzc29yQXNzb2NpYXRpb24gJF8uUHJpbnRQcm9jZXNzb3IgJF8ubmFtZQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRQcmludGVyQ291bnQgPSAkUHJpbnRlckNvdW50KzEKCiAgICAgICAgICAgICAgICAjLS0tLURlbGV0aW5nIFByaW50ZXItLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICAgICAgICB0cnkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHQgRGVsZXRpbmcgUHJpbnRlciA6ICQoJF8ubmFtZSkiIAogICAgICAgICAgICAgICAgICAgICRTZWxQb3J0TmFtZSA9ICRfLlBvcnROYW1lCgogICAgICAgICAgICAgICAgICAgICRfLmRlbGV0ZSgpCiAgICAgICAgICAgICAgICAgICAgVmVyaWZ5UHJpbnRlckRlbGV0ZWQoJF8ubmFtZSkKICAgICAgICAgICAgICAgICAgICAjd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnRlciBEZWxldGVkIDogdHJ1ZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNhdGNoCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiYHQgRXJyb3Igd2hpbGUgRGVsZXRpbmcgUHJpbnRlciIgIzogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiCiAgICAgICAgICAgICAgICB9CgoKICAgICAgICAgICAgICAgICMtLS0tRGVsZXRpbmcgRHJpdmVyLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAgICAgdHJ5CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiIgogICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBEZWxldGluZyBEcml2ZXI6ICQoJFByaW50ZXJEcml2ZXJOYW1lKSAiCiAgICAgICAgICAgICAgICAgICAgZ2V0LXdtaW9iamVjdCAtY2xhc3MgIndpbjMyX3ByaW50ZXJkcml2ZXIiIC1uYW1lc3BhY2UgInJvb3RcQ0lNVjIiIHwgd2hlcmV7JF8ubmFtZSAtbWF0Y2ggJFByaW50ZXJEcml2ZXJOYW1lfSB8IEZvckVhY2gtT2JqZWN0IHsgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHRgdCBEcml2ZXIgTmFtZSA6ICQoJF8ubmFtZSkiCgogICAgICAgICAgICAgICAgICAgICAgICAkXy5kZWxldGUoKQogICAgICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHRgdCBEcml2ZXIgRGVsZXRlZDogdHJ1ZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjYXRjaAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgImB0IEVycm9yIHdoaWxlIERlbGV0aW5nIFByaW50ZXIgRHJpdmVyIiAjOiAkXy5leGNlcHRpb24ubWVzc2FnZSIKICAgICAgICAgICAgICAgIH0KCgogICAgICAgICAgICAgICAgIy0tLS1EZWxldGluZyBQb3J0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAgICAgdHJ5CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiIgogICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBEZWxldGluZyBQb3J0OiAkKCRTZWxQb3J0TmFtZSkgIgogICAgICAgICAgICAgICAgICAgICRwb3J0PUdldC1XTUlPYmplY3QgLUNsYXNzIFdpbjMyX3RjcGlwcHJpbnRlcnBvcnQgLWZpbHRlciAibmFtZT0nJCgkU2VsUG9ydE5hbWUpJyIgLWVuYWJsZWFsbAogICAgICAgICAgICAgICAgICAgICRwb3J0LkRlbGV0ZSgpCgogICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdGB0IFBvcnQgRGVsZXRlZCA6IHRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjYXRjaAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgImB0IEVycm9yIHdoaWxlIERlbGV0aW5nIFByaW50ZXIgUG9ydCIgIzogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYoJFByaW50ZXJOYW1lIC1lcSAkXy5uYW1lKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRQcmludGVyQ291bnQgPSAkUHJpbnRlckNvdW50KzEKCiAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICIgIFByaW50ZXIgTmFtZSA6ICQoJF8ubmFtZSkiIAogICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgIiIKCiAgICAgICAgICAgICAgICAgICAgaWYoJF8uUHJpbnRQcm9jZXNzb3IgLW5lICd3aW5wcmludCcpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBSZW1vdmVUaGlyZFBhcnR5UHJpbnRQcm9jZXNzb3JBc3NvY2lhdGlvbiAkXy5QcmludFByb2Nlc3NvciAkXy5uYW1lCiAgICAgICAgICAgICAgICAgICAgfQoKCiAgICAgICAgICAgICAgICAgICAgIy0tLS1EZWxldGluZyBQcmludGVyLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAgICAgICAgIHRyeQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDggImB0IERlbGV0aW5nIFByaW50ZXIgOiAkKCRfLm5hbWUpIiAKICAgICAgICAgICAgICAgICAgICAgICAgJFNlbFBvcnROYW1lID0gJF8uUG9ydE5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgJF8uZGVsZXRlKCkKCiAgICAgICAgICAgICAgICAgICAgICAgIFZlcmlmeVByaW50ZXJEZWxldGVkKCRfLm5hbWUpCiAgICAgICAgICAgICAgICAgICAgICAgICN3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHRgdCBQcmludGVyIERlbGV0ZWQgOiB0cnVlIgoKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2F0Y2gKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgImB0IEVycm9yIHdoaWxlIERlbGV0aW5nIFByaW50ZXIiICM6ICRfLmV4Y2VwdGlvbi5tZXNzYWdlIgogICAgICAgICAgICAgICAgICAgIH0KCgogICAgICAgICAgICAgICAgICAgICMtLS0tRGVsZXRpbmcgRHJpdmVyLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAgICAgICAgIHRyeQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiIgogICAgICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHQgRGVsZXRpbmcgRHJpdmVyOiAkKCRQcmludGVyRHJpdmVyTmFtZSkgIgogICAgICAgICAgICAgICAgICAgICAgICBnZXQtd21pb2JqZWN0IC1jbGFzcyAid2luMzJfcHJpbnRlcmRyaXZlciIgLW5hbWVzcGFjZSAicm9vdFxDSU1WMiIgfCB3aGVyZXskXy5uYW1lIC1tYXRjaCAkUHJpbnRlckRyaXZlck5hbWV9IHwgRm9yRWFjaC1PYmplY3QgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdGB0IERyaXZlciBOYW1lIDogJCgkXy5uYW1lKSIKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkXy5kZWxldGUoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgRHJpdmVyIERlbGV0ZWQ6IHRydWUiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2F0Y2gKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgImB0IEVycm9yIHdoaWxlIERlbGV0aW5nIFByaW50ZXIgRHJpdmVyIiAjOiAkXy5leGNlcHRpb24ubWVzc2FnZSIKICAgICAgICAgICAgICAgICAgICB9CgoKICAgICAgICAgICAgICAgICAgICAjLS0tLURlbGV0aW5nIFBvcnQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICAgICAgICAgICAgdHJ5CiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0ICIiCiAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBEZWxldGluZyBQb3J0OiAkKCRTZWxQb3J0TmFtZSkiCiAgICAgICAgICAgICAgICAgICAgICAgICRwb3J0PUdldC1XTUlPYmplY3QgLUNsYXNzIFdpbjMyX3RjcGlwcHJpbnRlcnBvcnQgLWZpbHRlciAibmFtZT0nJCgkU2VsUG9ydE5hbWUpJyIgLWVuYWJsZWFsbAogICAgICAgICAgICAgICAgICAgICAgICAkcG9ydC5EZWxldGUoKQogICAgICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHRgdCBQb3J0IERlbGV0ZWQgOiB0cnVlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBjYXRjaAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiYHQgRXJyb3Igd2hpbGUgRGVsZXRpbmcgUHJpbnRlciBQb3J0IiAjOiAkXy5leGNlcHRpb24ubWVzc2FnZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHdyaXRlLWhvc3QgIiIKICAgICAgICB9IAoKICAgICAgICBpZigkUHJpbnRlckNvdW50IC1lcSAwKQogICAgICAgICB7CiAgICAgICAgICAgICRmb3VuZFByaW50ZXIgPSAkZmxhc2UKICAgICAgICAgICAgV3JpdGUtSG9zdCAiIgogICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgMTAgIkZvdW5kIG5vIFByaW50ZXIgdG8gRGVsZXRlIgogICAgICAgICAgICBXcml0ZS1Ib3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIgogICAgICAgICB9CiAgICAgICAgIGVsc2UKICAgICAgICAgewogICAgICAgICAgICAkZm91bmRQcmludGVyID0gJHRydWUKICAgICAgICAgfQoKICAgIHJldHVybiAkZm91bmRQcmludGVyCn0KCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjLS0tLVJlbW92ZSB0aGlyZCBwYXJ0eSBwcmludCBwcm9jZXNzb3IgYXNzb2NpYXRpb24tLS0tLQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgpGdW5jdGlvbiBSZW1vdmVUaGlyZFBhcnR5UHJpbnRQcm9jZXNzb3JBc3NvY2lhdGlvbihbc3RyaW5nXSAkcHJvY2Vzc29yTmFtZSAsIFtzdHJpbmddICRQcmludGVyTmFtZSl7CiAgICAKICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBSZW1vdmUgdGhpcmQgcGFydHkgcHJpbnQgcHJvY2Vzc29yIGFzc29jaWF0aW9uIgoKICAgIHRyeQogICAgewogICAgICAgICRQcmludGVyV2l0aE90aGVyUHJvY2Vzc29yID0gMAoKICAgICAgICBnZXQtd21pb2JqZWN0IC1jbGFzcyAid2luMzJfcHJpbnRlciIgLUNvbXB1dGVyICRjb21wdXRlck5hbWUgfCBGb3JFYWNoLU9iamVjdCB7CgogICAgICAgICAgICAjd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJQcmludGVyIE5hbWUgOiAkKCRfLm5hbWUpIiAKICAgCiAgICAgICAgICAgIGlmKCRfLlByaW50UHJvY2Vzc29yIC1lcSAkcHJvY2Vzc29yTmFtZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFByaW50ZXJXaXRoT3RoZXJQcm9jZXNzb3IgPSAkUHJpbnRlcldpdGhPdGhlclByb2Nlc3NvciArIDEKICAgICAgICAgICAgfQogICAgICAgICB9CgogICAgICAgICMtLS0tLVJlbW92aW5nIFJlZmVyZW5jZS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogICAgICAgICRQcmludGVyUmVnUGF0aCA9ICRSZWdQcmludFBhdGgrICdcUHJpbnRlcnNcJyArICRQcmludGVyTmFtZQoKICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHRgdCBQcmludGVyIFJlZyBQYXRoOiAgJCgkUHJpbnRlclJlZ1BhdGgpIgoKICAgICAgICBTZXQtSXRlbXByb3BlcnR5IC1wYXRoICRQcmludGVyUmVnUGF0aCAtTmFtZSAnUHJpbnQgUHJvY2Vzc29yJyAtdmFsdWUgJycKICAgICAgICBTZXQtSXRlbXByb3BlcnR5IC1wYXRoICRQcmludGVyUmVnUGF0aCAtTmFtZSAnUG9ydCcgLXZhbHVlICcnCgogICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdGB0IFJlZmVyZW5jZSByZW1vdmVkLi4uIgogICAgICAgIFdyaXRlLUhvc3QgIiIKCiAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdGB0IFByaW50ZXIgV2l0aCBPdGhlciBQcm9jZXNzb3IgOiAkKCRQcmludGVyV2l0aE90aGVyUHJvY2Vzc29yKSIKCgogICAgICAgIGlmKCRQcmludGVyV2l0aE90aGVyUHJvY2Vzc29yIC1ndCAxKQogICAgICAgIHsKICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIGlzIHVzZWQgYnkgbXVsdGlwbGUgUHJpbnRlciA6ICQoJHByb2Nlc3Nvck5hbWUpIgogICAgICAgIH0KICAgICAgICBlbHNlaWYoJFByaW50ZXJXaXRoT3RoZXJQcm9jZXNzb3IgLWVxIDEpCiAgICAgICAgewogICAgICAgICAgICAkUHJvY2Vzc29yUmVnUGF0aDEgPSAkUmVnUHJpbnRQYXRoICsgJ1xFbnZpcm9ubWVudHNcV2luZG93cyB4NjRcUHJpbnQgUHJvY2Vzc29yc1wnICsgJHByb2Nlc3Nvck5hbWUKICAgICAgICAgICAgaWYoVGVzdC1QYXRoICRQcm9jZXNzb3JSZWdQYXRoMSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIE5hbWUgOiAkKCRwcm9jZXNzb3JOYW1lKSIKICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdGB0IFByaW50IHByb2Nlc3NvciBQYXRoIDogJCgkUHJvY2Vzc29yUmVnUGF0aDEpIgoKICAgICAgICAgICAgICAgIFJlbW92ZS1JdGVtIC1QYXRoICRQcm9jZXNzb3JSZWdQYXRoMSAtUmVjdXJzZQogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIFJlbW92ZWQuLiIKICAgICAgICAgICAgfQogICAgICAgICAgCgogICAgICAgICAgICAkUHJvY2Vzc29yUmVnUGF0aDIgPSAkUmVnUHJpbnRQYXRoICsgJ1xFbnZpcm9ubWVudHNcV2luZG93cyBOVCB4ODZcUHJpbnQgUHJvY2Vzc29yc1wnICsgJHByb2Nlc3Nvck5hbWUKICAgICAgICAgICAgaWYoVGVzdC1QYXRoICRQcm9jZXNzb3JSZWdQYXRoMikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIE5hbWUgOiAkKCRwcm9jZXNzb3JOYW1lKSIKICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdGB0IFByaW50IHByb2Nlc3NvciBQYXRoIDogJCgkUHJvY2Vzc29yUmVnUGF0aDIpIgoKICAgICAgICAgICAgICAgIFJlbW92ZS1JdGVtIC1QYXRoICRQcm9jZXNzb3JSZWdQYXRoMiAtUmVjdXJzZQogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIFJlbW92ZWQuLiIKICAgICAgICAgICAgfQoKCiAgICAgICAgICAgICRQcm9jZXNzb3JSZWdQYXRoMyA9ICRSZWdQcmludFBhdGggKyAnXEVudmlyb25tZW50c1xXaW5kb3dzIElBNjRcUHJpbnQgUHJvY2Vzc29yc1wnICsgJHByb2Nlc3Nvck5hbWUKICAgICAgICAgICAgaWYoVGVzdC1QYXRoICRQcm9jZXNzb3JSZWdQYXRoMykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIE5hbWUgOiAkKCRwcm9jZXNzb3JOYW1lKSIKICAgICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA3ICJgdGB0IFByaW50IHByb2Nlc3NvciBQYXRoIDogJCgkUHJvY2Vzc29yUmVnUGF0aDMpIgoKICAgICAgICAgICAgICAgIFJlbW92ZS1JdGVtIC1QYXRoICRQcm9jZXNzb3JSZWdQYXRoMyAtUmVjdXJzZQogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIFJlbW92ZWQuLiIKICAgICAgICAgICAgfQoKICAgICAgICAgICAgCiAgICAgICAgICAgICRQcm9jZXNzb3JSZWdQYXRoNCA9ICRSZWdQcmludFBhdGggKyAnXEVudmlyb25tZW50c1xXaW5kb3dzIDQuMFxQcmludCBQcm9jZXNzb3JzXCcgKyAkcHJvY2Vzc29yTmFtZQogICAgICAgICAgICBpZihUZXN0LVBhdGggJFByb2Nlc3NvclJlZ1BhdGg0KQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHRgdCBQcmludCBwcm9jZXNzb3IgTmFtZSA6ICQoJHByb2Nlc3Nvck5hbWUpIgogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnQgcHJvY2Vzc29yIFBhdGggOiAkKCRQcm9jZXNzb3JSZWdQYXRoNCkiCgogICAgICAgICAgICAgICAgUmVtb3ZlLUl0ZW0gLVBhdGggJFByb2Nlc3NvclJlZ1BhdGg0IC1SZWN1cnNlCiAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgNyAiYHRgdCBQcmludCBwcm9jZXNzb3IgUmVtb3ZlZC4uIgogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgIH0KICAgICAgICAKICAgICAgICBXcml0ZS1Ib3N0ICIiCgogICAgfQogICAgY2F0Y2gKICAgIHsKICAgICAgICBXcml0ZS1XYXJuaW5nICJFcnJvciB3aGlsZSBSZW1vdmUgdGhpcmQgcGFydHkgcHJpbnQgcHJvY2Vzc29yIGFzc29jaWF0aW9uOiAkXy5leGNlcHRpb24ubWVzc2FnZSIKICAgIH0KfQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMtLS0tLS1EZWxldGUgUHJpbnRlcnMgUXVlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCkZ1bmN0aW9uIERlbGV0ZVByaW50UXVlKCl7CiAgICB0cnkKICAgIHsKICAgICAgICBXcml0ZS1Ib3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIgogICAgICAgIFdyaXRlLUhvc3QgIkRlbGV0aW5nIFByaW50IFF1ZXVlIgogICAgICAgIFdyaXRlLUhvc3QgIiIKCiAgICAgICAgJFByaW50Sm9iczEgPSBnZXQtd21pb2JqZWN0IC1jbGFzcyAiV2luMzJfUHJpbnRKb2IiIC1uYW1lc3BhY2UgInJvb3RcQ0lNVjIiIC1jb21wdXRlcm5hbWUgJGNvbXB1dGVyTmFtZSAKICAgICAgICBpZigkUHJpbnRKb2JzMSAtZXEgJG51bGwpCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1Ib3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHQgTm8gUHJpbnQgSm9iIHRvIGNsZWFyZSIKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJFByaW50Sm9icyA9R2V0LVdtaU9iamVjdCBXaW4zMl9QcmludGVyIHwgRm9yRWFjaC1PYmplY3QgeyRfLkNhbmNlbEFsbEpvYnMoKX0KICAgICAgICAgICAgU3RhcnQtU2xlZXAgLXMgJHRpbWVvdXRTZWNvbmRzCgogICAgICAgICAgICAkUHJpbnRKb2JzMiA9IGdldC13bWlvYmplY3QgLWNsYXNzICJXaW4zMl9QcmludEpvYiIgLW5hbWVzcGFjZSAicm9vdFxDSU1WMiIgLWNvbXB1dGVybmFtZSAkY29tcHV0ZXJOYW1lIAogICAgICAgICAgICBpZigkUHJpbnRKb2JzMiAtZXEgJG51bGwpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBQcmludCBKb2IgY2xlYXJlZCIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFJlc2V0U3Bvb2xlciAkZmFsc2UKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIGNhdGNoCiAgICB7CiAgICAgICAgV3JpdGUtV2FybmluZyAiRXJyb3Igd2hpbGUgRGVsZXRpbmcgUHJpbnQgSm9iOiAkXy5leGNlcHRpb24ubWVzc2FnZSIKICAgICAgICByZXR1cm4gJGZsYXNlCiAgICB9Cn0KCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjLS0tLS0tUmVzZXQgU3Bvb2xlciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgpGdW5jdGlvbiBSZXNldFNwb29sZXIoW2Jvb2xdICRNZXNzYWdlKXsKCiAgICB0cnkKICAgIHsKICAgICAgICBpZigkTWVzc2FnZSAtZXEgJHRydWUpCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1Ib3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIgogICAgICAgICAgICBXcml0ZS1Ib3N0ICJTdG9waW5nIHRoZSBTcG9vbGVyIFNlcnZpY2UhIgogICAgICAgICAgICBXcml0ZS1Ib3N0ICIiCiAgICAgICAgfQogICAgICAgIAoKICAgICAgICAkaiA9IFN0YXJ0LUpvYiAtU2NyaXB0QmxvY2sgewogICAgICAgICAgICBSZXN0YXJ0LVNlcnZpY2UgLU5hbWUgU3Bvb2xlciAtRm9yY2UgLUVycm9yQWN0aW9uIFN0b3AKICAgICAgICB9CgogICAgICAgIFdhaXQtSm9iICRqIC1UaW1lb3V0ICR0aW1lb3V0U2Vjb25kcyB8IG91dC1udWxsCgogICAgICAgIGlmICgkai5TdGF0ZSAtZXEgIkNvbXBsZXRlZCIpeyAKCiAgICAgICAgICAgIGlmKCRNZXNzYWdlIC1lcSAkdHJ1ZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtSG9zdCAiQ29tcGxldGVkLi4iCgogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiIgogICAgICAgICAgICAgICAgd3JpdGUtaG9zdCAiUGxlYXNlIHJlc3RhcnQgdGhlIG1hY2hpbmUiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgIAogICAgICAgIH0KICAgICAgICBlbHNlaWYgKCRqLlN0YXRlIC1lcSAiUnVubmluZyIpeyAKICAgICAgICAgICAgV3JpdGUtSG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJTcG9vbGVyIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciCiAgICAgICAgICAgIGV4aXQKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgUmVtb3ZlLUpvYiAtZm9yY2UgJGogCgogICAgICAgIGlmKCRNZXNzYWdlIC1lcSAkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iCiAgICAgICAgICAgICBicmVhawogICAgICAgIH0KICAgICAgICAKICAgIH0KICAgIGNhdGNoCiAgICB7CiAgICAgICAgV3JpdGUtV2FybmluZyAiRXJyb3Igd2hpbGUgU3RvcGluZyB0aGUgU3Bvb2xlcjogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiCiAgICAgICAgcmV0dXJuICRmbGFzZQogICAgfQp9CgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIy0tLS0tLUNoZWNraW5nIFNlcnZpY2UgU3RhdHVzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoKRnVuY3Rpb24gQ2hlY2tTZXJ2aWNlU3RhdHVzKCkKewogICAgV3JpdGUtSG9zdCAiIgoKICAgIGlmKEdldC1TZXJ2aWNlIHwgV2hlcmUgeyRfLm5hbWUgLWVxICdTcG9vbGVyJ30pCiAgICB7CiAgICAgICAgIy0tLS0tU3Bvb2xlciBDaGVjay0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgR2V0LVdtaU9iamVjdCBXaW4zMl9TZXJ2aWNlIC1Db21wdXRlck5hbWUgLnwgV2hlcmUtT2JqZWN0IHskXy5OYW1lIC1lcSAnU3Bvb2xlcicgIC1hbmQgICRfLlN0YXRlIC1lcSAncnVubmluZyd9fGZvcmVhY2ggewogICAgICAgICAgICAjd3JpdGUtaG9zdCAiU3RhdGU6ICIgJF8uU3RhdGUKICAgICAgICAgICAgI3dyaXRlLWhvc3QgIlN0YXR1czogIiAkXy5TdGF0dXMKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmKCRfLlN0YXRlIC1lcSAiUnVubmluZyIpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmKCRfLlN0YXR1cyAtZXEgIkRlZ3JhZGVkIikKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJTcG9vbGVyIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciCiAgICAgICAgICAgICAgICAgICAgZXhpdAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgICMtLS0tLVJlZ2lzdG9yeSBDaGVjay0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgR2V0LVNlcnZpY2UgLU5hbWUgIlNwb29sZXIiIHwgU2VsZWN0LU9iamVjdCAtUHJvcGVydHkgKiB8Zm9yZWFjaCB7CiAgICAgICAgICAgICN3cml0ZS1ob3N0ICJTdGF0dXM6ICIgJF8uU3RhdHVzCiAgICAgICAgICAgICN3cml0ZS1ob3N0ICJSZXF1aXJlZFNlcnZpY2VzOiAiICRfLlNlcnZpY2VzRGVwZW5kZWRPbgoKICAgICAgICAgICAgSUYgKFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRfLlNlcnZpY2VzRGVwZW5kZWRPbikpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJTcG9vbGVyIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciCiAgICAgICAgICAgICAgICAgZXhpdAogICAgICAgICAgICB9IAogICAgICAgIH0gICAgICAgCiAgICAgICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBXcml0ZS1XYXJuaW5nICJTcG9vbGVyIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciCiAgICAgICAgZXhpdAogICAgfQoKfQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMtLS0tLS1WZXJpZnkgUHJpbnRlciBEZWxldGVkLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCkZ1bmN0aW9uIFZlcmlmeVByaW50ZXJEZWxldGVkKFtzdHJpbmddICRQcmludGVyTmFtZSkKewogICAgJFByaW50ZXJDb3VudD0wOwoKICAgIEdldC1XTUlPYmplY3QgLUNsYXNzIFdpbjMyX1ByaW50ZXIgLUNvbXB1dGVyICIuIiB8IFdoZXJlLU9iamVjdCB7ICRfLm5hbWUgLWVxICRQcmludGVyTmFtZSB9IHwgRm9yRWFjaC1PYmplY3QgeyAKCiAgICAgJFByaW50ZXJDb3VudCA9ICRQcmludGVyQ291bnQrMQogICAgfSAKCiAgICBpZigkUHJpbnRlckNvdW50IC1ndCAwKQogICAgewogICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiYHRgdCBQcmludGVyIERlbGV0ZWQgOiBGYWxzZSIKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDcgImB0YHQgUHJpbnRlciBEZWxldGVkIDogVHJ1ZSIKICAgIH0KfQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMtLS0tLS1FeGVjdXRlIEZ1bmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKY2xzCmlmKENoZWNrLVByZUNvbmRpdGlvbil7CgogICAgQ2hlY2tTZXJ2aWNlU3RhdHVzCgogICAgaWYoR2V0UHJpbnRlcnMgLVByaW50ZXJOYW1lICRQcmludGVyTmFtZSkKICAgIHsKICAgICAgICBpZihCYWNrdXBSZWdpc3RyeVBhdGhfVjggLVBhdGggJFJlZ1ByaW50UGF0aCAtQmFja3VwUGF0aCAkUmVnQmFja3VwUGF0aE5hbWUgLUJhY2t1cEZpbGVOYW1lICRSZWdCYWNrdXBGaWxlTmFtZSkKICAgICAgICB7CiAgICAgICAgICAgIERlbGV0ZVByaW50UXVlCiAgICAgICAgICAgIGlmKERlbGV0ZVByaW50ZXJzKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAjRGVsZXRlUHJpbnRRdWUKICAgICAgICAgICAgICAgIFJlc2V0U3Bvb2xlciAkdHJ1ZQoKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCn0K","jsonSchema":{"additionalProperties":false,"properties":{"PrinterName":{"minLength":1,"title":"Printer Name","type":"string"},"RegBackupFileName":{"minLength":1,"title":"Registry Backup File Name","type":"string"},"RegBackupPathName":{"minLength":1,"title":"Location to save registry backup","type":"string"},"bAllClearHive":{"title":"Do you want to Clear All Print Hive ?","type":"boolean"}},"required":["RegBackupPathName","RegBackupFileName"],"type":"object"},"uiSchema":{"PrinterName":{"classNames":"col-sm-12","ui:autofocus":true},"RegBackupFileName":{"classNames":"col-sm-12","ui:autofocus":true},"RegBackupPathName":{"classNames":"col-sm-12","ui:autofocus":true},"bAllClearHive":{"classNames":"col-sm-6"},"ui:order":["bAllClearHive","PrinterName","RegBackupPathName","RegBackupFileName"]},"isHDScript":true}