{"id":"d56ec79b-7d5c-11e9-9f9b-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Credentials Repair","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Successfully Executed","internal":false,"name":"Credentials Repair","tags":["Windows 7","Windows 10"],"sequence":true,"content":"","jsonSchema":"","uiSchema":"","isHDScript":true}
