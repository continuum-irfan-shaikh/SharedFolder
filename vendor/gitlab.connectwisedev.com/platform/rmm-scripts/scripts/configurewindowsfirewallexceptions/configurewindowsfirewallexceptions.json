{"id":"a4cc7b4a-723e-11e9-87db-00155d130b01","partnerId":"00000000-0000-0000-0000-000000000000","category":["Security"],"description":"Configures exceptions for Windows firewall. Add/Delete Program and Add/Delete Port from Windows firewall settings","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Excecuted successfully","internal":false,"name":"Configure Windows firewall exceptions","tags":["Windows 7","Windows 10"],"sequence":true,"content":"","jsonSchema":{"additionalproperties":false,"dependencies":{"task":{"oneOf":[{"dependencies":{"ruleType":{"oneOf":[{"properties":{"portnumbers":{"title":"Portnumber(s)","type":"string"},"protocol":{"default":"TCP","enum":["TCP","UDP"],"title":"Protocol","type":"string"},"ruleType":{"enum":["Port"]}},"required":["protocol"]},{"properties":{"programpath":{"title":"Program path","type":"string"},"ruleType":{"enum":["Program"]}},"required":["programpath"]}]}},"properties":{"Action":{"enum":["Allow","Block"],"title":"Action","type":"string"},"description":{"title":"Description","type":"string"},"direction":{"default":"Inbound","enum":["Inbound","Outbound"],"title":"Direction","type":"string"},"localscope":{"title":"Local Scope","type":"string"},"profiles":{"items":{"enum":["Domain","Private","Public"],"type":"string"},"title":"Profiles","type":"array","uniqueItems":true},"remotescope":{"title":"Remote Scope","type":"string"},"ruleType":{"enum":["Port","Program"],"title":"Rule Type","type":"string"},"task":{"enum":["Create"]},"taskname":{"title":"Rule Name","type":"string"}},"required":["Action","taskname","ruleType","profiles"]},{"dependencies":{"ruleType":{"oneOf":[{"properties":{"portnumbers":{"title":"Protnumber(s)","type":"string"},"protocol":{"default":"TCP","enum":["TCP","UDP"],"title":"Protocol","type":"string"},"ruleType":{"enum":["Port"]},"taskname":{"title":"Rule Name","type":"string"}},"required":["taskname","protocol"]},{"properties":{"programpath":{"title":"Program path","type":"string"},"ruleType":{"enum":["Program"]}},"required":["programpath"]}]}},"properties":{"direction":{"default":"Inbound","enum":["Inbound","Outbound"],"title":"Direction","type":"string"},"ruleType":{"default":"Port","enum":["Port","Program"],"title":"Rule Type","type":"string"},"task":{"enum":["Delete"]}},"required":["direction"]}]}},"patternproperties":{"^Action$":{},"^description$":{},"^direction$":{},"^localscope$":{},"^portnumbers$":{},"^profiles$":{},"^programpath$":{},"^protocol$":{},"^remotescope$":{},"^ruleType$":{},"^taskname$":{}},"properties":{"task":{"default":"Create","enum":["Create","Delete"],"title":"Action","type":"string"}},"type":"object"},"uiSchema":{"Action":{"classNames":"col-sm-3","ui:autofocus":true,"ui:placeholder":"Select"},"description":{"classNames":"col-sm-8","ui:autofocus":true},"direction":{"classNames":"col-sm-3","ui:autofocus":true},"localscope":{"classNames":"col-sm-6","ui:autofocus":true,"ui:help":"Ex: 192.168.10.1, 10.11.13.9, 192.168.10.2-192.168.10.100. or leave it blank to allow Any hosts."},"portnumbers":{"classNames":"col-sm-3","ui:autofocus":true,"ui:help":"Ex: 80,5000-5010"},"profiles":{"classNames":"col-sm-12","ui:autofocus":true,"ui:options":{"inline":true},"ui:widget":"checkboxes"},"programpath":{"classNames":"col-sm-6","ui:autofocus":true,"ui:help":"Ex: C:\\folder\\program.exe"},"protocol":{"classNames":"col-sm-3","ui:autofocus":true},"remotescope":{"classNames":"col-sm-6","ui:autofocus":true,"ui:help":"Ex: 192.168.10.1, 10.11.13.9, 192.168.10.2-192.168.10.100. or leave it blank to allow Any hosts."},"ruleType":{"classNames":"col-sm-3","ui:autofocus":true,"ui:placeholder":"Select"},"task":{"classNames":"col-sm-3 col-sm-offset-right-9","ui:autofocus":true},"taskname":{"classNames":"col-sm-4","ui:autofocus":true},"ui:order":["task","taskname","description","ruleType","direction","protocol","portnumbers","programpath","Action","profiles","localscope","remotescope"]},"isHDScript":false}