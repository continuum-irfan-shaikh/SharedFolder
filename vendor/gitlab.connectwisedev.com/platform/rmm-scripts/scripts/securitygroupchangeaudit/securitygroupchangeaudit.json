{"id":"87352331-e46a-11e9-b06a-00155d130b01","partnerId":"00000000-0000-0000-0000-000000000000","category":["Security"],"description":"Task will check for if any new members have been added to local, global or universal security groups in last 24 hours.","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":900,"failureMessage":"Executed with errors","successMessage":"Executed successfully","internal":false,"name":"Security group changes - New members added in last 24 hours.","tags":["Windows 7","Windows 10"],"sequence":true,"content":"PCMKLlNZTk9QU0lTCiBTY3JpcHQgdG8gZmV0Y2ggbW9yZSBpbmZvcm1hdGlvbiBmb3IgbW9uaXRvcmluZyBydWxlICdTZWN1cml0eSBOb3RpZmljYXRpb24gLSBBIHVzZXIgYWNjb3VudCBhZGRlZCB0byBTZWN1cml0eSBHcm91cCcuCgouREVTQ1JJUFRJT04KIFRoaXMgc2NyaXB0IGZldGNoIG1vcmUgaW5mb3JtYXRpb24gZm9yIG1vbml0b3JpbmcgcnVsZSAnU2VjdXJpdHkgTm90aWZpY2F0aW9uIC0gQSB1c2VyIGFjY291bnQgYWRkZWQgdG8gU2VjdXJpdHkgR3JvdXAnLgoKLk5PVEVTICAgIAogTmFtZTogR2V0LVNHTWVtYmVyc2hpcEluZm9ybWF0aW9uLnBzMQogQXV0aG9yOiBJbXJhbiBLaGFuICAKIFZlcnNpb246IDEuMgogRGF0ZUNyZWF0ZWQ6IDIwMTktMDktMjAgCiBEYXRlVXBkYXRlZDogMjAxOS0xMC0wMSAKLlBBUkFNRVRFUiAKIAouRVhBTVBMRQogLlxHZXQtU0dNZW1iZXJzaGlwSW5mb3JtYXRpb24ucHMxIAojPgoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgbm9uIHBvd2Vyc2hlbGwgY29tbWFuZHMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwpGdW5jdGlvbiBFeGVjdXRlQ01EQ29tbWFuZHMoJENvbW1hbmQpIHsKICAgIHRyeSB7CiAgICAgICAgaWYgKCRDb21tYW5kKSB7CiAgICAgICAgICAgICRmaW5hbENtZCA9ICJjbWQgL2MgIiArICRDb21tYW5kICsgIiAnMj4mMSciCiAgICAgICAgICAgICRtc2cgPSAoSW52b2tlLUV4cHJlc3Npb24gLUNvbW1hbmQgJGZpbmFsQ21kIC1FcnJvckFjdGlvbiBTdG9wKQogICAgICAgICAgICAjJGNtZE91dHB1dCA9ICRmaW5hbENtZCB8ICUgeyAkXy5Ub1N0cmluZygpIH07CiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkbXNnCiAgICAgICAKICAgICAgICB9CiAgICAgICAgZWxzZSB7IFdyaXRlLU91dHB1dCAiQ29tbWFuZCBjYW4gbm90IGJlIG51bGwiIH0KICAgIH0KICAgIGNhdGNoCiAgICB7IFdyaXRlLU91dHB1dCAiRXJyb3I6IiAkbXNnIH0KCn0jRW5kIGZ1bmN0aW9uIEV4ZWN1dGVDTURDb21tYW5kcwoKRnVuY3Rpb24gR2V0TmFtZUZyb21TSUQoJFNpZCkgewogICAgI0RlZmF1bHQgU0lEIE1hcHBpbmdzCiAgICAkU0lETWFwcGluZ3MgPSBAewogICAgICAgICJTLTEtMS0wIiAgICAgID0gIkV2ZXJ5b25lIgogICAgICAgICJTLTEtMiIgICAgICAgID0gIkxvY2FsIEF1dGhvcml0eSIKICAgICAgICAiUy0xLTUiICAgICAgICA9ICJOVCBBdXRob3JpdHkiCiAgICAgICAgIlMtMS01LTExIiAgICAgPSAiQXV0aGVudGljYXRlZCBVc2VycyIKICAgICAgICAiUy0xLTUtMTgiICAgICA9ICJMb2NhbCBTeXN0ZW0iCiAgICAgICAgIlMtMS01LTE5IiAgICAgPSAiTlQgQXV0aG9yaXR5IChMb2NhbCBTZXJ2aWNlKSIKICAgICAgICAiUy0xLTUtMjAiICAgICA9ICJOVCBBdXRob3JpdHkgKE5ldHdvcmsgU2VydmljZSkiCiAgICAgICAgIlMtMS01LTMyLTU1MSIgPSAiQmFja3VwIE9wZXJhdG9ycyIKICAgICAgICAgICAgCiAgICB9CiAgICAgIAogICAgJFVzZXJBY2NvdW50ID0gR2V0LVdtaU9iamVjdCBXaW4zMl91c2VyYWNjb3VudCAtRmlsdGVyICJzaWQ9JyQoJHNpZCknIgogICAgaWYgKCRVc2VyQWNjb3VudCkgewogICAgICAgICRyZXR1cm4gPSAoInswfVx7MX0iIC1mICRVc2VyQWNjb3VudC5kb21haW4sICRVc2VyQWNjb3VudC5OYW1lKQogICAgfQogICAgZWxzZSB7CiAgICAgICAgJEdyb3VwID0gR2V0LVdtaU9iamVjdCBXaW4zMl9Hcm91cCAtRmlsdGVyICJzaWQ9JyQoJHNpZCknIgogICAgICAgIGlmICgkR3JvdXApIHsKICAgICAgICAgICAgJHJldHVybiA9ICgiezB9XHsxfSIgLWYgJEdyb3VwLmRvbWFpbiwgJEdyb3VwLk5hbWUpCiAgICAgICAgfQogICAgICAgIGVsc2VpZiAoJFNJRE1hcHBpbmdzWyIkc2lkIl0pIHsKICAgICAgICAgICAgJHJldHVybiA9ICRTSURNYXBwaW5nc1siJHNpZCJdCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICAkcmV0dXJuID0gJHNpZAogICAgICAgIH0KICAgIH0KICAgIHJldHVybiAkcmV0dXJuCn0gI0Z1bmN0aW9uIEVuZAoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIEZ1bmN0aW9uIHRvIGdldCBldmVudCBpbmZvcm1hdGlvbgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCkZ1bmN0aW9uIEdldEV2ZW50SW5mbygkTG9nTmFtZSwgJEV2ZW50SUQpIHsKICAgIHRyeSB7CiAgICAgICAgCiAgICAgICAgI0dldCBMYXRlc3QgRXZlbnQgbG9nIGZvciBzeXN0ZW0KICAgICAgICAkaXNFdmVudFByZXNlbnQgPSBHZXQtRXZlbnRMb2cgLUxpc3QgfCBXaGVyZS1PYmplY3QgeyAkXy5Mb2cgLWVxICIkTG9nTmFtZSIgfQogICAgICAgIAogICAgICAgIGlmICgkaXNFdmVudFByZXNlbnQpIHsKICAgICAgICAgICAgI2NoZWNrIGV2ZW50IElEIGxhdGVzdCB0cmlnZ2VyIHRpbWUgYW5kIG51bWJlciBvZiBvY2N1cmFuY2VzIHdpdGhpbmcgMjQgaG91cnMKICAgICAgICAgICAgJGV2ZW50ID0gR2V0LUV2ZW50TG9nIC1sb2duYW1lICIkTG9nTmFtZSIgLUFmdGVyIChnZXQtZGF0ZSkuQWRkSG91cnMoLTI0KSAtRXJyb3JBY3Rpb24gU3RvcCB8IFdoZXJlLU9iamVjdCB7ICRfLkV2ZW50SUQgLWVxICRFdmVudElEIH0KICAgICAgICAgICAgIyRFdmVudEluZm8gPSAkZXZlbnQgfCBTb3J0LU9iamVjdCAtRGVzY2VuZGluZyBUaW1lR2VuZXJhdGVkIHwgU2VsZWN0LU9iamVjdCAtRmlyc3QgMSAtUHJvcGVydHkgKgogICAgICAgICAgICBpZigkbnVsbCAtbmUgJGV2ZW50KXsKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICQoIi0iICogNDApCiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkKCItIiAqIDQwKQogICAgICAgICAgICAgICAgJGV2ZW50Q291bnQgPSAoJGV2ZW50IHwgTWVhc3VyZS1PYmplY3QpLmNvdW50CiAgICAgICAgICAgICAgICBpZiAoJGV2ZW50Q291bnQpIHsKICAgICAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIkV2ZW50ICRFdmVudElEIGhhcyBiZWVuIG9jY3VycmVkICQoJGV2ZW50Q291bnQpIHRpbWVzIGluIGxhc3QgMjQgaG91cnMiCiAgICAgICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJEZXRhaWxzIGZvciBhbGwgZXZlbnQgSUQgJEV2ZW50SUQgZ2VuZXJhdGVkIGluIDI0IGhvdXJzOiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiRXZlbnQgJEV2ZW50SUQgaGFzIG5vdCBiZWVuIG9jY3VycmVkIGluIGxhc3QgMjQgaG91cnMiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGZvcmVhY2goJGV2ZW50aW5mbyBpbiAkZXZlbnQpewogICAgICAgICAgICBpZiAoJGV2ZW50SW5mbykgewogICAgICAgICAgICAKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkKCItIiAqIDQwKQogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJFdmVudCAkRXZlbnRJRCAgb2NjdXJyZWQgYXQgJCgkZXZlbnRJbmZvLlRpbWVHZW5lcmF0ZWQuVG9TdHJpbmcoKSkuIgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgJCgiLSIgKiA0MCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICNNZW1iZXIKICAgICAgICAgICAgICAgICRNZW1iZXJTZWN1cml0eUlEID0gR2V0TmFtZUZyb21TSUQgJEV2ZW50SW5mby5SZXBsYWNlbWVudFN0cmluZ3NbMV0gICAgICAgIAogICAgICAgICAgICAgICAgI0dyb3VwCiAgICAgICAgICAgICAgICAkR3JvdXBOYW1lID0gJEV2ZW50SW5mby5SZXBsYWNlbWVudFN0cmluZ3NbMl0KICAgICAgICAgICAgICAgICRHcm91cERvbWFpbiA9ICRFdmVudEluZm8uUmVwbGFjZW1lbnRTdHJpbmdzWzNdCiAgICAgICAgICAgICAgICAkR3JvdXBTZWN1cml0eUlEID0gR2V0TmFtZUZyb21TSUQgJEV2ZW50SW5mby5SZXBsYWNlbWVudFN0cmluZ3NbNF0gICAgCiAgICAgICAgICAgICAgICAjU3ViamVjdAogICAgICAgICAgICAgICAgJFN1YmplY3RTZWN1cml0eUlEID0gR2V0TmFtZUZyb21TSUQgJEV2ZW50SW5mby5SZXBsYWNlbWVudFN0cmluZ3NbNV0KICAgICAgICAgICAgICAgICRTdWJqZWN0QWNjb3VudE5hbWUgPSAkRXZlbnRJbmZvLlJlcGxhY2VtZW50U3RyaW5nc1s2XQogICAgICAgICAgICAgICAgJFN1YmplY3RBY2NvdW50RG9tYWluID0gJEV2ZW50SW5mby5SZXBsYWNlbWVudFN0cmluZ3NbN10KICAgICAgICAgICAgICAgICRTdWJqZWN0TG9nb25JRCA9ICRFdmVudEluZm8uUmVwbGFjZW1lbnRTdHJpbmdzWzhdICAgIAogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJVc2VyIGRldGFpbHMgcmVzcG9uc2libGUgZm9yIGFkZGluZyBtZW1iZXIgdG8gdGhlIEdyb3VwOiIKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiU2VjdXJpdHkgSUQgICA6ICRTdWJqZWN0U2VjdXJpdHlJRCIKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiQWNjb3VudCBOYW1lICA6ICRTdWJqZWN0QWNjb3VudE5hbWUiCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIkFjY291bnQgRG9tYWluOiAkU3ViamVjdEFjY291bnREb21haW4iCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIkxvZ29uIElEICAgICAgOiAkU3ViamVjdExvZ29uSUQiCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgJCgiLSIgKiA0MCkKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiTWVtYmVyIGRldGFpbHMgd2hpY2ggaGFzIGJlZW4gYWRkZWQgdG8gdGhlIEdyb3VwOiIKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiU2VjdXJpdHkgSUQgICA6ICRNZW1iZXJTZWN1cml0eUlEIgogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICQoIi0iICogNDApCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIkdyb3VwIGRldGFpbHMgaW4gd2hpY2ggVXNlciBoYXMgYmVlbiBhZGRlZDoiCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIkdyb3VwIE5hbWUgICAgOiAkR3JvdXBOYW1lIgogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJHcm91cCBEb21haW4gIDogJEdyb3VwRG9tYWluIgogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJTZWN1cml0eSBJRCAgIDogJEdyb3VwU2VjdXJpdHlJRCIKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkKCItIiAqIDQwKQogICAgICAgICAgICAgICAgI0ZvciBHcm91cAogICAgICAgICAgICAgICAgJEdyb3VwSW5mbyA9IEdldC1XbWlPYmplY3QgLVF1ZXJ5ICJzZWxlY3QgKiBmcm9tIHdpbjMyX2dyb3VwIHdoZXJlIE5hbWU9JyQoJEdyb3VwTmFtZSknIgogICAgICAgICAgICAgICAgJEdyb3VwTWVtYmVycyA9IEdldC1XbWlPYmplY3QgLVF1ZXJ5ICJzZWxlY3QgKiBmcm9tIHdpbjMyX2dyb3VwdXNlciB3aGVyZSBHcm91cENvbXBvbmVudD1gIldpbjMyX0dyb3VwLkRvbWFpbj0nJCgkR3JvdXBJbmZvLkRvbWFpbiknLE5hbWU9JyQoJEdyb3VwSW5mby5OYW1lKSdgIiIgICAgICAgICAgIAogICAgICAgICAgICAgICAgJEdyb3VwTGlzdCA9IEAoKQogICAgICAgICAgICAgICAgZm9yZWFjaCAoJEdyb3VwTWVtYmVyIGluICRHcm91cE1lbWJlcnMpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoJEdyb3VwTWVtYmVyLlBhcnRDb21wb25lbnQgLW1hdGNoICdOYW1lPSIoLispIicpIHsgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgJEdyb3VwTGlzdCArPSAkTWF0Y2hlc1sxXQogICAgICAgICAgICAgICAgICAgIH0gCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIk1lbWJlciBMaXN0IGZvciBHcm91cDogJEdyb3VwTmFtZSA6IgogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICRHcm91cExpc3QKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkKCItIiAqIDQwKQogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICQoIi0iICogNDApCiAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmludGluZyBtb3JlIGluZm9ybWF0aW9uIGZvciBhbGwgdGhlIG9jY3VycmVuY2VzIG9mIGV2ZW50IElEICRFdmVudElEIGR1cmluZyB0aGUgbGFzdCAyNCBob3VycyIKICAgICAgICAgICAgICAgICRldmVudCB8IEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIlRpbWUgR2VuZXJhdGVkOiQoJF8uVGltZUdlbmVyYXRlZCkiCiAgICAgICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJNZXNzYWdlICAgICAgIDoiJCgkXy5NZXNzYWdlKQogICAgICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkKCIqIiAqIDUwKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgICJObyBlbnRyeSBmb3VuZCBmb3IgZXZlbnQgJEV2ZW50SUQgdW5kZXIgJExvZ05hbWUgbG9ncyBmb3IgYWxlcnQgY29uZGl0aW9uIGluIGxhc3QgMjQgaG91cnMiCiAgICAgICAgICAgIH0KCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBXcml0ZS1PdXRwdXQgIiRMb2dOYW1lIGxvZyBmaWxlIGlzIG5vdCBwcmVzZW50IG9uIGN1cnJlbnQgc2VydmVyIgogICAgICAgIH0gIAogICAgfQogICAgY2F0Y2ggewogICAgICAgIFdyaXRlLU91dHB1dCAiW01TRzogRVJST1IgOiAkKCRfLkV4Y2VwdGlvbi5tZXNzYWdlKV0iCiAgICB9CiAKfSNGdW5jdGlvbiBHZXRFdmVudEluZm8gRW5kCgoKI0FjdHVhbCBleGVjdXRpb24gd2lsbCBzdGFydCBmcm9tIGhlcmUgICAgCnRyeSB7CiAgICA8IyBBcmNoaXRlY3R1cmUgY2hlY2sgc3RhcnRlZCBhbmQgUFMgY2hhbmdlZCB0byB0aGUgT1MgY29tcGF0aWJsZSAjPgogICAgaWYgKCRlbnY6UFJPQ0VTU09SX0FSQ0hJVEVXNjQzMiAtZXEgIkFNRDY0IikgewogICAgCiAgICAgICAgaWYgKCRteUludm9jYXRpb24uTGluZSkgewogICAgICAgICAgICAmIiRlbnY6c3lzdGVtcm9vdFxzeXNuYXRpdmVcd2luZG93c3Bvd2Vyc2hlbGxcdjEuMFxwb3dlcnNoZWxsLmV4ZSIgLU5vbkludGVyYWN0aXZlIC1Ob1Byb2ZpbGUgJG15SW52b2NhdGlvbi5MaW5lCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICAmIiRlbnY6c3lzdGVtcm9vdFxzeXNuYXRpdmVcd2luZG93c3Bvd2Vyc2hlbGxcdjEuMFxwb3dlcnNoZWxsLmV4ZSIgLU5vbkludGVyYWN0aXZlIC1Ob1Byb2ZpbGUgLWZpbGUgIiQoJG15SW52b2NhdGlvbi5JbnZvY2F0aW9uTmFtZSkiICRhcmdzCiAgICAgICAgfQogICAgICAgIGV4aXQgJGxhc3RleGl0Y29kZQogICAgfQogICAgPCNBcmNoaXRlY3R1cmUgY2hlY2sgY29tcGxldGVkICM+CgogICAgPCMgQ29tcGF0aWJpbGl0eSBjaGVjayBpZiBmb3VuZCBpbmNvbXBhdGlibGUgd2lsbCBleGl0ICM+CiAgICB0cnkgewogICAgICAgIFtkb3VibGVdJE9TVmVyc2lvbiA9IFtFbnZpcm9ubWVudF06Ok9TVmVyc2lvbi5WZXJzaW9uLlRvU3RyaW5nKDIpCiAgICAgICAgJFBTVmVyc2lvbiA9IChHZXQtSG9zdCkuVmVyc2lvbgogICAgICAgIGlmICgoJE9TVmVyc2lvbiAtbHQgNi4xKSAtb3IgKCRQU1ZlcnNpb24uTWFqb3IgLWx0IDIpKSB7CiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiW01TRzogU3lzdGVtIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIHJlcXVpcmVtZW50LiBFaXRoZXIgbWFjaGluZSBpcyBiZWxvdyBXaW5kb3dzIDcgLyBXaW5kb3dzIDIwMDhSMiBvciBQb3dlcnNoZWxsIHZlcnNpb24gaXMgbG93ZXIgdGhhbiAyLjBdIgogICAgICAgICAgICBFeGl0CiAgICAgICAgfQogICAgfQogICAgY2F0Y2ggeyBXcml0ZS1PdXRwdXQgIltNU0c6IEVSUk9SIDogJCgkXy5FeGNlcHRpb24ubWVzc2FnZSldIiA7IEVYSVQgfSAKICAgIDwjIENvbXBhdGliaWxpdHkgQ2hlY2sgQ29kZSBFbmRzICM+CgogICAgIyRPU0luZm8gPSBHZXQtV21pT2JqZWN0IC1DbGFzcyBXaW4zMl9PcGVyYXRpbmdTeXN0ZW0gLVByb3BlcnR5ICogLUVycm9yQWN0aW9uIFN0b3AKICAgICAKICAgICNSZXRyaWV2ZSBFdmVudCBJbmZvcm1hdGlvbgogICAgJGlzRXZlbnRQcmVzZW50ID0gR2V0LUV2ZW50TG9nIC1MaXN0IHwgV2hlcmUtT2JqZWN0IHsgJF8uTG9nIC1lcSAiU2VjdXJpdHkiIH0KICAgICAgICAKICAgIGlmICgkaXNFdmVudFByZXNlbnQpIHsKICAgICAgICAjY2hlY2sgZXZlbnQgSUQgbGF0ZXN0IHRyaWdnZXIgdGltZSBhbmQgbnVtYmVyIG9mIG9jY3VyYW5jZXMgd2l0aGluZyAyNCBob3VycwogICAgICAgCiAgICAgICAgR2V0RXZlbnRJbmZvIC1Mb2dOYW1lICJTZWN1cml0eSIgLUV2ZW50SUQgIjQ3MjgiCiAgICAgICAgR2V0RXZlbnRJbmZvIC1Mb2dOYW1lICJTZWN1cml0eSIgLUV2ZW50SUQgIjQ3MzIiCiAgICAgICAgR2V0RXZlbnRJbmZvIC1Mb2dOYW1lICJTZWN1cml0eSIgLUV2ZW50SUQgIjQ3NTYiCiAgICAgICAgfQogICAgCiAgICBlbHNlIHsKICAgICAgICBXcml0ZS1PdXRwdXQgIiRMb2dUeXBlIGxvZyBmaWxlIGlzIG5vdCBwcmVzZW50IG9uIGN1cnJlbnQgc2VydmVyIgogICAgICAgIEVYSVQKICAgIH0KICAgIAogICAgI0dQTyBWZXJpZmljYXRpb24KICAgICNHZXQgR1BPIGluZm9ybWF0aW9uIGZybyBjb21tYW5kIGdwcmVzdWx0CiAgICBpZiAoIShUZXN0LVBhdGggIkM6XHRlbXAiKSkgewogICAgICAgIE5ldy1JdGVtIEM6XHRlbXAgLUl0ZW1UeXBlIERpcmVjdG9yeSAtRXJyb3JBY3Rpb24gU3RvcCB8IE91dC1OdWxsCiAgICB9CiAgICAKICAgICNHZXQgR1BPIEluZm9ybWF0aW9uIGZyb20gZ3ByZXN1bHQgL3oKICAgICRHUE9BbGxJbmZvID0gRXhlY3V0ZUNNRENvbW1hbmRzIC1Db21tYW5kICJncHJlc3VsdCAvVVNFUiBgIkFkbWluaXN0cmF0b3JgIiAvU0NPUEUgQ29tcHV0ZXIgL3oiCiAgICBpZiAoJEdQT0FsbEluZm8gLW1hdGNoICJkb2VzIG5vdCBoYXZlIFJTT1AgZGF0YSIpIHsKICAgICAgICAkR1BPQWxsSW5mbyA9IEV4ZWN1dGVDTURDb21tYW5kcyAtQ29tbWFuZCAiZ3ByZXN1bHQgL1VTRVIgYCJub2NoZWxwZGVza2AiIC9TQ09QRSBDb21wdXRlciAveiIKICAgIH0KICAgIGlmICgkR1BPQWxsSW5mbyAtbWF0Y2ggImRvZXMgbm90IGhhdmUgUlNPUCBkYXRhIikgewogICAgICAgIFdyaXRlLU91dHB1dCAiJEdQT0FsbEluZm8iCiAgICB9CiAgICBlbHNlIHsKICAgICAgICAkc3RhcnRJbmRleCA9ICgkR1BPQWxsSW5mbyAtam9pbiAiYG4iKS5JbmRleE9mKCJSZXN0cmljdGVkIEdyb3VwcyIpICsgMTgKICAgICAgICAkSW5kZXhDb3VudGVyID0gKCRHUE9BbGxJbmZvIC1qb2luICJgbiIpLkluZGV4T2YoIlN5c3RlbSBTZXJ2aWNlcyIpIC0gJHN0YXJ0SW5kZXgKICAgICAgICAkcmVxdWlyZWREYXRhID0gKCRHUE9BbGxJbmZvIC1qb2luICJgbiIpLnN1YlN0cmluZygkc3RhcnRJbmRleCwgJEluZGV4Q291bnRlcikKICAgICAgICAKICAgICAgICBpZiAoJHJlcXVpcmVkRGF0YSAtbGlrZSAiKkdQTyoiKSB7CiAgICAgICAgICAgICRHUE9JbmZvID0gJHJlcXVpcmVkRGF0YQogICAgICAgIH0KICAgICAgICBXcml0ZS1PdXRwdXQgJCgiLSIgKiA0MCkKICAgICAgICBpZiAoJEdQT0luZm8pIHsKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJCZWxvdyBjb25maWd1cmF0aW9uIGhhcyBiZWVuIGRvbmUgb24gcmVzdHJpY3RlZCBncm91cHMgdXNpbmcgR1BPOiAiJCgkR1BPSW5mbyAtcmVwbGFjZSAiLS0iLCAiIikKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiRGlkIG5vdCBmaW5kICdyZXN0cmljdGVkIGdyb3VwcycgZ3JvdXAgcG9saWN5IGNvbmZpZ3VyZWQiCiAgICAgICAgfQogICAgICAgIFdyaXRlLU91dHB1dCAkKCItIiAqIDQwKQogICAgfQogICAgV3JpdGUtT3V0cHV0ICQoIi0iICogNDApCiAgICAkR1BPeG1sRmlsZSA9ICJDOlx0ZW1wXEdQT1Jlc3VsdF8kKChHZXQtRGF0ZSkuVG9TdHJpbmcoImRkTU15eWhoc3MiKSkueG1sIgogICAgJEdQT1Jlc3VsdCA9IEV4ZWN1dGVDTURDb21tYW5kcyAtQ29tbWFuZCAiZ3ByZXN1bHQgL1VTRVIgYCJBZG1pbmlzdHJhdG9yYCIgL1NDT1BFOmNvbXB1dGVyIC94ICRHUE94bWxGaWxlIgogICAgaWYgKCRHUE9SZXN1bHQgLW1hdGNoICJkb2VzIG5vdCBoYXZlIFJTT1AgZGF0YSIpIHsKICAgICAgICAkR1BPUmVzdWx0ID0gRXhlY3V0ZUNNRENvbW1hbmRzIC1Db21tYW5kICJncHJlc3VsdCAvVVNFUiBgIm5vY2hlbHBkZXNrYCIgL1NDT1BFOmNvbXB1dGVyIC94ICRHUE94bWxGaWxlIgogICAgfQogICAgCiAgICBpZiAoJEdQT1Jlc3VsdCAtbWF0Y2ggImRvZXMgbm90IGhhdmUgUlNPUCBkYXRhIikgewogICAgICAgIFdyaXRlLU91dHB1dCAiJEdQT1Jlc3VsdCIKICAgICAgICBFWElUCiAgICB9CiAgICBpZiAoVGVzdC1QYXRoICRHUE94bWxGaWxlKSB7CiAgICAgICAgW3htbF0keG1sRGF0YSA9IEdldC1Db250ZW50ICRHUE94bWxGaWxlCiAgICAgICAgJEV4dGVuc2lvbkRhdGEgPSAkeG1sRGF0YS5yc29wLkNvbXB1dGVyUmVzdWx0cy5FeHRlbnNpb25EYXRhCiAgICAgICAgJHhtbEluZm8gPSBAKCkKICAgICAgICAKICAgICAgICAkRXh0ZW5zaW9uRGF0YSB8IEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgaWYgKCgkXy5FeHRlbnNpb24uQ2hpbGROb2RlcyB8IFNlbGVjdC1PYmplY3QgQmFzZUluc3RhbmNlWG1sKS5CYXNlSW5zdGFuY2VYbWwuSU5TVEFOQ0UuTWVtYmVycy5NZW1iZXIgfCBTZWxlY3QtT2JqZWN0IG5hbWUgLUV4cGFuZFByb3BlcnR5IG5hbWUpIHsKICAgICAgICAgICAgICAgICRHUE9Eb21haW4gPSAoJF8uRXh0ZW5zaW9uLkNoaWxkTm9kZXMgfCBTZWxlY3QtT2JqZWN0IEdQTykuR1BPLkRvbWFpbi4nI3RleHQnCiAgICAgICAgICAgICAgICAkR1BPTmFtZSA9ICgkXy5FeHRlbnNpb24uQ2hpbGROb2RlcyB8IFNlbGVjdC1PYmplY3QgQmFzZUluc3RhbmNlWG1sKS5CYXNlSW5zdGFuY2VYbWwuUFJPUEVSVFkgfCBXaGVyZS1PYmplY3QgeyAkXy5OYW1lIC1lcSAicG9sbWtyQmFzZUdwb0Rpc3BsYXlOYW1lIiB9IHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgVmFsdWUKICAgICAgICAgICAgICAgICRHcm91cE5hbWUgPSAoJF8uRXh0ZW5zaW9uLkNoaWxkTm9kZXMgfCBTZWxlY3QtT2JqZWN0IEJhc2VJbnN0YW5jZVhtbCkuQmFzZUluc3RhbmNlWG1sLklOU1RBTkNFLlBST1BFUlRZIHwgV2hlcmUtT2JqZWN0IHsgJF8uTmFtZSAtZXEgInBvbG1rckdyb3VwTmFtZSIgfSB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IFZhbHVlCiAgICAgICAgICAgICAgICAkTWVtYmVyc05hbWUgPSAoJF8uRXh0ZW5zaW9uLkNoaWxkTm9kZXMgfCBTZWxlY3QtT2JqZWN0IEJhc2VJbnN0YW5jZVhtbCkuQmFzZUluc3RhbmNlWG1sLklOU1RBTkNFLk1lbWJlcnMuTWVtYmVyIHwgU2VsZWN0LU9iamVjdCBuYW1lIC1FeHBhbmRQcm9wZXJ0eSBuYW1lCiAgICAgICAgICAgICAgICAkeG1sSW5mbyArPSBXcml0ZS1PdXRwdXQgIkdQTyBEb21haW4gICA6JEdQT0RvbWFpbiIKICAgICAgICAgICAgICAgICR4bWxJbmZvICs9IFdyaXRlLU91dHB1dCAiR1BPIE5hbWUgICAgIDokR1BPTmFtZSIKICAgICAgICAgICAgICAgICR4bWxJbmZvICs9IFdyaXRlLU91dHB1dCAiU2VjdXJpdHkgR3JvdXAgd2hlcmUgdGhlIG1lbWJlcnMgYXJlIGNvbmZpZ3VyZWQgdG8gYmUgYWRkZWQgICA6JEdyb3VwTmFtZSIKICAgICAgICAgICAgICAgICR4bWxJbmZvICs9IFdyaXRlLU91dHB1dCAiTWVtYmVycyBOYW1lIHdobyBhcmUgY29uZmlndXJlZCB0byBiZSBhZGRlZCB0byBhYm92ZSBncm91cCAgICA6IgogICAgICAgICAgICAgICAgJHhtbEluZm8gKz0gJE1lbWJlcnNOYW1lIHwgRm9yRWFjaC1PYmplY3QgeyAiICAgICAgICAgICAgICAgJF8iIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoJHhtbEluZm8pIHsKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJJbmZvcm1hdGlvbiAgZnJvbSBHUE8gWE1MOiIKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICR4bWxJbmZvCiAgICAgICAgfSAKICAgICAgICBlbHNlIHsKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJUaGVyZSBhcmUgbm8gUHJlZmVyZW5jZSBQb2xpY2llcyBoYXMgYmVlbiBjb25maWd1cmVkIHRvIHVwZGF0ZSB0aGUgU2VjdXJpdHkgR3JvdXBzIgogICAgICAgIH0KICAgIH0KICAgIGVsc2UgewogICAgICAgIFdyaXRlLU91dHB1dCAieG1sIGZpbGUgJEdQT3htbEZpbGUgaXMgbm90IHByZXNlbnQiCiAgICB9Cn0jdHJ5IGNsb3NlCmNhdGNoIHsKICAgIFdyaXRlLU91dHB1dCAiW01TRzogRVJST1IgOiAkKCRfLkV4Y2VwdGlvbi5tZXNzYWdlKV0iCn0KZmluYWxseSB7CiAgICBpZiAoVGVzdC1QYXRoICRHUE94bWxGaWxlKSB7CiAgICAgICAgUmVtb3ZlLUl0ZW0gJEdQT3htbEZpbGUgLUZvcmNlIC1Db25maXJtOiRmYWxzZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZQogICAgfQp9Cg==","jsonSchema":"","uiSchema":"","isHDScript":false}