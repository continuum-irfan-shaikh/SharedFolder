{"id":"9f15b2d3-789f-11e9-acc2-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Repair LMI with results","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Script executed successfully","internal":false,"name":"Repair LMI","tags":["Windows 7","Windows 10"],"sequence":true,"content":"",
"jsonSchema":"",
"uiSchema":"",
"isHDScript":true}
