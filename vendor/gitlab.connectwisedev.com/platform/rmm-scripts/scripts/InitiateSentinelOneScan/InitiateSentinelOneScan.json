{"id":"d6a00df0-7d84-11e9-b292-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Initiate SentinelOne Scan","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Executed Successfully","internal":false,"name":"InitiateSentinelOneScan","tags":["Windows 7","Windows 10"],"sequence":true,"content":"",
"jsonSchema":{
"type":"object",
"properties":{
	"DriveToScan":{
      "type":"string",
      "title":"Enter drive to scan",
      "minLength":1
    }
 },
  "required":[
  "DriveToScan"
  ],
  "additionalProperties": false
},
"uiSchema":{
"DriveToScan":{
    "ui:autofocus":true,
    "classNames":"col-sm-12"
  },
  "ui:order":["DriveToScan"]
},
"isHDScript":true}
