{"id":"38fa1360-36b2-11ea-a00b-00155d130b01","partnerId":"00000000-0000-0000-0000-000000000000","category":["Green Computing"],"description":"Configure power management for Windows","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Executed successfully","internal":false,"name":"Configure Power Management (New)","tags":["Windows 7","Windows 10"],"sequence":true,"content":"PCMKICAgIC5TWU5PUFNJUwogICAgICAgIENvbmZpZ3VyZSBQb3dlciBNYW5hZ2VtZW50CiAgICAuREVTQ1JJUFRJT04KICAgICAgICBDb25maWd1cmUgUG93ZXIgTWFuYWdlbWVudAogICAgLkhFTFAKICAgICAgICBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzLWhhcmR3YXJlL2N1c3RvbWl6ZS9wb3dlci1zZXR0aW5ncy9jb25maWd1cmUtcG93ZXItc2V0dGluZ3MKICAgICAgICBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzLWhhcmR3YXJlL2Rlc2lnbi9kZXZpY2UtZXhwZXJpZW5jZXMvcG93ZXJjZmctY29tbWFuZC1saW5lLW9wdGlvbnMKICAgIC5BVVRIT1IKICAgICAgICBEdXJnZXNoa3VtYXIgUGF0ZWwKICAgIC5WRVJTSU9OCiAgICAgICAgMS4xCiM+Cgo8IwpBY3Rpb24gOi0gQ3JlYXRlIFNjaGVtZQogICAgICAgICAgTW9kaWZ5IFNjaGVtZQogICAgICAgICAgRGVsZXRlIFNjaGVtZQoKU2NoZW1lTmFtZTotICAgU3RyaW5nClNjaGVtZUJhc2Vkb24gOi0gQmFsYW5jZWQKICAgICAgICAgICAgICAgICAgIEhpZ2ggUGVyZm9ybWFuY2UKICAgICAgICAgICAgICAgICAgIFBvd2VyIFNhdmVyClNjaGVtZURlc2NyaXB0aW9uOi0gU3RyaW5nCgogSWYgYSBzY2hlbWUgd2l0aCB0aGlzIG5hbWUgYWxyZWFkeSBleGlzdHMgb3ZlcndyaXRlIGl0CiAKIE1ha2UgdGhpcyBzY2hlbWUgYXMgYWN0aXZlIHBvd2VyIHNjaGVtZQoKIEVuYWJsZSBIaWJlcm5hdGUgU3VwcG9ydAoKV2hlbiBDdW1wdXRlciBpcyBJZGxlCkJhdHRlcnkKUG93ZXIgQnV0dG9uIGFuZCBsaWQKUHJvY2Vzc29yIFBvd2VyIE1hbmFnZW1lbnQKUENJIEV4cHJlc3MKV2lyZWxlc3MgQWRhcHRlciBTZXR0aW5nCkFkZGl0aW9uYWwgT3B0aW9ucwojPgoKaWYgKCRlbnY6UFJPQ0VTU09SX0FSQ0hJVEVXNjQzMiAtZXEgIkFNRDY0IikgewogICAgd3JpdGUtd2FybmluZyAiRXhjZWN1dGluZyB0aGUgc2NyaXB0IHVuZGVyIDY0IGJpdCBwb3dlcnNoZWxsIgogICAgaWYgKCRteUludm9jYXRpb24uTGluZSkgewogICAgICAgICYiJGVudjpzeXN0ZW1yb290XHN5c25hdGl2ZVx3aW5kb3dzcG93ZXJzaGVsbFx2MS4wXHBvd2Vyc2hlbGwuZXhlIiAtTm9uSW50ZXJhY3RpdmUgLU5vUHJvZmlsZSAkbXlJbnZvY2F0aW9uLkxpbmUKICAgIH0KICAgIGVsc2UgewogICAgICAgICYiJGVudjpzeXN0ZW1yb290XHN5c25hdGl2ZVx3aW5kb3dzcG93ZXJzaGVsbFx2MS4wXHBvd2Vyc2hlbGwuZXhlIiAtTm9uSW50ZXJhY3RpdmUgLU5vUHJvZmlsZSAtZmlsZSAiJCgkbXlJbnZvY2F0aW9uLkludm9jYXRpb25OYW1lKSIgJGFyZ3MKICAgIH0KICAgIGV4aXQgJGxhc3RleGl0Y29kZQp9Cgp0cnkgewogICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICJzdG9wIgogICAgCiAgICAjQWRkaXRpb25hbCBDaGFuZ2UgZHVlIHRvIEpzb24gY2hhbmdlcy4gQXNzaWduaW5nIHZhbHVlcwogICAgaWYgKCgkQWN0aW9uIC1lcSAiTW9kaWZ5IFNjaGVtZSIpIC1hbmQgKCRNb2RpZnlTY2hlbWUgLWVxICJEZWZhdWx0IFNjaGVtZSIpKSB7CiAgICAgICAgc3dpdGNoICgkU2NoZW1lQmFzZWRPbikgewogICAgICAgICAgICAiMSIgeyAkU2NoZW1lTmFtZSA9ICJCYWxhbmNlZCI7IGJyZWFrIH0KICAgICAgICAgICAgIjIiIHsgJFNjaGVtZU5hbWUgPSAiSGlnaCBQZXJmb3JtYW5jZSI7IGJyZWFrIH0KICAgICAgICAgICAgIjMiIHsgJFNjaGVtZU5hbWUgPSAiUG93ZXIgU2F2ZXIiOyBicmVhayB9CiAgICAgICAgfQogICAgfQoKICAgICRuYW1lID0gKEdldC1XbWlPYmplY3QgLU5hbWVzcGFjZSAicm9vdFxjaW12Mlxwb3dlciIgLWNsYXNzIFdpbjMyX1Bvd2VyUGxhbiB8IFdoZXJlLU9iamVjdCB7ICRfLkVsZW1lbnROYW1lIC1lcSAiJFNjaGVtZU5hbWUiIH0gfCBTZWxlY3QgLUV4cGFuZFByb3BlcnR5IEluc3RhbmNlSUQpLnN1YnN0cmluZygyMCkudHJpbSgiey99IikKfQpjYXRjaCB7ICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnIH0KCiRjdXJybnRfc2NoZW1lID0gKEdldC1XbWlPYmplY3QgLW5hbWVzcGFjZSAicm9vdFxjaW12Mlxwb3dlciIgLWNsYXNzIFdpbjMyX3Bvd2VycGxhbiB8IHdoZXJlIHsgJF8uSXNBY3RpdmUgfSB8IFNlbGVjdCAtRXhwYW5kUHJvcGVydHkgSW5zdGFuY2VJRCkuc3Vic3RyaW5nKDIwKS50cmltKCJ7L30iKQoKI0FkZGl0aW9uYWwgQ2hhbmdlIGR1ZSB0byBKc29uIGNoYW5nZXMuIEFzc2lnbmluZyB2YWx1ZXMKc3dpdGNoICgkU2NoZW1lQmFzZWRPbikgewoKICAgICIxIiB7ICRTY2hlbWVCYXNlZE9uID0gIkJhbGFuY2VkIjsgYnJlYWsgfQogICAgIjIiIHsgJFNjaGVtZUJhc2VkT24gPSAiSGlnaCBQZXJmb3JtYW5jZSI7IGJyZWFrIH0KICAgICIzIiB7ICRTY2hlbWVCYXNlZE9uID0gIlBvd2VyIFNhdmVyIjsgYnJlYWsgfQp9CgojSGFyZGNvZGVkIEdVSURzIGZvciBEZWZhdWx0IFBvd2VyIFNjaGVtZXMKJFNjaGVtZV9HVUlEcyA9IEB7ICJCYWxhbmNlZCIgPSAiMzgxYjQyMjItZjY5NC00MWYwLTk2ODUtZmY1YmIyNjBkZjJlIjsgIkhpZ2ggcGVyZm9ybWFuY2UiID0gIjhjNWU3ZmRhLWU4YmYtNGE5Ni05YTg1LWE2ZTIzYThjNjM1YyI7ICJQb3dlciBzYXZlciIgPSAiYTE4NDEzMDgtMzU0MS00ZmFiLWJjODEtZjcxNTU2ZjIwYjRhIiB9CgojQ3JlYXRlIFBvd2VyIFNjaGVtZQpmdW5jdGlvbiBDcmVhdGVfU2NoZW1lIHsgCiAgICAjSWYgYSBzY2hlbWUgd2l0aCB0aGlzIG5hbWUgYWxyZWFkeSBleGlzdHMgb3ZlcndyaXRlIGl0CiAgICBpZiAoKCgkSWZTY2hlbWVFeGlzdHNPdmVyd3JpdGUgLWVxICRmYWxzZSkgLW9yIChbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgiJElmU2NoZW1lRXhpc3RzT3ZlcndyaXRlIikpKSAtYW5kICghW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJG5hbWUpKSkgewogICAgICAgICAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgImBuUG93ZXIgc2NoZW1lICckU2NoZW1lTmFtZScgYWxyZWFkeSBleGlzdCwgS2luZGx5IHNlbGVjdCBPdmVyd3JpdGUgb3B0aW9uIHRvIGF2b2lkIGR1cGxpY2F0aW9uIG9mIHBvd2VyIHNjaGVtZS4iCiAgICAgICAgZXhpdDsKICAgIH0KICAgIGVsc2VpZiAoKCRJZlNjaGVtZUV4aXN0c092ZXJ3cml0ZSAtZXEgJHRydWUpIC1hbmQgKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkbmFtZSkpKSB7CiAgICAgICAgJGdsb2JhbDpjcmVhdGVfbW9kaWZ5X3NjaGVtZSA9ICRuYW1lCiAgICAgICAgV3JpdGUtT3V0cHV0ICJgblBvd2VyIHNjaGVtZSAnJFNjaGVtZU5hbWUnIGFscmVhZHkgZXhpc3QgYW5kIGNvbmZpZ3VyYXRpb24gd2lsbCBiZSBvdmVyd3JpdHRlbi4iCiAgICB9CiAgICBlbHNlIHsKICAgICAgICAkbmV3Z3VpZCA9IFtndWlkXTo6TmV3R3VpZCgpCiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICAgICBQT1dFUkNGRyAvRFVQTElDQVRFU0NIRU1FICQoJFNjaGVtZV9HVUlEc1siJFNjaGVtZUJhc2VkT24iXSkgJG5ld2d1aWQgfCBPdXQtTnVsbAoKICAgICAgICAgICAgcG93ZXJjZmcgLWNoYW5nZW5hbWUgJG5ld2d1aWQgIiRTY2hlbWVOYW1lIiAiJFNjaGVtZURlc2NyaXB0aW9uIgogICAgICAgICAgCiAgICAgICAgICAgIFN0YXJ0LVNsZWVwIDEgCiAgICAgICAgICAgICRnbG9iYWw6Y3JlYXRlX21vZGlmeV9zY2hlbWUgPSAoR2V0LVdtaU9iamVjdCAtTmFtZXNwYWNlICJyb290XGNpbXYyXHBvd2VyIiAtY2xhc3MgV2luMzJfUG93ZXJQbGFuIHwgV2hlcmUtT2JqZWN0IHsgJF8uRWxlbWVudE5hbWUgLWVxICIkU2NoZW1lTmFtZSIgfSB8IFNlbGVjdCAtRXhwYW5kUHJvcGVydHkgSW5zdGFuY2VJRCkuc3Vic3RyaW5nKDIwKS50cmltKCJ7L30iKQogICAgICAgICAgICBXcml0ZS1PdXRwdXQgImBuJyRTY2hlbWVOYW1lJyBwb3dlciBzY2hlbWUgY3JlYXRlZCBzdWNjZXNzZnVsbHkgd2l0aCBHVUlEICRuZXdndWlkIgogICAgICAgIH0KICAgICAgICBjYXRjaCB7IAogICAgICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICAgICAgd3JpdGUtb3V0cHV0ICJgbkZhaWxlZCB0byBjcmVhdGUgJyRTY2hlbWVOYW1lJyBwb3dlciBzY2hlbWUiCiAgICAgICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICAgICAgfQogICAgfQp9CgojRGVsZXRlIFBvd2VyIFNjaGVtZQpmdW5jdGlvbiBEZWxldGVfU2NoZW1lIHsKCiAgICBpZiAoIFtzdHJpbmddOjpJc051bGxPckVtcHR5KCIkbmFtZSIpICkgewogICAgICAgIFdyaXRlLU91dHB1dCAiYG5Qb3dlciBzY2hlbWUgJyRTY2hlbWVOYW1lJyBub3QgZm91bmQiCiAgICAgICAgZXhpdDsKICAgIH0KICAgIGVsc2UgewogICAgICAgIGlmICgkbmFtZSAtbmUgJGN1cnJudF9zY2hlbWUpIHsgICAgCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgICAgICAgICBwb3dlcmNmZyAtZGVsZXRlICIkbmFtZSIKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiYG5Qb3dlciBzY2hlbWUgJyRTY2hlbWVOYW1lJyBkZWxldGVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICAgICAgfQogICAgICAgICAgICBjYXRjaCB7CiAgICAgICAgICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiYG5GYWlsZWQgdG8gZGVsZXRlIHBvd2VyIHNjaGVtZSAnJFNjaGVtZU5hbWUnIgogICAgICAgICAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJgblRoZSBhY3RpdmUgcG93ZXIgc2NoZW1lICckU2NoZW1lTmFtZScgY2Fubm90IGJlIGRlbGV0ZWQiCiAgICAgICAgICAgIGV4aXQ7CiAgICAgICAgfQogICAgfQp9CgojTW9kaWZ5IFBvd2VyIFNjaGVtZQpmdW5jdGlvbiBNb2RpZnlfU2NoZW1lIHsKCiAgICBpZiAoIFtzdHJpbmddOjpJc051bGxPckVtcHR5KCIkbmFtZSIpICkgewogICAgICAgIFdyaXRlLU91dHB1dCAiYG5Qb3dlciBzY2hlbWUgJyRTY2hlbWVOYW1lJyBub3QgZm91bmQiCiAgICAgICAgZXhpdDsKICAgIH0KICAgICAgIAogICAgaWYgKCgkSWZTY2hlbWVFeGlzdHNPdmVyd3JpdGUgLWVxICR0cnVlKSAtb3IgKCRNb2RpZnlTY2hlbWUgLWVxICJVc2VyIGRlZmluZWQgU2NoZW1lIikgLW9yICgkTW9kaWZ5U2NoZW1lIC1lcSAiRGVmYXVsdCBTY2hlbWUiKSkgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAgICAgJGdsb2JhbDpjcmVhdGVfbW9kaWZ5X3NjaGVtZSA9ICRuYW1lIAogICAgICAgICAgIAogICAgICAgICAgICBwb3dlcmNmZyAtY2hhbmdlbmFtZSAkY3JlYXRlX21vZGlmeV9zY2hlbWUgIiRTY2hlbWVOYW1lIiAiJFNjaGVtZURlc2NyaXB0aW9uIgogICAgICAgICAgICBXcml0ZS1PdXRwdXQgImBuUG93ZXIgc2NoZW1lICckU2NoZW1lTmFtZScgbW9kaWZpZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIH0KICAgICAgICBjYXRjaCB7CiAgICAgICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgICAgICBXcml0ZS1PdXRwdXQgImBuRmFpbGVkIHRvIG1vZGlmaWVkIHBvd2VyIHNjaGVtZSAnJFNjaGVtZU5hbWUnIgogICAgICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgICAgIH0KICAgIH0KfQoKI3VuZnJpZW5kbHkgdmFsdWVzCmZ1bmN0aW9uIEZybmRfQ2FsYyAoJFZhcjEpIHsKCiAgICAkRl9SZXN1bHQgPSBzd2l0Y2ggKCRWYXIxKSB7CiAgICAKICAgICAgICAiT24iIHsgIjAwMSI7IGJyZWFrIH0KICAgICAgICAiT2ZmIiB7ICIwMDAiOyBicmVhayB9CiAgICAgICAgIkRvIE5vdGhpbmciIHsgIjAwMCI7IGJyZWFrIH0KICAgICAgICAiU2xlZXAiIHsgIjAwMSI7IGJyZWFrIH0KICAgICAgICAiSGliZXJuYXRlIiB7ICIwMDIiOyBicmVhayB9CiAgICAgICAgIlNodXQgZG93biIgeyAiMDAzIjsgYnJlYWsgfQogICAgICAgICJBY3RpdmUiIHsgIjAwMSI7IGJyZWFrIH0KICAgICAgICAiUGFzc2l2ZSIgeyAiMDAwIjsgYnJlYWsgfQogICAgICAgICJNb2RlcmF0ZSBwb3dlciBzYXZpbmdzIiB7ICIwMDEiOyBicmVhayB9CiAgICAgICAgIk1heGltdW0gcG93ZXIgc2F2aW5ncyIgeyAiMDAyIjsgYnJlYWsgfQogICAgICAgICJNYXhpbXVtIFBlcmZvcm1hbmNlIiB7ICIwMDAiOyBicmVhayB9CiAgICAgICAgIkxvdyBQb3dlciBTYXZpbmciIHsgIjAwMSI7IGJyZWFrIH0KICAgICAgICAiTWVkaXVtIFBvd2VyIFNhdmluZyIgeyAiMDAyIjsgYnJlYWsgfQogICAgICAgICJNYXhpbXVtIFBvd2VyIFNhdmluZyIgeyAiMDAzIjsgYnJlYWsgfQogICAgICAgICJZZXMiIHsgIjAwMSI7IGJyZWFrIH0KICAgICAgICAiTm8iIHsgIjAwMCI7IGJyZWFrIH0KICAgIH0gCiAgICByZXR1cm4gJEZfUmVzdWx0Cn0KICAgIAojU3RhcnQgbWVudSBwb3dlciBidXR0b24gYWN0aW9uIHVuZnJpZWRubHkgdmFsdWUKZnVuY3Rpb24gRnJuZF9DYWxjMSAoJFN0bXBfVmFyKSB7CiAgICAKICAgICRTdG1wX1Zhcl9SZXN1bHQgPSBzd2l0Y2ggKCRTdG1wX1ZhcikgewogICAgCiAgICAgICAgIlNsZWVwIiB7ICIwMDAiOyBicmVhayB9CiAgICAgICAgIkhpYmVybmF0ZSIgeyAiMDAxIjsgYnJlYWsgfQogICAgICAgICJTaHV0IGRvd24iIHsgIjAwMiI7IGJyZWFrIH0KICAgIH0KICAgIHJldHVybiAkU3RtcF9WYXJfUmVzdWx0Cn0KCmZ1bmN0aW9uIEZybmRfQ2FsYzIoJFNvbWVfVmFsKSB7CiAgICAjU2xlZXAgYWN0aW9uCiAgICAkU29tZV9SZXN1bHQgPSBzd2l0Y2ggKCRTb21lX1ZhbCkgewogICAgICAgICIxIiB7ICJEbyBOb3RoaW5nIjsgYnJlYWsgfQogICAgICAgICI0IiB7ICJTbGVlcCI7IGJyZWFrIH0KICAgICAgICAiNSIgeyAiSGliZXJuYXRlIjsgYnJlYWsgfQogICAgICAgICI2IiB7ICJTaHV0IGRvd24iOyBicmVhayB9CiAgICB9CiAgICByZXR1cm4gJFNvbWVfUmVzdWx0Cn0KCmZ1bmN0aW9uIEZybmRfQ2FsYzMoJFNvbWVfVmFsMSkgewogICAgJFNvbWVfUmVzdWx0MSA9IHN3aXRjaCAoJFNvbWVfVmFsMSkgewoKICAgICAgICAjT24vT2ZmIAogICAgICAgICIxIiB7ICJPbiI7IGJyZWFrIH0KICAgICAgICAiMCIgeyAiT2ZmIjsgYnJlYWsgfQogICAgfQogICAgcmV0dXJuICRTb21lX1Jlc3VsdDEKfQoKZnVuY3Rpb24gRnJuZF9DYWxjNCAoJFNtKSB7CgogICAgJFNtX3Jlc3VsdCA9IFN3aXRjaCAoJFNtKSB7CiAgICAgICAgI0FjdGl2ZS9QYXNzaXZlCiAgICAgICAgIjEiIHsgIkFjdGl2ZSI7IGJyZWFrIH0KICAgICAgICAiMCIgeyAiUGFzc2l2ZSI7IGJyZWFrIH0KICAgIH0KICAgIHJldHVybiAkU21fcmVzdWx0Cn0KCmZ1bmN0aW9uIEZybmRfQ2FsYzUgKCRsbnN0KSB7CiAgICAjUG93ZXIgU2F2aW5nCiAgICAkbG5zdF9yZXN1bHQgPSBzd2l0Y2ggKCRsbnN0KSB7CiAgICAgICAgIjAiIHsgIk9mZiI7IGJyZWFrIH0KICAgICAgICAiMSIgeyAiTW9kZXJhdGUgcG93ZXIgc2F2aW5ncyI7IGJyZWFrIH0KICAgICAgICAiMiIgeyAiTWF4aW11bSBwb3dlciBzYXZpbmdzIjsgYnJlYWsgfQogICAgfQogICAgcmV0dXJuICRsbnN0X3Jlc3VsdAp9CgpmdW5jdGlvbiBGcm5kX0NhbGM2KCR3YXBzbSkgewogICAgI1dpcmVsZXNzIHBvd2VyIHNhdmluZ3MKICAgICR3YXBzbV9yZXN1bHQgPSBzd2l0Y2ggKCR3YXBzbSkgewogICAgICAgICIxIiB7ICJNYXhpbXVtIFBlcmZvcm1hbmNlIjsgYnJlYWsgfQogICAgICAgICIyIiB7ICJMb3cgUG93ZXIgU2F2aW5nIjsgYnJlYWsgfQogICAgICAgICIzIiB7ICJNZWRpdW0gUG93ZXIgU2F2aW5nIjsgYnJlYWsgfQogICAgICAgICI0IiB7ICJNYXhpbXVtIFBvd2VyIFNhdmluZyI7IGJyZWFrIH0KICAgIH0KICAgIHJldHVybiAkd2Fwc21fcmVzdWx0Cn0KCmZ1bmN0aW9uIEZybmRfQ2FsYzcoJFNvbWVfVikgewogICAgJFNvbWVfUmUgPSBzd2l0Y2ggKCRTb21lX1YpIHsKCiAgICAgICAgI09uL09mZiAKICAgICAgICAiMSIgeyAiWWVzIjsgYnJlYWsgfQogICAgICAgICIwIiB7ICJObyI7IGJyZWFrIH0KICAgIH0KICAgIHJldHVybiAkU29tZV9SZQp9CgokQWZ0ZXJtaW4gPSBAewogICAgIjYwIiAgICA9ICJBZnRlciAxIG1pbiIKICAgICIxMjAiICAgPSAiQWZ0ZXIgMiBtaW5zIgogICAgIjE4MCIgICA9ICJBZnRlciAzIG1pbnMiCiAgICAiMzAwIiAgID0gIkFmdGVyIDUgbWlucyIKICAgICI2MDAiICAgPSAiQWZ0ZXIgMTAgbWlucyIKICAgICI5MDAiICAgPSAiQWZ0ZXIgMTUgbWlucyIKICAgICIxMjAwIiAgPSAiQWZ0ZXIgMjAgbWlucyIKICAgICIxNTAwIiAgPSAiQWZ0ZXIgMjUgbWlucyIKICAgICIxODAwIiAgPSAiQWZ0ZXIgMzAgbWlucyIKICAgICIyNzAwIiAgPSAiQWZ0ZXIgNDUgbWlucyIKICAgICIzNjAwIiAgPSAiQWZ0ZXIgMSBob3VyIgogICAgIjcyMDAiICA9ICJBZnRlciAyIGhvdXJzIgogICAgIjEwODAwIiA9ICJBZnRlciAzIGhvdXJzIgogICAgIjE0NDAwIiA9ICJBZnRlciA0IGhvdXJzIgogICAgIjE4MDAwIiA9ICJBZnRlciA1IGhvdXJzIgogICAgIjAiICAgICA9ICJOZXZlciIKfQoKI0FjdGlvbiAKaWYgKCAkQWN0aW9uIC1lcSAiQ3JlYXRlIFNjaGVtZSIpIHsKICAgIENyZWF0ZV9TY2hlbWUKfQplbHNlaWYgKCAkQWN0aW9uIC1lcSAiTW9kaWZ5IFNjaGVtZSIgKSB7CiAgICBNb2RpZnlfU2NoZW1lCn0KZWxzZWlmICggJEFjdGlvbiAtZXEgIkRlbGV0ZSBTY2hlbWUiKSB7CiAgICBEZWxldGVfU2NoZW1lCn0KZWxzZSB7CiAgICBXcml0ZS1PdXRwdXQgImBuU2VsZWN0IEFjdGlvbiBmaXJzdCIKICAgIGV4aXQ7Cn0KCiNVcGRhdGUgdmFsdWVzIHdoZW4gY29tcHV0ZXIgaXMgcGx1Z2dlZCBpbi9vbiBCYXR0ZXJ5CmlmICgoJEFjdGlvbiAtZXEgIkNyZWF0ZSBTY2hlbWUiKSAtb3IgKCRBY3Rpb24gLWVxICJNb2RpZnkgU2NoZW1lIikpIHsgCgogICAgIyNQcmVkZWZpbmVkIFN1YkdVSURzIGFucyBTZXR0aW5nR1VJRHMgIAogICAgCiAgICAjSWYgdGhlIGNvbXB1dGVyIGlzIGlkbGUKICAgICRIYXJkX0Rpc2tfU3ViR3JvdXAgPSAiMDAxMmVlNDctOTA0MS00YjVkLTliNzctNTM1ZmJhOGIxNDQyIiAgICNIYXJkIERpc2sKICAgICRIYXJkX0Rpc2tfU2V0dGluZ0dVSUQgPSAiNjczOGUyYzQtZThhNS00YTQyLWIxNmEtZTA0MGU3Njk3NTZlIiAgIyhUdXJuIG9mZiBoYXJkIGRpc2sgYWZ0ZXIpCiAgICAKICAgICRTbGVlcF9TdWJHcm91cCA9ICIyMzhjOWZhOC0wYWFkLTQxZWQtODNmNC05N2JlMjQyYzhmMjAiICAjKFNsZWVwICAgU3RhbmRieSkKICAgICRTbGVlcF9TZXR0aW5nR1VJRCA9ICIyOWY2YzFkYi04NmRhLTQ4YzUtOWZkYi1mMmI2N2IxZjQ0ZGEiICAjKFNsZWVwIGFmdGVyKQogICAgJEhpYmVybmF0ZV9TZXR0aW5nR1VJRCA9ICI5ZDc4MTVhNi03ZWU0LTQ5N2UtODg4OC01MTVhMDVmMDIzNjQiICAjKEhpYmVybmF0ZSBhZnRlcikKICAgIAogICAgJERpc3BsYXlfU3ViR3JvdXAgPSAiNzUxNmI5NWYtZjc3Ni00NDY0LThjNTMtMDYxNjdmNDBjYzk5IiAgIyhEaXNwbGF5KQogICAgJFR1cm5PZkRpc3BsYXlfU2V0dGluZ0dVSUQgPSAiM2MwYmMwMjEtYzhhOC00ZTA3LWE5NzMtNmIxNGNiY2IyYjdlIiAgIyhUdXJuIG9mZiBkaXNwbGF5IGFmdGVyKQogICAgCiAgICAjQmF0dGVyeQogICAgJEJhdHRlcnlfU3ViZ3JvdXAgPSAiZTczYTA0OGQtYmYyNy00ZjEyLTk3MzEtOGIyMDc2ZTg4OTFmIiAgIyhCYXR0ZXJ5KQogICAgJENyaXRpY2FsX2JhdHRlcnlfbGV2ZWxfU2V0dGluZ0dVSUQgPSAiOWE2NmQ4ZDctNGZmNy00ZWY5LWI1YTItNWEzMjZjYTJhNDY5IiAgIyhDcml0aWNhbCBiYXR0ZXJ5IGxldmVsKQogICAgJENyaXRpY2FsX2JhdHRlcnlfYWN0aW9uX1NldHRpbmdHVUlEID0gIjYzN2VhMDJmLWJiY2ItNDAxNS04ZTJjLWExYzdiOWMwYjU0NiIgICMoQ3JpdGljYWwgYmF0dGVyeSBhY3Rpb24gIC1yZWFjaGVzIGNyaXRpY2FsKQogICAgJExvd19iYXR0ZXJ5X2xldmVsX1NldHRpbmdHVUlEID0gIjgxODNiYTlhLWU5MTAtNDhkYS04NzY5LTE0YWU2ZGMxMTcwYSIgICMoTG93IGJhdHRlcnkgbGV2ZWwpCiAgICAkTG93X2JhdHRlcnlfYWN0aW9uX1NldHRpbmdHVUlEID0gImQ4NzQyZGNiLTNlNmEtNGIzYy1iM2ZlLTM3NDYyM2NkY2YwNiIgICMoTG93IGJhdHRlcnkgYWN0aW9uICAgLXJlYWNoZWQgbG93KQogICAgJExvd19iYXR0ZXJ5X25vdGlmaWNhdGlvbl9TZXR0aW5nR1VJRCA9ICJiY2RlZDk1MS0xODdiLTRkMDUtYmNjYy1mN2U1MTk2MGMyNTgiICAjKExvdyBiYXR0ZXJ5IG5vdGlmaWNhdGlvbikKICAgIAogICAgI1Bvd2VyIEJ1dHRvbiBhbmQgTGlkCiAgICAkUG93ZXJfYnV0dG9uc19hbmRfbGlkX1N1Ymdyb3VwID0gIjRmOTcxZTg5LWVlYmQtNDQ1NS1hOGRlLTllNTkwNDBlNzM0NyIgICMoUG93ZXIgYnV0dG9ucyBhbmQgbGlkKQogICAgJExpZF9jbG9zZV9hY3Rpb25fU2V0dGluZ0dVSUQgPSAiNWNhODMzNjctNmU0NS00NTlmLWEyN2ItNDc2YjFkMDFjOTM2IiAgIyhMaWQgY2xvc2UgYWN0aW9uKQogICAgJFBvd2VyX2J1dHRvbl9hY3Rpb25fU2V0dGluZ0dVSUQgPSAiNzY0OGVmYTMtZGQ5Yy00ZTNlLWI1NjYtNTBmOTI5Mzg2MjgwIiAgIyhQb3dlciBidXR0b24gYWN0aW9uKQogICAgJFNsZWVwX2J1dHRvbl9hY3Rpb25fU2V0dGluZ0dVSUQgPSAiOTY5OTZiYzAtYWQ1MC00N2VjLTkyM2ItNmY0MTg3NGRkOWViIiAgIyhTbGVlcCBidXR0b24gYWN0aW9uKQogICAgJFN0YXJ0X21lbnVfcG93ZXJfYnV0dG9uX1NldHRpbmdHVUlEID0gImE3MDY2NjUzLThkNmMtNDBhOC05MTBlLWExZjU0Yjg0YzdlNSIgICMoU3RhcnQgbWVudSBwb3dlciBidXR0b24pCiAgICAKICAgICNQcm9jZXNzb3IgUG93ZXIgTWFuYWdlbWVudAogICAgJFByb2Nlc3Nvcl9wb3dlcl9tYW5hZ2VtZW50X1N1Ymdyb3VwID0gIjU0NTMzMjUxLTgyYmUtNDgyNC05NmMxLTQ3YjYwYjc0MGQwMCIgI1Byb2Nlc3NvciBwb3dlciBtYW5hZ2VtZW50KQogICAgJE1pbmltdW1fcHJvY2Vzc29yX3N0YXRlX1NldHRpbmdHVUlEID0gIjg5M2RlZThlLTJiZWYtNDFlMC04OWM2LWI1NWQwOTI5OTY0YyIgICMoTWluaW11bSBwcm9jZXNzb3Igc3RhdGUpCiAgICAkTWF4aW11bV9wcm9jZXNzb3Jfc3RhdGVfU2V0dGluZ0dVSUQgPSAiYmM1MDM4ZjctMjNlMC00OTYwLTk2ZGEtMzNhYmFmNTkzNWVjIiAgIyhNYXhpbXVtIHByb2Nlc3NvciBzdGF0ZSkKICAgICRTeXN0ZW1fY29vbGluZ19wb2xpY3lfU2V0dGluZ0dVSUQgPSAiOTRkM2E2MTUtYTg5OS00YWM1LWFlMmItZTRkOGY2MzQzNjdmIiAgIyhTeXN0ZW0gY29vbGluZyBwb2xpY3kpCiAgICAKICAgICMjUENJIEV4cHJlc3MKICAgICRQQ0lfRXhwcmVzc19TdWJncm91cCA9ICI1MDFhNGQxMy00MmFmLTQ0MjktOWZkMS1hODIxOGMyNjhlMjAiICAjKFBDSSBFeHByZXNzKQogICAgJExpbmtfU3RhdGVfUG93ZXJfTWFuYWdlbWVudF9TZXR0aW5nR1VJRCA9ICJlZTEyZjkwNi1kMjc3LTQwNGItYjZkYS1lNWZhMWE1NzZkZjUiICAjKExpbmsgU3RhdGUgUG93ZXIgTWFuYWdlbWVudCkKICAgIAogICAgIyNXaXJlbGVzcyBBZGFwdGVyIFNldHRpbmcKICAgICRXaXJlbGVzc19BZGFwdGVyX1NldHRpbmdzX1N1Ymdyb3VwID0gIjE5Y2JiOGZhLTUyNzktNDUwZS05ZmFjLThhM2Q1ZmVkZDBjMSIgICMoV2lyZWxlc3MgQWRhcHRlciBTZXR0aW5ncykKICAgICRQb3dlcl9TYXZpbmdfTW9kZV9TZXR0aW5nR1VJRCA9ICIxMmJiZWJlNi01OGQ2LTQ2MzYtOTViYi0zMjE3ZWY4NjdjMWEiICAjKFBvd2VyIFNhdmluZyBNb2RlKQogICAgCiAgICAjI0FkZGl0aW9uYWwgT3B0aW9ucwogICAgJEFkZGl0aW9uYWxfT3B0aW9uc19SZXF1aXJlX3Bhc3N3b3JkX1N1Ykdyb3VwID0gImZlYTM0MTNlLTdlMDUtNDkxMS05YTcxLTcwMDMzMWYxYzI5NCIgICAgI1N1Ykdyb3VwIEdVSUQgUmVxdWlyZSBhIHBhc3N3b3JkIG9uIHdha2V1cAogICAgJFJlcXVpcmVfcGFzc3dvcmRfU2V0dGluZ0dVSUQgPSAiMGU3OTZiZGItMTAwZC00N2Q2LWEyZDUtZjdkMmRhYTUxZjUxIiAgICNSZXF1aXJlIGEgcGFzc3dvcmQgb24gd2FrZXVwCiAgICAKICAgICRBZGRpdGlvbmFsX09wdGlvbnNfU3ViZ3JvdXAgPSAiMjM4YzlmYTgtMGFhZC00MWVkLTgzZjQtOTdiZTI0MmM4ZjIwIiAgI0FkZGl0aW9uYWxfT3B0aW9ucwogICAgJEFsbG93X2h5YnJpZF9zbGVlcF9TZXR0aW5nR1VJRCA9ICI5NGFjNmQyOS03M2NlLTQxYTYtODA5Zi02MzYzYmEyMWI0N2UiICAjIEFsbG93IGh5YnJpZCBzbGVlcAogICAgJEFsbG93X3dha2VfdGltZXJzX1NldHRpbmdHVUlEID0gImJkM2I3MThhLTA2ODAtNGQ5ZC04YWIyLWUxZDJiNGFjODA2ZCIgICNBbGxvdyB3YWtlIHRpbWVycwogICAgICAgIAogICAgJFVTQl9TdWJncm91cEdVSUQgPSAiMmE3Mzc0NDEtMTkzMC00NDAyLThkNzctYjJiZWJiYTMwOGEzIiAgIyhVU0Igc2V0dGluZ3MpCiAgICAkVVNCX3NlbGVjdGl2ZV9TZXR0aW5nR1VJRCA9ICI0OGU2YjdhNi01MGY1LTQ3ODItYTVkNC01M2JiOGYwN2UyMjYiICAjKFVTQiBzZWxlY3RpdmUgc3VzcGVuZCBzZXR0aW5nKQogICAgCiAgICAjSWYgQ29tcHV0ZXIgaXMgaWRsZSAgCiAgICAjTm90ZTotIFZhbHVlcyBmb3IgdGltZSBpcyBpbiBzZWNvbmRzLiBNdWx0aXBseSAodmFsdWUqNjApICAgCiAgICAjIHdoZW4gcGx1Z2dlZCBpbgogICAgV3JpdGUtT3V0cHV0ICJgbklmIENvbXB1dGVyIGlzIGlkbGUgOiIKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICNUdXJuIG9mIG1vbml0b3Igd2hlbiBpbiBBQyBtb2RlCiAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJERpc3BsYXlfU3ViR3JvdXAgJFR1cm5PZkRpc3BsYXlfU2V0dGluZ0dVSUQgJFR1cm5PZmZNb25pdG9yQUMgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJUdXJuIG9mZiBtb25pdG9yIHZhbHVlIHNldCB0byAnJCgkQWZ0ZXJtaW5bIiRUdXJuT2ZmTW9uaXRvckFDIl0pJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJUdXJuIG9mZiBtb25pdG9yIHZhbHVlIHNldCB0byAnJCgkQWZ0ZXJtaW5bIiRUdXJuT2ZmTW9uaXRvckFDIl0pJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIiAKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgI1R1cm4gb2YgaGFyZCBkaXNrIHdoZW4gaW4gQUMgbW9kZQogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRIYXJkX0Rpc2tfU3ViR3JvdXAgJEhhcmRfRGlza19TZXR0aW5nR1VJRCAkVHVybk9mZkhhcmREaXNrQUMKICAgICAgICBXcml0ZS1PdXRwdXQgIlR1cm4gb2ZmIGhhcmQgZGlzayB2YWx1ZSBzZXQgdG8gJyQoJEFmdGVybWluWyIkVHVybk9mZkhhcmREaXNrQUMiXSknIHdoZW4gcGx1Z2dlZCBpbiIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIlR1cm4gb2ZmIGhhcmQgZGlzayB2YWx1ZSBzZXQgdG8gJyQoJEFmdGVybWluWyIkVHVybk9mZkhhcmREaXNrQUMiXSknIGZhaWxlZCB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnIAogICAgICAgICNTdGFuZGJ5IHRpbWVvdXQgd2huZSBpbiBBQyBtb2RlCiAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFNsZWVwX1N1Ykdyb3VwICRTbGVlcF9TZXR0aW5nR1VJRCAkU3RhbmRieUFDCiAgICAgICAgV3JpdGUtT3V0cHV0ICJTdGFuZGJ5IHZhbHVlIHNldCB0byAnJCgkQWZ0ZXJtaW5bIiRTdGFuZGJ5QUMiXSknIHdoZW4gcGx1Z2dlZCBpbiIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIlN0YW5kYnkgdmFsdWUgc2V0IHRvICckKCRBZnRlcm1pblsiJFN0YW5kYnlBQyJdKScgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgI0hpYmVybmF0ZSB3aGVuIGluIEFDIG1vZGUKICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkU2xlZXBfU3ViR3JvdXAgJEhpYmVybmF0ZV9TZXR0aW5nR1VJRCAkSGliZXJuYXRlQUMKICAgICAgICBXcml0ZS1PdXRwdXQgIkhpYmVybmF0ZSB2YWx1ZSAkKCRBZnRlcm1pblsiJEhpYmVybmF0ZUFDIl0pIHVwZGF0ZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiSGliZXJuYXRlIHZhbHVlIHNldCB0byAnJCgkQWZ0ZXJtaW5bIiRIaWJlcm5hdGVBQyJdKScgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgCiAgICAjd2hlbiBvbiBiYXR0ZXJ5CiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcgCiAgICAgICAgI1R1cm4gb2YgbW9uaXRvciB3aGVuIGluIERDIG1vZGUKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkRGlzcGxheV9TdWJHcm91cCAkVHVybk9mRGlzcGxheV9TZXR0aW5nR1VJRCAkVHVybk9mZk1vbml0b3JEQyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgImBuVHVybiBvZmYgbW9uaXRvciB2YWx1ZSBzZXQgdG8gJyQoJEFmdGVybWluWyIkVHVybk9mZk1vbml0b3JEQyJdKScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiVHVybiBvZmYgbW9uaXRvciB2YWx1ZSBzZXQgdG8gJyQoJEFmdGVybWluWyIkVHVybk9mZk1vbml0b3JEQyJdKScgZmFpbGVkIHdoZW4gb24gYmF0dGVyeSIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQoKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICNUdXJuIG9mIGhhcmQgZGlzayB3aGVuIGluIERDIG1vZGUKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkSGFyZF9EaXNrX1N1Ykdyb3VwICRIYXJkX0Rpc2tfU2V0dGluZ0dVSUQgJFR1cm5PZmZIYXJkRGlza0RDCiAgICAgICAgV3JpdGUtT3V0cHV0ICJUdXJuIG9mZiBoYXJkIGRpc2sgdmFsdWUgc2V0IHRvICckKCRBZnRlcm1pblsiJFR1cm5PZmZIYXJkRGlza0RDIl0pJyB3aGVuIG9uIGJhdHRlcnkiCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJUdXJuIG9mZiBoYXJkIGRpc2sgdmFsdWUgc2V0IHRvICckKCRBZnRlcm1pblsiJFR1cm5PZmZIYXJkRGlza0RDIl0pJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgI1N0YW5kYnkgdGltZW91dCB3aGVuIGluIERDIG1vZGUKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkU2xlZXBfU3ViR3JvdXAgJFNsZWVwX1NldHRpbmdHVUlEICRTdGFuZGJ5REMKICAgICAgICBXcml0ZS1PdXRwdXQgIlN0YW5kYnkgdmFsdWUgc2V0IHRvICckKCRBZnRlcm1pblsiJFN0YW5kYnlEQyJdKScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiU3RhbmRieSB2YWx1ZSBzZXQgdG8gJyQoJEFmdGVybWluWyIkU3RhbmRieURDIl0pJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgI0hpYmVybmF0ZSB3aGVuIGluIERDIG1vZGUKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkU2xlZXBfU3ViR3JvdXAgJEhpYmVybmF0ZV9TZXR0aW5nR1VJRCAkSGliZXJuYXRlREMKICAgICAgICBXcml0ZS1PdXRwdXQgIkhpYmVybmV0IHZhbHVlIHNldCB0byAnJCgkQWZ0ZXJtaW5bIiRIaWJlcm5hdGVEQyJdKScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiSGliZXJuZXQgdmFsdWUgc2V0IHRvICckKCRBZnRlcm1pblsiJEhpYmVybmF0ZURDIl0pJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlICAgIAogICAgfQogICAgICAgIAogICAgI0JhdHRlcnkgU2V0dGluZ3MKICAgIFdyaXRlLU91dHB1dCAiYG5gbkJhdHRlcnkgU2V0dGluZ3MgOiIKICAgICMgd2hlbiBwbHVnZ2VkIGluCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjQ3JpdGljYWxCYXR0ZXJ5TGV2ZWwgIHdoZW4gcGx1Z2dlZCBpbiAgICAgICAgICAgICAgICV2YWx1ZQogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRCYXR0ZXJ5X1N1Ymdyb3VwICRDcml0aWNhbF9iYXR0ZXJ5X2xldmVsX1NldHRpbmdHVUlEICRDcml0aWNhbEJhdHRlcnlMZXZlbEFDCiAgICAgICAgV3JpdGUtT3V0cHV0ICJDcml0aWNhbCBiYXR0ZXJ5IGxldmVsIHZhbHVlIHNldCB0byAnJENyaXRpY2FsQmF0dGVyeUxldmVsQUMgJScgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiQ3JpdGljYWwgYmF0dGVyeSBsZXZlbCB2YWx1ZSBzZXQgdG8gJyRDcml0aWNhbEJhdHRlcnlMZXZlbEFDICUnIGZhaWxlZCB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjSWZCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWwgd2hlbiBwbHVnZ2VkIGluICAgICBEbyBub3RoaW5nL1NsZWVwL0hpYmVybmF0ZS9TaHV0ZG93bgogICAgICAgICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWxBQ19OYW1lID0gRnJuZF9DYWxjMiAkQmF0dGVyeUxldmVsUmVhY2hlc0NyaXRpY2FsQUMKICAgICAgICAkQmF0dGVyeUxldmVsUmVhY2hlc0NyaXRpY2FsQUNfVmFsdWUgPSBGcm5kX0NhbGMgJEJhdHRlcnlMZXZlbFJlYWNoZXNDcml0aWNhbEFDX05hbWUKICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkQmF0dGVyeV9TdWJncm91cCAkQ3JpdGljYWxfYmF0dGVyeV9hY3Rpb25fU2V0dGluZ0dVSUQgJEJhdHRlcnlMZXZlbFJlYWNoZXNDcml0aWNhbEFDX1ZhbHVlCiAgICAgICAgV3JpdGUtT3V0cHV0ICJDcml0aWNhbCBiYXR0ZXJ5IGxldmVsIGFjdGlvbiB2YWx1ZSBzZXQgdG8gJyRCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWxBQ19OYW1lJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJDcml0aWNhbCBiYXR0ZXJ5IGxldmVsIGFjdGlvbiB2YWx1ZSBzZXQgdG8gJyRCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWxBQ19OYW1lJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgI0xvd0JhdHRlcnlMZXZlbCAgd2hlbiBwbHVnZ2VkIGluICAldmFsdWUKICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkQmF0dGVyeV9TdWJncm91cCAkTG93X2JhdHRlcnlfbGV2ZWxfU2V0dGluZ0dVSUQgJExvd0JhdHRlcnlMZXZlbEFDCiAgICAgICAgV3JpdGUtT3V0cHV0ICJMb3cgYmF0dGVyeSBsZXZlbCB2YWx1ZSBzZXQgdG8gJyRMb3dCYXR0ZXJ5TGV2ZWxBQyAlJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJMb3cgYmF0dGVyeSBsZXZlbCB2YWx1ZSBzZXQgdG8gJyRMb3dCYXR0ZXJ5TGV2ZWxBQyAlJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgI0lmQmF0dGVyeUxldmVsUmVhY2hlc0xvdyB3aGVuIG9uIHBsdWdnZWQgaW4gICAgRG8gbm90aGluZy9TbGVlcC9IaWJlcm5hdGUvU2h1dGRvd24KICAgICAgICAkQmF0dGVyeUxldmVsUmVhY2hlc0xvd0FDX05hbWUgPSBGcm5kX0NhbGMyICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzTG93QUMKICAgICAgICAkQmF0dGVyeUxldmVsUmVhY2hlc0xvd0FDX1ZhbHVlID0gRnJuZF9DYWxjICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzTG93QUNfTmFtZQogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRCYXR0ZXJ5X1N1Ymdyb3VwICRMb3dfYmF0dGVyeV9hY3Rpb25fU2V0dGluZ0dVSUQgJEJhdHRlcnlMZXZlbFJlYWNoZXNMb3dBQ19WYWx1ZQogICAgICAgIFdyaXRlLU91dHB1dCAiTG93IGJhdHRlcnkgbGV2ZWwgYWN0aW9uIHZhbHVlIHNldCB0byAnJEJhdHRlcnlMZXZlbFJlYWNoZXNMb3dBQ19OYW1lJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJMb3cgYmF0dGVyeSBsZXZlbCBhY3Rpb24gdmFsdWUgc2V0IHRvICckQmF0dGVyeUxldmVsUmVhY2hlc0xvd0FDX05hbWUnIGZhaWxlZCB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjTG93QmF0dGVyeU5vdGlmdWNhdGlvbiB3aGVuIHBsdWdnZWQgaW4gICAgICBPbi9PZmYKICAgICAgICAkTG93QmF0dGVyeU5vdGlmaWNhdGlvbkFDX05hbWUgPSBGcm5kX0NhbGMzICRMb3dCYXR0ZXJ5Tm90aWZpY2F0aW9uQUMKICAgICAgICAkTG93QmF0dGVyeU5vdGlmaWNhdGlvbkFDX1ZhbHVlID0gRnJuZF9DYWxjICRMb3dCYXR0ZXJ5Tm90aWZpY2F0aW9uQUNfTmFtZQogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRCYXR0ZXJ5X1N1Ymdyb3VwICRMb3dfYmF0dGVyeV9ub3RpZmljYXRpb25fU2V0dGluZ0dVSUQgJExvd0JhdHRlcnlOb3RpZmljYXRpb25BQ19WYWx1ZQogICAgICAgIFdyaXRlLU91dHB1dCAiTG93IGJhdHRlcnkgbm90aWZpY2F0aW9uIHZhbHVlIHNldCB0byAnJExvd0JhdHRlcnlOb3RpZmljYXRpb25BQ19OYW1lJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJMb3cgYmF0dGVyeSBub3RpZmljYXRpb24gdmFsdWUgc2V0IHRvICckTG93QmF0dGVyeU5vdGlmaWNhdGlvbkFDX05hbWUnIGZhaWxlZCB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0gICAgCiAgICAKICAgICMgd2hlbiBvbiBiYXR0ZXJ5CiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjQ3JpdGljYWxCYXR0ZXJ5TGV2ZWwgIG9uIEJhdHRlcnkgICAgICAgICAgICAgICAldmFsdWUKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkQmF0dGVyeV9TdWJncm91cCAkQ3JpdGljYWxfYmF0dGVyeV9sZXZlbF9TZXR0aW5nR1VJRCAkQ3JpdGljYWxCYXR0ZXJ5TGV2ZWxEQwogICAgICAgIFdyaXRlLU91dHB1dCAiYG5Dcml0aWNhbCBiYXR0ZXJ5IGxldmVsIHZhbHVlIHNldCB0byAnJENyaXRpY2FsQmF0dGVyeUxldmVsREMgJScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiQ3JpdGljYWwgYmF0dGVyeSBsZXZlbCB2YWx1ZSBzZXQgdG8gJyRDcml0aWNhbEJhdHRlcnlMZXZlbERDICUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjSWZCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWwgd2hlbiBvbiBiYXR0ZXJ5ICAgIERvIG5vdGhpbmcvU2xlZXAvSGliZXJuYXRlL1NodXRkb3duCiAgICAgICAgJEJhdHRlcnlMZXZlbFJlYWNoZXNDcml0aWNhbERDX05hbWUgPSBGcm5kX0NhbGMyICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWxEQwogICAgICAgICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzQ3JpdGljYWxEQ19WYWx1ZSA9IEZybmRfQ2FsYyAkQmF0dGVyeUxldmVsUmVhY2hlc0NyaXRpY2FsRENfTmFtZQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRCYXR0ZXJ5X1N1Ymdyb3VwICRDcml0aWNhbF9iYXR0ZXJ5X2FjdGlvbl9TZXR0aW5nR1VJRCAkQmF0dGVyeUxldmVsUmVhY2hlc0NyaXRpY2FsRENfVmFsdWUKICAgICAgICBXcml0ZS1PdXRwdXQgIkNyaXRpY2FsIGJhdHRlcnkgbGV2ZWwgYWN0aW9uIHZhbHVlIHNldCB0byAnJEJhdHRlcnlMZXZlbFJlYWNoZXNDcml0aWNhbERDX05hbWUnIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIkNyaXRpY2FsIGJhdHRlcnkgbGV2ZWwgYWN0aW9uIHZhbHVlIHNldCB0byAnJEJhdHRlcnlMZXZlbFJlYWNoZXNDcml0aWNhbERDX05hbWUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjTG93QmF0dGVyeUxldmVsICB3aGVuIG9uIGJhdHRlcnkgICV2YWx1ZQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRCYXR0ZXJ5X1N1Ymdyb3VwICRMb3dfYmF0dGVyeV9sZXZlbF9TZXR0aW5nR1VJRCAkTG93QmF0dGVyeUxldmVsREMKICAgICAgICBXcml0ZS1PdXRwdXQgIkxvdyBiYXR0ZXJ5IGxldmVsIHZhbHVlIHNldCB0byAnJExvd0JhdHRlcnlMZXZlbERDICUnIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIkxvdyBiYXR0ZXJ5IGxldmVsIHZhbHVlIHNldCB0byAnJExvd0JhdHRlcnlMZXZlbERDICUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjSWZCYXR0ZXJ5TGV2ZWxSZWFjaGVzTG93IHdoZW4gb24gYmF0dGVyeSAgICBEbyBub3RoaW5nL1NsZWVwL0hpYmVybmF0ZS9TaHV0ZG93bgogICAgICAgICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzTG93RENfTmFtZSA9IEZybmRfQ2FsYzIgJEJhdHRlcnlMZXZlbFJlYWNoZXNMb3dEQwogICAgICAgICRCYXR0ZXJ5TGV2ZWxSZWFjaGVzTG93RENfVmFsdWUgPSBGcm5kX0NhbGMgJEJhdHRlcnlMZXZlbFJlYWNoZXNMb3dEQ19OYW1lCiAgICAgICAgcG93ZXJjZmcgL1NFVERDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJEJhdHRlcnlfU3ViZ3JvdXAgJExvd19iYXR0ZXJ5X2FjdGlvbl9TZXR0aW5nR1VJRCAkQmF0dGVyeUxldmVsUmVhY2hlc0xvd0RDX1ZhbHVlCiAgICAgICAgV3JpdGUtT3V0cHV0ICJMb3cgYmF0dGVyeSBsZXZlbCBhY3Rpb24gdmFsdWUgc2V0IHRvICckQmF0dGVyeUxldmVsUmVhY2hlc0xvd0RDX05hbWUnIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIkxvdyBiYXR0ZXJ5IGxldmVsIGFjdGlvbiB2YWx1ZSBzZXQgdG8gJyRCYXR0ZXJ5TGV2ZWxSZWFjaGVzTG93RENfTmFtZScgZmFpbGVkIHdoZW4gb24gYmF0dGVyeSIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQoKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICNMb3dCYXR0ZXJ5Tm90aWZpY2F0aW9uIG9uIEJhdHRlcnkgICAgICAgT24vT2ZmCiAgICAgICAgJExvd0JhdHRlcnlOb3RpZmljYXRpb25EQ19OYW1lID0gRnJuZF9DYWxjMyAkTG93QmF0dGVyeU5vdGlmaWNhdGlvbkRDCiAgICAgICAgJExvd0JhdHRlcnlOb3RpZmljYXRpb25EQ19WYWx1ZSA9IEZybmRfQ2FsYyAkTG93QmF0dGVyeU5vdGlmaWNhdGlvbkRDX05hbWUKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkQmF0dGVyeV9TdWJncm91cCAkTG93X2JhdHRlcnlfbm90aWZpY2F0aW9uX1NldHRpbmdHVUlEICRMb3dCYXR0ZXJ5Tm90aWZpY2F0aW9uRENfVmFsdWUKICAgICAgICBXcml0ZS1PdXRwdXQgIkxvdyBiYXR0ZXJ5IGxldmVsIG5vdGlmaWNhdGlvbiB2YWx1ZSBzZXQgdG8gJyRMb3dCYXR0ZXJ5Tm90aWZpY2F0aW9uRENfTmFtZScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiTG93IGJhdHRlcnkgbGV2ZWwgbm90aWZpY2F0aW9uIHZhbHVlIHNldCB0byAnJExvd0JhdHRlcnlOb3RpZmljYXRpb25EQ19OYW1lJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgICNQb3dlciBCdXR0b24gYW5kIGxpZAogICAgV3JpdGUtT3V0cHV0ICJgbmBuUG93ZXIgQnV0dG9uIGFuZCBsaWQgOiIKICAgICN3aGVuIHBsdWdnZWQgaW4KICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICRXaGVuQ2xvc2VUaGVMaWRBQ19OYW1lID0gRnJuZF9DYWxjMiAkV2hlbkNsb3NlVGhlTGlkQUMKICAgICAgICAkV2hlbkNsb3NlVGhlTGlkQUNfVmFsdWUgPSBGcm5kX0NhbGMgJFdoZW5DbG9zZVRoZUxpZEFDX05hbWUKICAgICAgICAjIENsb3NlIHRoZSBsaWQgd2hlbiBwbHVnZ2VkIGluIAogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRQb3dlcl9idXR0b25zX2FuZF9saWRfU3ViZ3JvdXAgJExpZF9jbG9zZV9hY3Rpb25fU2V0dGluZ0dVSUQgJFdoZW5DbG9zZVRoZUxpZEFDX1ZhbHVlCiAgICAgICAgV3JpdGUtT3V0cHV0ICJXaGVuIGNsb3NlIHRoZSBsaWQgdmFsdWUgc2V0IHRvICckV2hlbkNsb3NlVGhlTGlkQUNfTmFtZScgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiV2hlbiBjbG9zZSB0aGUgbGlkIHZhbHVlIHNldCB0byAnJFdoZW5DbG9zZVRoZUxpZEFDX05hbWUnIGZhaWxlZCB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJFdoZW5QcmVzc1RoZVBvd2VyQnV0dG9uQUNfTmFtZSA9IEZybmRfQ2FsYzIgJFdoZW5QcmVzc1RoZVBvd2VyQnV0dG9uQUMKICAgICAgICAkV2hlblByZXNzVGhlUG93ZXJCdXR0b25BQ19WYWx1ZSA9IEZybmRfQ2FsYyAkV2hlblByZXNzVGhlUG93ZXJCdXR0b25BQ19OYW1lCiAgICAgICAgI1ByZXNzIFBvd2VyIEJ1dHRvbiB3aGVuIHBsdWdnZWQgaW4KICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkUG93ZXJfYnV0dG9uc19hbmRfbGlkX1N1Ymdyb3VwICRQb3dlcl9idXR0b25fYWN0aW9uX1NldHRpbmdHVUlEICRXaGVuUHJlc3NUaGVQb3dlckJ1dHRvbkFDX1ZhbHVlCiAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmVzcyBwb3dlciBidXR0b24gdmFsdWUgc2V0IHRvICckV2hlblByZXNzVGhlUG93ZXJCdXR0b25BQ19OYW1lJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmVzcyBwb3dlciBidXR0b24gdmFsdWUgc2V0IHRvICckV2hlblByZXNzVGhlUG93ZXJCdXR0b25BQ19OYW1lJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICRXaGVuUHJlc3NUaGVTbGVlcEJ1dHRvbkFDX05hbWUgPSBGcm5kX0NhbGMyICRXaGVuUHJlc3NUaGVTbGVlcEJ1dHRvbkFDCiAgICAgICAgJFdoZW5QcmVzc1RoZVNsZWVwQnV0dG9uQUNfVmFsdWUgPSBGcm5kX0NhbGMgJFdoZW5QcmVzc1RoZVNsZWVwQnV0dG9uQUNfTmFtZQogICAgICAgICNQcmVzcyBTbGVlcCBCdXR0b24gd2hlbiBwbHVnZ2VkIGluCiAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFBvd2VyX2J1dHRvbnNfYW5kX2xpZF9TdWJncm91cCAkU2xlZXBfYnV0dG9uX2FjdGlvbl9TZXR0aW5nR1VJRCAkV2hlblByZXNzVGhlU2xlZXBCdXR0b25BQ19WYWx1ZQogICAgICAgIFdyaXRlLU91dHB1dCAiUHJlc3Mgc2xlZXAgYnV0dG9uIHZhbHVlIHNldCB0byAnJFdoZW5QcmVzc1RoZVNsZWVwQnV0dG9uQUNfTmFtZScgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiUHJlc3Mgc2xlZXAgYnV0dG9uIHZhbHVlIHNldCB0byAnJFdoZW5QcmVzc1RoZVNsZWVwQnV0dG9uQUNfTmFtZScgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICBpZiAoJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uQUMgLW5lICIxIikgeyAKICAgICAgICAgICAgJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uQUNfTmFtZSA9IEZybmRfQ2FsYzIgJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uQUMKICAgICAgICAgICAgJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uQUNfVmFsID0gRnJuZF9DYWxjMSAkV2hlblByZXNzVGhlU3RhcnRNZW51UG93ZXJCdXR0b25BQ19OYW1lCiAgICAgICAgICAgICNQcmVzcyBTdGFydCBNZW51IFBvd2VyIEJ1dHRvbiB3aGVuIHBsdWdnZWQgaW4KICAgICAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFBvd2VyX2J1dHRvbnNfYW5kX2xpZF9TdWJncm91cCAkU3RhcnRfbWVudV9wb3dlcl9idXR0b25fU2V0dGluZ0dVSUQgJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uQUNfVmFsCiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiUHJlc3Mgc3RhcnQgbWVudSBwb3dlciBidXR0b24gdmFsdWUgc2V0IHRvICckV2hlblByZXNzVGhlU3RhcnRNZW51UG93ZXJCdXR0b25BQ19OYW1lJyB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBXcml0ZS1PdXRwdXQgIlByZXNzIHN0YXJ0IG1lbnUgcG93ZXIgYnV0dG9uIHZhbHVlIHNldCB0byAnRG8gTm90aGluZycgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIH0KICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIlByZXNzIHN0YXJ0IG1lbnUgcG93ZXIgYnV0dG9uIHZhbHVlIHNldCB0byAnJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uQUNfTmFtZScgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgICAgIAogICAgIyB3aGVuIG9uIGJhdHRlcnkKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICRXaGVuQ2xvc2VUaGVMaWREQ19OYW1lID0gRnJuZF9DYWxjMiAkV2hlbkNsb3NlVGhlTGlkREMKICAgICAgICAkV2hlbkNsb3NlVGhlTGlkRENfVmFsID0gRnJuZF9DYWxjICRXaGVuQ2xvc2VUaGVMaWREQ19OYW1lCiAgICAgICAgIyBDbG9zZSB0aGUgbGlkIHdoZW4gb24gYmF0dGVyeSAKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkUG93ZXJfYnV0dG9uc19hbmRfbGlkX1N1Ymdyb3VwICRMaWRfY2xvc2VfYWN0aW9uX1NldHRpbmdHVUlEICRXaGVuQ2xvc2VUaGVMaWREQ19WYWwKICAgICAgICBXcml0ZS1PdXRwdXQgImBuQ2xvc2UgdGhlIGxpZCB2YWx1ZSBzZXQgdG8gJyRXaGVuQ2xvc2VUaGVMaWREQ19OYW1lJyB3aGVuIG9uIGJhdHRlcnkiCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJDbG9zZSB0aGUgbGlkIHZhbHVlIHNldCB0byAnJFdoZW5DbG9zZVRoZUxpZERDX05hbWUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJFdoZW5QcmVzc1RoZVBvd2VyQnV0dG9uRENfTmFtZSA9IEZybmRfQ2FsYzIgJFdoZW5QcmVzc1RoZVBvd2VyQnV0dG9uREMKICAgICAgICAkV2hlblByZXNzVGhlUG93ZXJCdXR0b25EQ19WYWwgPSBGcm5kX0NhbGMgJFdoZW5QcmVzc1RoZVBvd2VyQnV0dG9uRENfTmFtZQogICAgICAgICNQcmVzcyBQb3dlciBCdXR0b24gd2hlbiBvbiBiYXR0ZXJ5CiAgICAgICAgcG93ZXJjZmcgL1NFVERDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFBvd2VyX2J1dHRvbnNfYW5kX2xpZF9TdWJncm91cCAkUG93ZXJfYnV0dG9uX2FjdGlvbl9TZXR0aW5nR1VJRCAkV2hlblByZXNzVGhlUG93ZXJCdXR0b25EQ19WYWwKICAgICAgICBXcml0ZS1PdXRwdXQgIlByZXNzIHBvd2VyIGJ1dHRvbiB2YWx1ZSBzZXQgdG8gJyRXaGVuUHJlc3NUaGVQb3dlckJ1dHRvbkRDX05hbWUnIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIlByZXNzIHBvd2VyIGJ1dHRvbiB2YWx1ZSBzZXQgdG8gJyRXaGVuUHJlc3NUaGVQb3dlckJ1dHRvbkRDX05hbWUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgICAgICAKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICRXaGVuUHJlc3NUaGVTbGVlcEJ1dHRvbkRDX05hbWUgPSBGcm5kX0NhbGMyICRXaGVuUHJlc3NUaGVTbGVlcEJ1dHRvbkRDCiAgICAgICAgJFdoZW5QcmVzc1RoZVNsZWVwQnV0dG9uRENfVmFsID0gRnJuZF9DYWxjICRXaGVuUHJlc3NUaGVTbGVlcEJ1dHRvbkRDX05hbWUKICAgICAgICAjUHJlc3MgU2xlZXAgQnV0dG9uIHdoZW4gb24gYmF0dGVyeQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRQb3dlcl9idXR0b25zX2FuZF9saWRfU3ViZ3JvdXAgJFNsZWVwX2J1dHRvbl9hY3Rpb25fU2V0dGluZ0dVSUQgJFdoZW5QcmVzc1RoZVNsZWVwQnV0dG9uRENfVmFsCiAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmVzcyBzbGVlcCBidXR0b24gdmFsdWUgc2V0IHRvICckV2hlblByZXNzVGhlU2xlZXBCdXR0b25EQ19OYW1lJyB3aGVuIG9uIGJhdHRlcnkiCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmVzcyBzbGVlcCBidXR0b24gdmFsdWUgc2V0IHRvICckV2hlblByZXNzVGhlU2xlZXBCdXR0b25EQ19OYW1lJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgaWYgKCRXaGVuUHJlc3NUaGVTdGFydE1lbnVQb3dlckJ1dHRvbkRDIC1uZSAiMSIpIHsgCiAgICAgICAgICAgICRXaGVuUHJlc3NUaGVTdGFydE1lbnVQb3dlckJ1dHRvbkRDX05hbWUgPSBGcm5kX0NhbGMyICRXaGVuUHJlc3NUaGVTdGFydE1lbnVQb3dlckJ1dHRvbkRDCiAgICAgICAgICAgICRXaGVuUHJlc3NUaGVTdGFydE1lbnVQb3dlckJ1dHRvbkRDX3ZhbCA9IEZybmRfQ2FsYzEgJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uRENfTmFtZQogICAgICAgICAgICAjUHJlc3MgU3RhcnQgTWVudSBQb3dlciBCdXR0b24gd2hlbiBvbiBiYXR0ZXJ5CiAgICAgICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRQb3dlcl9idXR0b25zX2FuZF9saWRfU3ViZ3JvdXAgJFN0YXJ0X21lbnVfcG93ZXJfYnV0dG9uX1NldHRpbmdHVUlEICRXaGVuUHJlc3NUaGVTdGFydE1lbnVQb3dlckJ1dHRvbkRDX3ZhbAogICAgICAgICAgICBXcml0ZS1PdXRwdXQgIlByZXNzIHN0YXJ0IG1lbnUgcG93ZXIgYnV0dG9uIHZhbHVlIHNldCB0byAnJFdoZW5QcmVzc1RoZVN0YXJ0TWVudVBvd2VyQnV0dG9uRENfTmFtZScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmVzcyBzdGFydCBtZW51IHBvd2VyIGJ1dHRvbiB2YWx1ZSBzZXQgdG8gJ0RvIE5vdGhpbmcnIHdoZW4gb24gYmF0dGVyeSIKICAgICAgICB9CiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJQcmVzcyBzdGFydCBtZW51IHBvd2VyIGJ1dHRvbiB2YWx1ZSBzZXQgdG8gJyRXaGVuUHJlc3NUaGVTdGFydE1lbnVQb3dlckJ1dHRvbkRDX05hbWUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0gICAgCiAgICAKICAgICNQcm9jZXNzb3IgUG93ZXIgTWFuYWdlbWVudAogICAgV3JpdGUtT3V0cHV0ICJgbmBuUHJvY2Vzc29yIFBvd2VyIE1hbmFnZW1lbnQgOiIKICAgICMgd2hlbiBwbHVnZ2VkIGluCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjIE1pbmltdW0gUHJvY2Vzc29yIFN0YXRlIHdoZW4gcGx1Z2VkIGluCiAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFByb2Nlc3Nvcl9wb3dlcl9tYW5hZ2VtZW50X1N1Ymdyb3VwICRNaW5pbXVtX3Byb2Nlc3Nvcl9zdGF0ZV9TZXR0aW5nR1VJRCAkTWluaW11bVByb2Nlc3NvclN0YXRlQUMKICAgICAgICBXcml0ZS1PdXRwdXQgIk1pbmltdW0gcHJvY2Vzc29yIHN0YXRlIHZhbHVlIHNldCB0byAnJE1pbmltdW1Qcm9jZXNzb3JTdGF0ZUFDICUnIHdoZW4gcGx1Z2dlZCBpbiIKICAgIH0KCiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJNaW5pbXVtIHByb2Nlc3NvciBzdGF0ZSB2YWx1ZSBzZXQgdG8gJyRNaW5pbXVtUHJvY2Vzc29yU3RhdGVBQyAlJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICMgTWF4aW11bSBQcm9jZXNzb3IgU3RhdGUgd2hlbiBwbHVnZWQgaW4KICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkUHJvY2Vzc29yX3Bvd2VyX21hbmFnZW1lbnRfU3ViZ3JvdXAgJE1heGltdW1fcHJvY2Vzc29yX3N0YXRlX1NldHRpbmdHVUlEICRNYXhpbXVtUHJvY2Vzc29yU3RhdGVBQwogICAgICAgIFdyaXRlLU91dHB1dCAiTWF4aW11bSBwcm9jZXNzb3Igc3RhdGUgdmFsdWUgc2V0IHRvICckTWF4aW11bVByb2Nlc3NvclN0YXRlQUMgJScgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgCiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJNYXhpbXVtIHByb2Nlc3NvciBzdGF0ZSB2YWx1ZSBzZXQgdG8gJyRNYXhpbXVtUHJvY2Vzc29yU3RhdGVBQyAlJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJFN5c3RlbUNvb2xpbmdQb2xpY3lBQ19OYW1lID0gRnJuZF9DYWxjNCAkU3lzdGVtQ29vbGluZ1BvbGljeUFDCiAgICAgICAgJFN5c3RlbUNvb2xpbmdQb2xpY3lBQ19WYWwgPSBGcm5kX0NhbGMgJFN5c3RlbUNvb2xpbmdQb2xpY3lBQ19OYW1lCiAgICAgICAgI1N5c3RlbUNvb2xpbmdQb2xpY3kgd2hlbiBwbHVnZ2VkIGluCiAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFByb2Nlc3Nvcl9wb3dlcl9tYW5hZ2VtZW50X1N1Ymdyb3VwICRTeXN0ZW1fY29vbGluZ19wb2xpY3lfU2V0dGluZ0dVSUQgJFN5c3RlbUNvb2xpbmdQb2xpY3lBQ19WYWwKICAgICAgICBXcml0ZS1PdXRwdXQgIlN5c3RlbSBjb29saW5nIHBvbGljeSB2YWx1ZSBzZXQgdG8gJyRTeXN0ZW1Db29saW5nUG9saWN5QUNfTmFtZScgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiU3lzdGVtIGNvb2xpbmcgcG9saWN5IHZhbHVlIHNldCB0byAnJFN5c3RlbUNvb2xpbmdQb2xpY3lBQ19OYW1lJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgICMgd2hlbiBvbiBiYXR0ZXJ5CiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAjIE1pbmltdW0gUHJvY2Vzc29yIFN0YXRlIHdoZW4gb24gYmF0dGVyeQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRQcm9jZXNzb3JfcG93ZXJfbWFuYWdlbWVudF9TdWJncm91cCAkTWluaW11bV9wcm9jZXNzb3Jfc3RhdGVfU2V0dGluZ0dVSUQgJE1pbmltdW1Qcm9jZXNzb3JTdGF0ZURDCiAgICAgICAgV3JpdGUtT3V0cHV0ICJgbk1pbmltdW0gcHJvY2Vzc29yIHN0YXRlIHZhbHVlIHNldCB0byAnJE1pbmltdW1Qcm9jZXNzb3JTdGF0ZURDICUnIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIk1pbmltdW0gcHJvY2Vzc29yIHN0YXRlIHZhbHVlIHNldCB0byAnJE1pbmltdW1Qcm9jZXNzb3JTdGF0ZURDICUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgIyBNYXhpbXVtIFByb2Nlc3NvciBTdGF0ZSB3aGVuIG9uIGJhdHRlcnkKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkUHJvY2Vzc29yX3Bvd2VyX21hbmFnZW1lbnRfU3ViZ3JvdXAgJE1heGltdW1fcHJvY2Vzc29yX3N0YXRlX1NldHRpbmdHVUlEICRNYXhpbXVtUHJvY2Vzc29yU3RhdGVEQwogICAgICAgIFdyaXRlLU91dHB1dCAiTWF4aW11bSBwcm9jZXNzb3Igc3RhdGUgdmFsdWUgc2V0IHRvICckTWF4aW11bVByb2Nlc3NvclN0YXRlREMgJScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiTWF4aW11bSBwcm9jZXNzb3Igc3RhdGUgdmFsdWUgc2V0IHRvICckTWF4aW11bVByb2Nlc3NvclN0YXRlREMgJScgZmFpbGVkIHdoZW4gb24gYmF0dGVyeSIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAkU3lzdGVtQ29vbGluZ1BvbGljeURDX05hbWUgPSBGcm5kX0NhbGM0ICRTeXN0ZW1Db29saW5nUG9saWN5REMKICAgICAgICAkU3lzdGVtQ29vbGluZ1BvbGljeURDX1ZhbCA9IEZybmRfQ2FsYyAkU3lzdGVtQ29vbGluZ1BvbGljeURDX05hbWUKICAgICAgICAjU3lzdGVtQ29vbGluZ1BvbGljeSB3aGVuIG9uIGJhdHRlcnkKICAgICAgICBwb3dlcmNmZyAvU0VURENWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkUHJvY2Vzc29yX3Bvd2VyX21hbmFnZW1lbnRfU3ViZ3JvdXAgJFN5c3RlbV9jb29saW5nX3BvbGljeV9TZXR0aW5nR1VJRCAkU3lzdGVtQ29vbGluZ1BvbGljeURDX1ZhbAogICAgICAgIFdyaXRlLU91dHB1dCAiU3lzdGVtIGNvb2xpbmcgcG9saWN5IHZhbHVlIHNldCB0byAnJFN5c3RlbUNvb2xpbmdQb2xpY3lEQ19OYW1lJyB3aGVuIG9uIGJhdHRlcnkiCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJTeXN0ZW0gY29vbGluZyBwb2xpY3kgdmFsdWUgc2V0IHRvICckU3lzdGVtQ29vbGluZ1BvbGljeURDX05hbWUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgI1BDSSBFeHByZXNzCiAgICBXcml0ZS1PdXRwdXQgImBuYG5QQ0kgRXhwcmVzcyA6IgogICAgIyB3aGVuIHBsdWdnZWQgaW4gCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAkTGlua1N0YXRlUG93ZXJNYW5hZ2VtZW50QUNfTmFtZSA9IEZybmRfQ2FsYzUgJExpbmtTdGF0ZVBvd2VyTWFuYWdlbWVudEFDCiAgICAgICAgJExpbmtTdGF0ZVBvd2VyTWFuYWdlbWVudEFDX1ZhbCA9IEZybmRfQ2FsYyAkTGlua1N0YXRlUG93ZXJNYW5hZ2VtZW50QUNfTmFtZQogICAgICAgICNMaW5rIFN0YXRlIFBvd2VyIE1hbmFnZW1lbnQgd2hlbiBwbHVnZ2VkIGluCiAgICAgICAgcG93ZXJjZmcgL1NFVEFDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFBDSV9FeHByZXNzX1N1Ymdyb3VwICRMaW5rX1N0YXRlX1Bvd2VyX01hbmFnZW1lbnRfU2V0dGluZ0dVSUQgJExpbmtTdGF0ZVBvd2VyTWFuYWdlbWVudEFDX1ZhbCAKICAgICAgICBXcml0ZS1PdXRwdXQgIkxpbmsgc3RhdGUgcG93ZXIgbWFuYWdlbWVudCB2YWx1ZSBzZXQgdG8gJyRMaW5rU3RhdGVQb3dlck1hbmFnZW1lbnRBQ19OYW1lJyB3aGVuIHBsdWdnZWQgaW4iCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJMaW5rIHN0YXRlIHBvd2VyIG1hbmFnZW1lbnQgdmFsdWUgc2V0IHRvICckTGlua1N0YXRlUG93ZXJNYW5hZ2VtZW50QUNfTmFtZScgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgCiAgICAjIHdoZW4gb24gYmF0dGVyeQogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnICAgCiAgICAgICAgJExpbmtTdGF0ZVBvd2VyTWFuYWdlbWVudERDX05hbWUgPSBGcm5kX0NhbGM1ICRMaW5rU3RhdGVQb3dlck1hbmFnZW1lbnREQwogICAgICAgICRMaW5rU3RhdGVQb3dlck1hbmFnZW1lbnREQ19WYWwgPSBGcm5kX0NhbGMgJExpbmtTdGF0ZVBvd2VyTWFuYWdlbWVudERDX05hbWUKICAgICAgICAjTGluayBTdGF0ZSBQb3dlciBNYW5hZ2VtZW50IHdoZW4gb24gYmF0dGVyeQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRQQ0lfRXhwcmVzc19TdWJncm91cCAkTGlua19TdGF0ZV9Qb3dlcl9NYW5hZ2VtZW50X1NldHRpbmdHVUlEICRMaW5rU3RhdGVQb3dlck1hbmFnZW1lbnREQ19WYWwKICAgICAgICBXcml0ZS1PdXRwdXQgImBuTGluayBzdGF0ZSBwb3dlciBtYW5hZ2VtZW50IHZhbHVlIHNldCB0byAnJExpbmtTdGF0ZVBvd2VyTWFuYWdlbWVudERDX05hbWUnIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIkxpbmsgc3RhdGUgcG93ZXIgbWFuYWdlbWVudCB2YWx1ZSBzZXQgdG8gJyRMaW5rU3RhdGVQb3dlck1hbmFnZW1lbnREQ19OYW1lJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgICNXaXJlbGVzcyBBZGFwdGVyIFNldHRpbmcKICAgIFdyaXRlLU91dHB1dCAiYG5gbldpcmVsZXNzIEFkYXB0ZXIgU2V0dGluZyA6IgogICAgIyB3aGVuIHBsdWdnZWQgaW4gCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcgIAogICAgICAgICRXaXJlbGVzc0FkYXB0ZXJQb3dlclNhdmluZ01vZGVBQ19OYW1lID0gRnJuZF9DYWxjNiAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlQUMKICAgICAgICAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlQUNfViA9IEZybmRfQ2FsYyAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlQUNfTmFtZQogICAgICAgICNXaXJlbGVzcyBQb3dlciBTYXZpbiBNb2RlIHdoZW4gcGx1Z2dlZCBpbgogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRXaXJlbGVzc19BZGFwdGVyX1NldHRpbmdzX1N1Ymdyb3VwICRQb3dlcl9TYXZpbmdfTW9kZV9TZXR0aW5nR1VJRCAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlQUNfVgogICAgICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiV2lyZWxlc3MgcG93ZXIgc2F2aW5nIHZhbHVlIHNldCB0byAnJFdpcmVsZXNzQWRhcHRlclBvd2VyU2F2aW5nTW9kZUFDX05hbWUnIHdoZW4gcGx1Z2dlZCBpbiIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIldpcmVsZXNzIHBvd2VyIHNhdmluZyB2YWx1ZSBzZXQgdG8gJyRXaXJlbGVzc0FkYXB0ZXJQb3dlclNhdmluZ01vZGVBQ19OYW1lJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgICMgd2hlbiBvbiBiYXR0ZXJ5CiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcgIAogICAgICAgICRXaXJlbGVzc0FkYXB0ZXJQb3dlclNhdmluZ01vZGVEQ19OYW1lID0gRnJuZF9DYWxjNiAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlREMKICAgICAgICAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlRENfViA9IEZybmRfQ2FsYyAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlRENfTmFtZQogICAgICAgICNXaXJlbGVzcyBQb3dlciBTYXZpbiBNb2RlIHdoZW4gcGx1Z2dlZCBpbgogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRXaXJlbGVzc19BZGFwdGVyX1NldHRpbmdzX1N1Ymdyb3VwICRQb3dlcl9TYXZpbmdfTW9kZV9TZXR0aW5nR1VJRCAkV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlRENfVgogICAgICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiYG5XaXJlbGVzcyBwb3dlciBzYXZpbmcgdmFsdWUgc2V0IHRvICckV2lyZWxlc3NBZGFwdGVyUG93ZXJTYXZpbmdNb2RlRENfTmFtZScgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiV2lyZWxlc3MgcG93ZXIgc2F2aW5nIHZhbHVlIHNldCB0byAnJFdpcmVsZXNzQWRhcHRlclBvd2VyU2F2aW5nTW9kZURDX05hbWUnIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgI0FkZGl0aW9uYWwgT3B0aW9ucwogICAgV3JpdGUtT3V0cHV0ICJgbmBuQWRkaXRpb25hbCBPcHRpb25zIDoiCiAgICAjIHdoZW4gcGx1Z2dlZCBpbiAKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICRSZXF1aXJlUGFzc3dvcmRPbldha2V1cEFDX04gPSBGcm5kX0NhbGM3ICRSZXF1aXJlUGFzc3dvcmRPbldha2V1cEFDCiAgICAgICAgJFJlcXVpcmVQYXNzd29yZE9uV2FrZXVwQUNfViA9IEZybmRfQ2FsYyAkUmVxdWlyZVBhc3N3b3JkT25XYWtldXBBQ19OCiAgICAgICAgIyBSZXF1aXJlIGEgcGFzc3dvcmQgb24gd2FrZXVwIHdoZW4gcGx1Z2dlZCBpbgogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRBZGRpdGlvbmFsX09wdGlvbnNfUmVxdWlyZV9wYXNzd29yZF9TdWJHcm91cCAkUmVxdWlyZV9wYXNzd29yZF9TZXR0aW5nR1VJRCAkUmVxdWlyZVBhc3N3b3JkT25XYWtldXBBQ19WCiAgICAgICAgV3JpdGUtT3V0cHV0ICJSZXF1aXJlIGEgcGFzc3dvcmQgb24gd2FrZXVwIHZhbHVlIHNldCB0byAnJFJlcXVpcmVQYXNzd29yZE9uV2FrZXVwQUNfTicgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiUmVxdWlyZSBhIHBhc3N3b3JkIG9uIHdha2V1cCB2YWx1ZSBzZXQgdG8gJyRSZXF1aXJlUGFzc3dvcmRPbldha2V1cEFDX04nIGZhaWxlZCB3aGVuIHBsdWdnZWQgaW4iCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0KICAgIAogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJEFsbG93SHlicmlkU2xlZXBBQ19OID0gRnJuZF9DYWxjNyAkQWxsb3dIeWJyaWRTbGVlcEFDCiAgICAgICAgJEFsbG93SHlicmlkU2xlZXBBQ19WID0gRnJuZF9DYWxjICRBbGxvd0h5YnJpZFNsZWVwQUNfTgogICAgICAgICMgQWxsb3cgaHlicmlkIHNsZWVwIHdoZW4gcGx1Z2dlZCBpbgogICAgICAgIHBvd2VyY2ZnIC9TRVRBQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRBZGRpdGlvbmFsX09wdGlvbnNfU3ViZ3JvdXAgJEFsbG93X2h5YnJpZF9zbGVlcF9TZXR0aW5nR1VJRCAkQWxsb3dIeWJyaWRTbGVlcEFDX1YKICAgICAgICBXcml0ZS1PdXRwdXQgIkFsbG93IGh5YnJpZCBzbGVlcCB2YWx1ZSBzZXQgdG8gJyRBbGxvd0h5YnJpZFNsZWVwQUNfTicgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiQWxsb3cgaHlicmlkIHNsZWVwIHZhbHVlIHNldCB0byAnJEFsbG93SHlicmlkU2xlZXBBQ19OJyBmYWlsZWQgd2hlbiBwbHVnZ2VkIGluIgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CiAgICAKICAgIHRyeSB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdzdG9wJwogICAgICAgICRBbGxvd1dha2VUaW1lcnNBQ19OID0gRnJuZF9DYWxjNyAkQWxsb3dXYWtlVGltZXJzQUMKICAgICAgICAkQWxsb3dXYWtlVGltZXJzQUNfViA9IEZybmRfQ2FsYyAkQWxsb3dXYWtlVGltZXJzQUNfTgogICAgICAgICNBbGxvdyB3YWtlIHRpbWVycyB3aGVuIHBsdWdnZWQgaW4KICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkQWRkaXRpb25hbF9PcHRpb25zX1N1Ymdyb3VwICRBbGxvd193YWtlX3RpbWVyc19TZXR0aW5nR1VJRCAkQWxsb3dXYWtlVGltZXJzQUNfVgogICAgICAgIFdyaXRlLU91dHB1dCAiQWxsb3cgd2FrZSB0aW1lcnMgdmFsdWUgc2V0IHRvICckQWxsb3dXYWtlVGltZXJzQUNfTicgd2hlbiBwbHVnZ2VkIGluIgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiQWxsb3cgd2FrZSB0aW1lcnMgdmFsdWUgc2V0IHRvICckQWxsb3dXYWtlVGltZXJzQUNfTicgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgCiAgICB0cnkgewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnc3RvcCcKICAgICAgICAkVVNCU2VsZWN0aXZlU3VzcGVuZFNldHRpbmdBQ19OID0gRnJuZF9DYWxjNyAkVVNCU2VsZWN0aXZlU3VzcGVuZFNldHRpbmdBQwogICAgICAgICRVU0JTZWxlY3RpdmVTdXNwZW5kU2V0dGluZ0FDX1YgPSBGcm5kX0NhbGMgJFVTQlNlbGVjdGl2ZVN1c3BlbmRTZXR0aW5nQUNfTgogICAgICAgICNVU0Igc2VsZWN0aXZlIHN1c3BlbmQgc2V0dGluZyB3aGVuIHBsdWdnZWQgaW4KICAgICAgICBwb3dlcmNmZyAvU0VUQUNWQUxVRUlOREVYICRjcmVhdGVfbW9kaWZ5X3NjaGVtZSAkVVNCX1N1Ymdyb3VwR1VJRCAkVVNCX3NlbGVjdGl2ZV9TZXR0aW5nR1VJRCAkVVNCU2VsZWN0aXZlU3VzcGVuZFNldHRpbmdBQ19WCiAgICAgICAgV3JpdGUtT3V0cHV0ICJVU0Igc2VsZWN0aXZlIHN1c3BlbmQgc2V0dGluZyB2YWx1ZSBzZXQgdG8gJyRVU0JTZWxlY3RpdmVTdXNwZW5kU2V0dGluZ0FDX04nIHdoZW4gcGx1Z2dlZCBpbiIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIlVTQiBzZWxlY3RpdmUgc3VzcGVuZCBzZXR0aW5nIHZhbHVlIHNldCB0byAnJFVTQlNlbGVjdGl2ZVN1c3BlbmRTZXR0aW5nQUNfTicgZmFpbGVkIHdoZW4gcGx1Z2dlZCBpbiIKICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgfQogICAgCiAgICAjIHdoZW4gb24gYmF0dGVyeQogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJFJlcXVpcmVQYXNzd29yZE9uV2FrZXVwRENfTiA9IEZybmRfQ2FsYzcgJFJlcXVpcmVQYXNzd29yZE9uV2FrZXVwREMKICAgICAgICAkUmVxdWlyZVBhc3N3b3JkT25XYWtldXBEQ19WID0gRnJuZF9DYWxjICRSZXF1aXJlUGFzc3dvcmRPbldha2V1cERDX04KICAgICAgICAjIFJlcXVpcmUgYSBwYXNzd29yZCBvbiB3YWtldXAgd2hlbiBvbiBiYXR0ZXJ5CiAgICAgICAgcG93ZXJjZmcgL1NFVERDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJEFkZGl0aW9uYWxfT3B0aW9uc19SZXF1aXJlX3Bhc3N3b3JkX1N1Ykdyb3VwICRSZXF1aXJlX3Bhc3N3b3JkX1NldHRpbmdHVUlEICRSZXF1aXJlUGFzc3dvcmRPbldha2V1cERDX1YKICAgICAgICBXcml0ZS1PdXRwdXQgImBuUmVxdWlyZSBhIHBhc3N3b3JkIG9uIHdha2V1cCB2YWx1ZSBzZXQgdG8gJyRSZXF1aXJlUGFzc3dvcmRPbldha2V1cERDX04nIHdoZW4gb24gYmF0dGVyeSIKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ2NvbnRpbnVlJyAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgIlJlcXVpcmUgYSBwYXNzd29yZCBvbiB3YWtldXAgdmFsdWUgc2V0IHRvICckUmVxdWlyZVBhc3N3b3JkT25XYWtldXBEQ19OJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJEFsbG93SHlicmlkU2xlZXBEQ19OID0gRnJuZF9DYWxjNyAkQWxsb3dIeWJyaWRTbGVlcERDCiAgICAgICAgJEFsbG93SHlicmlkU2xlZXBEQ19WID0gRnJuZF9DYWxjICRBbGxvd0h5YnJpZFNsZWVwRENfTgogICAgICAgICMgQWxsb3cgaHlicmlkIHNsZWVwIHdoZW4gb24gYmF0dGVyeQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRBZGRpdGlvbmFsX09wdGlvbnNfU3ViZ3JvdXAgJEFsbG93X2h5YnJpZF9zbGVlcF9TZXR0aW5nR1VJRCAkQWxsb3dIeWJyaWRTbGVlcERDX1YKICAgICAgICBXcml0ZS1PdXRwdXQgIkFsbG93IGh5YnJpZCBzbGVlcCB2YWx1ZSBzZXQgdG8gJyRBbGxvd0h5YnJpZFNsZWVwRENfTicgd2hlbiBvbiBiYXR0ZXJ5IgogICAgfQogICAgY2F0Y2ggewogICAgICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnY29udGludWUnICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAiQWxsb3cgaHlicmlkIHNsZWVwIHZhbHVlIHNldCB0byAnJEFsbG93SHlicmlkU2xlZXBEQ19OJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJEFsbG93V2FrZVRpbWVyc0RDX04gPSBGcm5kX0NhbGM3ICRBbGxvd1dha2VUaW1lcnNEQwogICAgICAgICRBbGxvd1dha2VUaW1lcnNEQ19WID0gRnJuZF9DYWxjICRBbGxvd1dha2VUaW1lcnNEQ19OCiAgICAgICAgI0FsbG93IHdha2UgdGltZXJzIHdoZW4gb24gYmF0dGVyeQogICAgICAgIHBvd2VyY2ZnIC9TRVREQ1ZBTFVFSU5ERVggJGNyZWF0ZV9tb2RpZnlfc2NoZW1lICRBZGRpdGlvbmFsX09wdGlvbnNfU3ViZ3JvdXAgJEFsbG93X3dha2VfdGltZXJzX1NldHRpbmdHVUlEICRBbGxvd1dha2VUaW1lcnNEQ19WCiAgICAgICAgV3JpdGUtT3V0cHV0ICJBbGxvdyB3YWtlIHRpbWVycyB2YWx1ZSBzZXQgdG8gJyRBbGxvd1dha2VUaW1lcnNEQ19OJyB3aGVuIG9uIGJhdHRlcnkiCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJBbGxvdyB3YWtlIHRpbWVycyB2YWx1ZSBzZXQgdG8gJyRBbGxvd1dha2VUaW1lcnNEQ19OJyBmYWlsZWQgd2hlbiBvbiBiYXR0ZXJ5IgogICAgICAgIFdyaXRlLUVycm9yICRfLmV4Y2VwdGlvbi5tZXNzYWdlCiAgICB9CgogICAgdHJ5IHsKICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgJFVTQlNlbGVjdGl2ZVN1c3BlbmRTZXR0aW5nRENfTiA9IEZybmRfQ2FsYzcgJFVTQlNlbGVjdGl2ZVN1c3BlbmRTZXR0aW5nREMKICAgICAgICAkVVNCU2VsZWN0aXZlU3VzcGVuZFNldHRpbmdEQ19WID0gRnJuZF9DYWxjICRVU0JTZWxlY3RpdmVTdXNwZW5kU2V0dGluZ0RDX04KICAgICAgICAjVVNCIHNlbGVjdGl2ZSBzdXNwZW5kIHNldHRpbmcgd2hlbiBvbiBiYXR0ZXJ5CiAgICAgICAgcG93ZXJjZmcgL1NFVERDVkFMVUVJTkRFWCAkY3JlYXRlX21vZGlmeV9zY2hlbWUgJFVTQl9TdWJncm91cEdVSUQgJFVTQl9zZWxlY3RpdmVfU2V0dGluZ0dVSUQgJFVTQlNlbGVjdGl2ZVN1c3BlbmRTZXR0aW5nRENfVgogICAgICAgIFdyaXRlLU91dHB1dCAiVVNCIHNlbGVjdGl2ZSBzdXNwZW5kIHNldHRpbmcgdmFsdWUgc2V0IHRvICckVVNCU2VsZWN0aXZlU3VzcGVuZFNldHRpbmdEQ19OJyB3aGVuIG9uIGJhdHRlcnkiCiAgICB9CiAgICBjYXRjaCB7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICJVU0Igc2VsZWN0aXZlIHN1c3BlbmQgc2V0dGluZyB2YWx1ZSBzZXQgdG8gJyRVU0JTZWxlY3RpdmVTdXNwZW5kU2V0dGluZ0RDX04nIGZhaWxlZCB3aGVuIG9uIGJhdHRlcnkiCiAgICAgICAgV3JpdGUtRXJyb3IgJF8uZXhjZXB0aW9uLm1lc3NhZ2UKICAgIH0gIAoKICAgICNTZXQgYWN0aXZlIHBvd2VyIHNjaGVtZQogICAgaWYgKCRNYWtlU2NoZW1lQWN0aXZlIC1lcSAkdHJ1ZSkgewogICAgICAgIGlmICghW3N0cmluZ106OklzTnVsbE9yRW1wdHkoIiRjcmVhdGVfbW9kaWZ5X3NjaGVtZSIpKSB7CiAgICAgICAgCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJ3N0b3AnCiAgICAgICAgICAgICAgICBwb3dlcmNmZyAtU0VUQUNUSVZFICIkY3JlYXRlX21vZGlmeV9zY2hlbWUiCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgImBuU2NoZW1lICckU2NoZW1lTmFtZScgaXMgbm93IGFjdGl2ZSBwb3dlciBzY2hlbWUiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2F0Y2ggewogICAgICAgICAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICdjb250aW51ZScgICAgCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgImBuRmFpbGVkIHRvIHNldCBhY3RpdmUgJyRTY2hlbWVOYW1lJyBwb3dlciBzY2hlbWUiCiAgICAgICAgICAgICAgICBXcml0ZS1FcnJvciAkXy5leGNlcHRpb24ubWVzc2FnZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgICNFbmFibGUgSGliZXJuYXRlIFN1cHBvcnQKICAgIGlmICgkRW5hYmxlSGliZXJuYXRlIC1lcSAkdHJ1ZSkgewoKICAgICAgICAkUHJvY2Vzc0luZm8gPSBOZXctT2JqZWN0IFN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzU3RhcnRJbmZvIAogICAgICAgICRQcm9jZXNzSW5mby5GaWxlTmFtZSA9ICJwb3dlcmNmZy5leGUiIAogICAgICAgICRQcm9jZXNzSW5mby5Bcmd1bWVudHMgPSAiL2hpYmVybmF0ZSBvbiAiCiAgICAgICAgJFByb2Nlc3NJbmZvLlJlZGlyZWN0U3RhbmRhcmRFcnJvciA9ICR0cnVlIAogICAgICAgICRQcm9jZXNzSW5mby5SZWRpcmVjdFN0YW5kYXJkT3V0cHV0ID0gJHRydWUgCiAgICAgICAgJFByb2Nlc3NJbmZvLkNyZWF0ZU5vV2luZG93ID0gJHRydWUKICAgICAgICAkUHJvY2Vzc0luZm8uVXNlU2hlbGxFeGVjdXRlID0gJGZhbHNlIAogICAgICAgICRQcm9jZXNzID0gTmV3LU9iamVjdCBTeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcyAKICAgICAgICAkUHJvY2Vzcy5TdGFydEluZm8gPSAkUHJvY2Vzc0luZm8gCiAgICAgICAgJFByb2Nlc3MuU3RhcnQoKSB8IE91dC1OdWxsCiAgICAgICAgJFByb2Nlc3MuV2FpdEZvckV4aXQoKSAKICAgICAgICAkRXJyID0gKCgkUHJvY2Vzcy5TdGFuZGFyZEVycm9yLlJlYWRUb0VuZCgpKS5zcGxpdCgiYG4iKSlbMF0gICAgCiAgICAgICAgaWYgKCRQcm9jZXNzLkV4aXRDb2RlIC1lcSAwKSB7CiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiYG5IaWJlcm5hdGUgRW5hYmxlZCIgCiAgICAgICAgfSAgICAgCiAgICAgICAgZWxzZWlmICgkRXJyIC1saWtlICIqVGhlIHJlcXVlc3QgaXMgbm90IHN1cHBvcnRlZCoiKSB7CiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiYG4kRXJyIgogICAgICAgIH0KICAgICAgICBlbHNlIHsgV3JpdGUtT3V0cHV0ICJgblNvbWV0aGluZyB3ZW50IHdyb25nIHdoaWxlIGVuYWJsaW5nIHRoZSBIaWJlcm5hdGlvbi4gS2luZGx5IGNoZWNrIG1hbnVhbGx5IiB9ICAgICAKICAgIH0KCn0KCg==","jsonSchema":{"definitions":{"active_passive_def":{"default":"1","enum":["1","0"],"enumNames":["Active","Passive"],"type":"string"},"additional_options_def":{"properties":{"AllowHybridSleepAC":{"$ref":"#/definitions/yes_no_def","title":"Allow hybrid sleep (Plugged in)"},"AllowHybridSleepDC":{"$ref":"#/definitions/yes_no_def","title":"Allow hybrid sleep (On battery)"},"AllowWakeTimersAC":{"$ref":"#/definitions/yes_no_def","title":"Allow wake timers (Plugged in)"},"AllowWakeTimersDC":{"$ref":"#/definitions/yes_no_def","title":"Allow wake timers (On battery)"},"RequirePasswordOnWakeupAC":{"$ref":"#/definitions/yes_no_def","title":"Require a password on wakeup (Plugged in)"},"RequirePasswordOnWakeupDC":{"$ref":"#/definitions/yes_no_def","title":"Require a password on wakeup (On battery)"},"USBSelectiveSuspendSettingAC":{"$ref":"#/definitions/yes_no_def","title":"USB selective suspend setting (Plugged in)"},"USBSelectiveSuspendSettingDC":{"$ref":"#/definitions/yes_no_def","title":"USB selective suspend setting (On battery)"}},"type":"object"},"battery_def":{"properties":{"BatteryLevelReachesCriticalAC":{"$ref":"#/definitions/sleep_actions_def","title":"If the battery level reaches critical (Plugged in)"},"BatteryLevelReachesCriticalDC":{"$ref":"#/definitions/sleep_actions_def","title":"If the battery level reaches critical (On battery)"},"BatteryLevelReachesLowAC":{"$ref":"#/definitions/sleep_actions_def","title":"If the battery level reaches low (Pluged in)"},"BatteryLevelReachesLowDC":{"$ref":"#/definitions/sleep_actions_def","title":"If the battery level reaches low (On battery)"},"CriticalBatteryLevelAC":{"$ref":"#/definitions/percentage_def","title":"Critical battery level (Plugged in)"},"CriticalBatteryLevelDC":{"$ref":"#/definitions/percentage_def","title":"Critical battery level (On battery)"},"LowBatteryLevelAC":{"$ref":"#/definitions/percentage_def","title":"Low battery level (Plugged in)"},"LowBatteryLevelDC":{"$ref":"#/definitions/percentage_def","title":"Low battery level (On battery)"},"LowBatteryNotificationAC":{"$ref":"#/definitions/on_off_def","title":"Low battery notification (Plugged in)"},"LowBatteryNotificationDC":{"$ref":"#/definitions/on_off_def","title":"Low battery notification (On battery)"}},"type":"object"},"enable_hibernate_def":{"title":"Enable Hibernate support","type":"boolean"},"if_scheme_exists_overwrite_def":{"title":"If a scheme with this name already exists overwrite it","type":"boolean"},"if_the_computer_is_idle_def":{"properties":{"HibernateAC":{"$ref":"#/definitions/timer_def","title":"Hibernate (Plugged in)"},"HibernateDC":{"$ref":"#/definitions/timer_def","title":"Hibernate (On battery)"},"StandbyAC":{"$ref":"#/definitions/timer_def","title":"Standby (Plugged in)"},"StandbyDC":{"$ref":"#/definitions/timer_def","title":"Standby (On battery)"},"TurnOffHardDiskAC":{"$ref":"#/definitions/timer_def","title":"Turn Off Hard Disk (Plugged in)"},"TurnOffHardDiskDC":{"$ref":"#/definitions/timer_def","title":"Turn Off Hard Disk (On battery)"},"TurnOffMonitorAC":{"$ref":"#/definitions/timer_def","title":"Turn Off Monitor (Plugged in)"},"TurnOffMonitorDC":{"$ref":"#/definitions/timer_def","title":"Turn Off Monitor (On battery)"}},"type":"object"},"make_scheme_active_def":{"title":"Make this scheme as active power scheme","type":"boolean"},"on_off_def":{"default":"1","enum":["1","0"],"enumNames":["On","Off"],"type":"string"},"pci_express_def":{"properties":{"LinkStatePowerManagementAC":{"$ref":"#/definitions/power_savings_def","title":"Link State Power Management (Plugged in)"},"LinkStatePowerManagementDC":{"$ref":"#/definitions/power_savings_def","title":"Link State Power Management (On battery)"}},"type":"object"},"percentage_def":{"default":0,"maximum":100,"minimum":0,"type":"integer"},"power_btn_and_lid_def":{"properties":{"WhenCloseTheLidAC":{"$ref":"#/definitions/sleep_actions_def","title":"When I close the lid (Plugged in)"},"WhenCloseTheLidDC":{"$ref":"#/definitions/sleep_actions_def","title":"When I close the lid (On battery)"},"WhenPressThePowerButtonAC":{"$ref":"#/definitions/sleep_actions_def","title":"When I press the power button (Plugged in)"},"WhenPressThePowerButtonDC":{"$ref":"#/definitions/sleep_actions_def","title":"When I press the power button (On battery)"},"WhenPressTheSleepButtonAC":{"$ref":"#/definitions/sleep_actions_def","title":"When I press the sleep button (Plugged in)"},"WhenPressTheSleepButtonDC":{"$ref":"#/definitions/sleep_actions_def","title":"When I press the sleep button (On battery)"},"WhenPressTheStartMenuPowerButtonAC":{"$ref":"#/definitions/sleep_actions_def","title":"When I press the Start menu Power button (Plugged in)"},"WhenPressTheStartMenuPowerButtonDC":{"$ref":"#/definitions/sleep_actions_def","title":"When I press the Start menu Power button (On battery)"}},"type":"object"},"power_savings_def":{"default":"0","enum":["0","1","2"],"enumNames":["Off","Moderate power savings","Maximum power savings"],"type":"string"},"processor_power_mgmt_def":{"properties":{"MaximumProcessorStateAC":{"$ref":"#/definitions/percentage_def","title":"Maximum processor state (Plugged in)"},"MaximumProcessorStateDC":{"$ref":"#/definitions/percentage_def","title":"Maximum processor state (On battery)"},"MinimumProcessorStateAC":{"$ref":"#/definitions/percentage_def","title":"Minimum processor state (Plugged in)"},"MinimumProcessorStateDC":{"$ref":"#/definitions/percentage_def","title":"Minimum processor state (On battery)"},"SystemCoolingPolicyAC":{"$ref":"#/definitions/active_passive_def","title":"System cooling policy (Plugged in)"},"SystemCoolingPolicyDC":{"$ref":"#/definitions/active_passive_def","title":"System cooling policy (On battery)"}},"type":"object"},"scheme_based_on_def":{"default":"1","enum":["1","2","3"],"enumNames":["Balanced","High Performance","Power Saver"],"title":"Scheme Based on","type":"string"},"scheme_description_def":{"title":"Scheme Description","type":"string"},"scheme_name_def":{"title":"Scheme Name","type":"string"},"sleep_actions_def":{"default":"1","enum":["1","4","5","6"],"enumNames":["Do Nothing","Sleep","Hibernate","Shut down"],"type":"string"},"timer_def":{"default":"60","enum":["60","120","180","300","600","900","1200","1500","1800","2700","3600","7200","10800","14400","18000","0"],"enumNames":["After 1 min","After 2 mins","After 3 mins","After 5 mins","After 10 mins","After 15 mins","After 20 mins","After 25 mins","After 30 mins","After 45 mins","After 1 hour","After 2 hours","After 3 hours","After 4 hours","After 5 hours","Never"],"type":"string"},"wireless_adapter_setting_def":{"properties":{"WirelessAdapterPowerSavingModeAC":{"$ref":"#/definitions/wireless_power_savings_def","title":"Wireless Adapter Power Saving Mode (Plugged in)"},"WirelessAdapterPowerSavingModeDC":{"$ref":"#/definitions/wireless_power_savings_def","title":"Wireless Adapter Power Saving Mode (On battery)"}},"type":"object"},"wireless_power_savings_def":{"default":"1","enum":["1","2","3","4"],"enumNames":["Maximum Performance","Low Power Saving","Medium Power Saving","Maximum Power Saving"],"type":"string"},"yes_no_def":{"default":"1","enum":["1","0"],"enumNames":["Yes","No"],"type":"string"}},"dependencies":{"Action":{"oneOf":[{"properties":{"Action":{"enum":["Create Scheme"]},"EnableHibernate":{"$ref":"#/definitions/enable_hibernate_def"},"GrpAdditionalOptions":{"$ref":"#/definitions/additional_options_def","title":"Additional Options"},"GrpBattery":{"$ref":"#/definitions/battery_def","title":"Battery"},"GrpIfComputerIsIdle":{"$ref":"#/definitions/if_the_computer_is_idle_def","title":"If the computer is idle"},"GrpPCIExpress":{"$ref":"#/definitions/pci_express_def","title":"PCI Express"},"GrpPowerButtonAndLid":{"$ref":"#/definitions/power_btn_and_lid_def","title":"Power Button and lid"},"GrpProcessorPowerManagement":{"$ref":"#/definitions/processor_power_mgmt_def","title":"Processor Power Management"},"GrpWirelessAdapterSetting":{"$ref":"#/definitions/wireless_adapter_setting_def","title":"Wireless Adapter Setting"},"IfSchemeExistsOverwrite":{"$ref":"#/definitions/if_scheme_exists_overwrite_def"},"MakeSchemeActive":{"$ref":"#/definitions/make_scheme_active_def"},"SchemeBasedOn":{"$ref":"#/definitions/scheme_based_on_def"},"SchemeDescription":{"title":"Scheme Description","type":"string"},"SchemeName":{"$ref":"#/definitions/scheme_name_def"}},"required":["SchemeName"]},{"dependencies":{"ModifyScheme":{"oneOf":[{"properties":{"IfSchemeExistsOverwrite":{"$ref":"#/definitions/if_scheme_exists_overwrite_def"},"ModifyScheme":{"enum":["User defined Scheme"]},"SchemeDescription":{"$ref":"#/definitions/scheme_description_def"},"SchemeName":{"$ref":"#/definitions/scheme_name_def"}},"required":["SchemeName"]},{"properties":{"ModifyScheme":{"enum":["Default Scheme"]},"SchemeBasedOn":{"$ref":"#/definitions/scheme_based_on_def","title":"Scheme Name"}}}]}},"properties":{"Action":{"enum":["Modify Scheme"]},"EnableHibernate":{"$ref":"#/definitions/enable_hibernate_def"},"GrpAdditionalOptions":{"$ref":"#/definitions/additional_options_def","title":"Additional Options"},"GrpBattery":{"$ref":"#/definitions/battery_def","title":"Battery"},"GrpIfComputerIsIdle":{"$ref":"#/definitions/if_the_computer_is_idle_def","title":"If the computer is idle"},"GrpPCIExpress":{"$ref":"#/definitions/pci_express_def","title":"PCI Express"},"GrpPowerButtonAndLid":{"$ref":"#/definitions/power_btn_and_lid_def","title":"Power Button and lid"},"GrpProcessorPowerManagement":{"$ref":"#/definitions/processor_power_mgmt_def","title":"Processor Power Management"},"GrpWirelessAdapterSetting":{"$ref":"#/definitions/wireless_adapter_setting_def","title":"Wireless Adapter Setting"},"MakeSchemeActive":{"$ref":"#/definitions/make_scheme_active_def"},"ModifyScheme":{"default":"User defined Scheme","enum":["User defined Scheme","Default Scheme"],"type":"string"}}},{"properties":{"Action":{"enum":["Delete Scheme"]},"SchemeName":{"$ref":"#/definitions/scheme_name_def"}},"required":["SchemeName"]}]}},"properties":{"Action":{"default":"Create Scheme","enum":["Create Scheme","Modify Scheme","Delete Scheme"],"title":"Action","type":"string"}},"required":["Action"],"type":"object"},"uiSchema":{"Action":{"classNames":"col-sm-6","ui:autofocus":true},"EnableHibernate":{"classNames":"col-sm-12"},"GrpAdditionalOptions":{"AllowHybridSleepAC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"AllowHybridSleepDC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"AllowWakeTimersAC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"AllowWakeTimersDC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"RequirePasswordOnWakeupAC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"RequirePasswordOnWakeupDC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"USBSelectiveSuspendSettingAC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"USBSelectiveSuspendSettingDC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"classNames":"col-sm-12"},"GrpBattery":{"BatteryLevelReachesCriticalAC":{"classNames":"col-sm-3"},"BatteryLevelReachesCriticalDC":{"classNames":"col-sm-3"},"BatteryLevelReachesLowAC":{"classNames":"col-sm-3"},"BatteryLevelReachesLowDC":{"classNames":"col-sm-3"},"CriticalBatteryLevelAC":{"classNames":"col-sm-3","ui:description":"% Capacity"},"CriticalBatteryLevelDC":{"classNames":"col-sm-3","ui:description":"% Capacity"},"LowBatteryLevelAC":{"classNames":"col-sm-3","ui:description":"% Capacity"},"LowBatteryLevelDC":{"classNames":"col-sm-3","ui:description":"% Capacity"},"LowBatteryNotificationAC":{"classNames":"col-sm-4","ui:options":{"inline":true},"ui:widget":"radio"},"LowBatteryNotificationDC":{"classNames":"col-sm-4","ui:options":{"inline":true},"ui:widget":"radio"},"classNames":"col-sm-12"},"GrpIfComputerIsIdle":{"HibernateAC":{"classNames":"col-sm-6"},"HibernateDC":{"classNames":"col-sm-6"},"StandbyAC":{"classNames":"col-sm-6"},"StandbyDC":{"classNames":"col-sm-6"},"TurnOffHardDiskAC":{"classNames":"col-sm-6"},"TurnOffHardDiskDC":{"classNames":"col-sm-6"},"TurnOffMonitorAC":{"classNames":"col-sm-6"},"TurnOffMonitorDC":{"classNames":"col-sm-6"},"classNames":"col-sm-12"},"GrpPCIExpress":{"LinkStatePowerManagementAC":{"classNames":"col-sm-6","ui:autofocus":true},"LinkStatePowerManagementDC":{"classNames":"col-sm-6","ui:autofocus":true},"classNames":"col-sm-12"},"GrpPowerButtonAndLid":{"WhenCloseTheLidAC":{"classNames":"col-sm-6"},"WhenCloseTheLidDC":{"classNames":"col-sm-6"},"WhenPressThePowerButtonAC":{"classNames":"col-sm-6"},"WhenPressThePowerButtonDC":{"classNames":"col-sm-6"},"WhenPressTheSleepButtonAC":{"classNames":"col-sm-6"},"WhenPressTheSleepButtonDC":{"classNames":"col-sm-6"},"WhenPressTheStartMenuPowerButtonAC":{"classNames":"col-sm-6"},"WhenPressTheStartMenuPowerButtonDC":{"classNames":"col-sm-6"},"classNames":"col-sm-12"},"GrpProcessorPowerManagement":{"MaximumProcessorStateAC":{"classNames":"col-sm-6"},"MaximumProcessorStateDC":{"classNames":"col-sm-6"},"MinimumProcessorStateAC":{"classNames":"col-sm-6"},"MinimumProcessorStateDC":{"classNames":"col-sm-6"},"SystemCoolingPolicyAC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"SystemCoolingPolicyDC":{"classNames":"col-sm-6","ui:options":{"inline":true},"ui:widget":"radio"},"classNames":"col-sm-12"},"GrpWirelessAdapterSetting":{"WirelessAdapterPowerSavingModeAC":{"classNames":"col-sm-6","ui:autofocus":true},"WirelessAdapterPowerSavingModeDC":{"classNames":"col-sm-6","ui:autofocus":true},"classNames":"col-sm-12"},"IfSchemeExistsOverwrite":{"classNames":"col-sm-12"},"MakeSchemeActive":{"classNames":"col-sm-12"},"ModifyScheme":{"classNames":"col-sm-12","ui:options":{"inline":true},"ui:widget":"radio"},"SchemeBasedOn":{"classNames":"col-sm-6"},"SchemeDescription":{"classNames":"col-sm-12","ui:widget":"textarea"},"SchemeName":{"classNames":"col-sm-6","ui:autofocus":true,"ui:placeholder":null},"ui:order":["Action","SchemeName","SchemeBasedOn","ModifyScheme","SchemeDescription","IfSchemeExistsOverwrite","MakeSchemeActive","EnableHibernate","GrpIfComputerIsIdle","GrpBattery","GrpPowerButtonAndLid","GrpProcessorPowerManagement","GrpPCIExpress","GrpWirelessAdapterSetting","GrpAdditionalOptions"]},"isHDScript":false}