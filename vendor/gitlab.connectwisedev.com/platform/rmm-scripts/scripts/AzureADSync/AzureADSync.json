{"id":"8289f67b-789f-11e9-b6e7-00155d130b89","partnerId":"00000000-0000-0000-0000-000000000000","category":["HD Automation"],"description":"Azure AD Sync","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Script executed successfully","internal":false,"name":"AzureADSync","tags":["Windows 7","Windows 10"],"sequence":true,"content":"IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tLUF6dXJlQUQgU3luYyAtLS0tLS0tLS0tLS0tLS0tLS0tLSMjIyMjIyMjIw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQojLS0tLVN5bmMgVHlwZSBjYW4gYmUgOiBOb25lLCBEZWx0YVN5bmMsIEZ1bGxTeW5jDQoNCjwjDQoNCltzdHJpbmddJHVzZXJuYW1lID0gIkFkbWluaXN0cmF0b3IiDQpbc3RyaW5nXSRQYXNzID0gIkFiY2RAMTIzNCINCltzdHJpbmddJFN5bmNUeXBlID0gIkRlbHRhU3luYyINCg0KIz4NCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMtLS0tLS1WYXJpYWJsZSBEZWNsYXJhdGlvbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCiR0aW1lb3V0U2Vjb25kcyA9IDMwDQoNCiRSZXN1bHRPYmplY3QgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBwc29iamVjdA0KJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdUYXNrIE5hbWUnIC1WYWx1ZSAiQXp1cmVBRCBTeW5jIiANCg0KJFN1Y2Nlc3NPYmplY3QgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBwc29iamVjdA0KDQokQ29tcG55SW5mb3JtYXRpb25PYmplY3QgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBwc29iamVjdA0KDQokZ2xvYmFsOkNvZGUgPSAwDQokZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5PSBAKCkNCiRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheT0gQCgpDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLUNoZWNraW5nIFByZSBDb25kaXRpb24tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gQ2hlY2stUHJlQ29uZGl0aW9uew0KDQogICAgJElzQ29udGludWVkID0gJHRydWUNCg0KICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iDQogICAgV3JpdGUtSG9zdCAiQ2hlY2tpbmcgUHJlY29uZGl0aW9ucyINCiAgICBXcml0ZS1Ib3N0ICIiIA0KICAgDQoNCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQogICAgIyBWZXJpZnkgUG93ZXJTaGVsbCBWZXJzaW9uDQogICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQogICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDEwICJgdCBQb3dlclNoZWxsIFZlcnNpb24gOiAkKCRQU1ZlcnNpb25UYWJsZS5QU1ZlcnNpb24uTWFqb3IpIiANCg0KICAgIGlmKC1OT1QoJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbi5NYWpvciAtZ2UgMikpDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAxDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlBvd2VyU2hlbGwgdmVyc2lvbiBiZWxvdyAyLjAgaXMgbm90IHN1cHBvcnRlZCINCg0KICAgICAgICAkSXNDb250aW51ZWQgPSAkZmFsc2UNCiAgICB9DQoNCiAgICANCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgICAgIA0KICAgICMgVmVyaWZ5IG9wZWFyYXRpbmcgc3lzdGVtIFZlcnNpb24NCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiYHQgT3BlcmF0aW5nIFN5c3RlbSBWZXJzaW9uIDogJChbU3lzdGVtLkVudmlyb25tZW50XTo6T1NWZXJzaW9uLlZlcnNpb24ubWFqb3IpIiANCiAgICBpZigtbm90KFtTeXN0ZW0uRW52aXJvbm1lbnRdOjpPU1ZlcnNpb24uVmVyc2lvbi5tYWpvciAtZ2UgNikpDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAxDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkgKz0gIlBvd2VyU2hlbGwgU2NyaXB0IHN1cHBvcnRzIFdpbmRvdyA3LCBXaW5kb3cgMjAwOFIyIGFuZCBoaWdoZXIgdmVyc2lvbiBvcGVyYXRpbmcgc3lzdGVtIg0KDQogICAgICAgICRJc0NvbnRpbnVlZCA9ICRmYWxzZQ0KICAgIH0NCiAgICANCiAgICANCiAgICBXcml0ZS1Ib3N0ICIiDQogICAgV3JpdGUtSG9zdCAtRm9yZWdyb3VuZENvbG9yIDggImB0IENoZWNraW5nIFByZWNvbmRpdGlvbiBDb21wbGV0ZWQiDQogICAgV3JpdGUtSG9zdCAiIg0KDQogICAgcmV0dXJuICRJc0NvbnRpbnVlZA0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLVZlcmlmeS1OZXdBenVyZS1TZXJ2aWNlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gVmVyaWZ5LUF6dXJlLVNlcnZpY2UNCnsNCiAgICAkSXNDb250aW51ZWQgPSAkZmFsc2UNCg0KICAgIGlmKENoZWNrQW5kU3RhcnRTZXJ2aWNlIC1TZXJ2aWNlTmFtZSAnQURTeW5jJyAtU2VydmljZURpc3BsYXlOYW1lICdNaWNyb3NvZnQgQXp1cmUgQUQgU3luYycpDQogICAgew0KICAgICAgICAkSXNDb250aW51ZWQgPSAkdHJ1ZQ0KICAgIH0NCg0KICAgIHJldHVybiAkSXNDb250aW51ZWQNCn0NCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMtLS0tLS1DaGVjayBhbmQgcnVuIFNlcnZpY2UtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCkZ1bmN0aW9uIENoZWNrQW5kU3RhcnRTZXJ2aWNlKFtTdHJpbmddICRTZXJ2aWNlTmFtZSAsICRTZXJ2aWNlRGlzcGxheU5hbWUpDQp7DQogICAgQ2hlY2tTZXJ2aWNlU3RhdHVzIC1TZXJ2aWNlTmFtZSAkU2VydmljZU5hbWUNCg0KICAgICRJc0NvbnRpbnVlZCA9ICRmYWxzZQ0KDQogICAgV3JpdGUtSG9zdCAiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSINCiAgICBXcml0ZS1Ib3N0ICJDaGVja2luZyAkU2VydmljZURpc3BsYXlOYW1lIFNlcnZpY2UiDQogICAgV3JpdGUtSG9zdCAiICAgICIgDQoNCiAgICB0cnkNCiAgICB7DQogICAgICAgIGlmKEdldC1TZXJ2aWNlICRTZXJ2aWNlTmFtZSAtRXJyb3JBY3Rpb24gU3RvcCkNCiAgICAgICAgew0KICAgICAgICAgICAgaWYoIC1ub3QoKEdldC1TZXJ2aWNlIHwgV2hlcmUgeyRfLm5hbWUgLWVxICRTZXJ2aWNlTmFtZX0pLlN0YXR1cyAtZXEgIlJ1bm5pbmciKSkNCiAgICAgICAgICAgIHsgDQogICAgICAgICAgICAgICAgdHJ5DQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBHZXQtU2VydmljZSAkU2VydmljZU5hbWUgLUVycm9yQWN0aW9uIFN0b3B8IFdoZXJlIHskXy5TdGF0dXMgLWVxICdTdG9wcGVkJ30gfCBTdGFydC1TZXJ2aWNlIC1FcnJvckFjdGlvbiBTdG9wIA0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgU3RhcnQtU2xlZXAgLXMgNw0KDQogICAgICAgICAgICAgICAgICAgIGlmKChHZXQtU2VydmljZSAtRXJyb3JBY3Rpb24gU3RvcHwgV2hlcmUgeyRfLm5hbWUgLWVxICRTZXJ2aWNlTmFtZX0pLlN0YXR1cyAtZXEgIlJ1bm5pbmciKQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1Ib3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHQgJFNlcnZpY2VEaXNwbGF5TmFtZSBTZXJ2aWNlIHN0YXJ0ZWQiDQogICAgICAgICAgICAgICAgICAgICAgICAkSXNDb250aW51ZWQgPSAkdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpDb2RlID0gMQ0KICAgICAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSs9ICIkKCRTZXJ2aWNlRGlzcGxheU5hbWUpIFNlcnZpY2UgY291bGQgbm90IGJlIHN0YXJ0ZWQiDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgY2F0Y2gNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6Q29kZSA9IDINCiAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSs9ICJFcnJvciB3aGlsZSBTdGFydGluZyAkKCRTZXJ2aWNlRGlzcGxheU5hbWUpIFNlcnZpYzogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIFdyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCAkU2VydmljZURpc3BsYXlOYW1lIFNlcnZpY2UgaXMgcnVubmluZyINCiAgICAgICAgICAgICAgICAkSXNDb250aW51ZWQgPSAkdHJ1ZQ0KICAgICAgICAgICAgfSANCiAgICAgICAgfQ0KICAgICAgICBlbHNlDQogICAgICAgIHsNCiAgICAgICAgICAgICRnbG9iYWw6Q29kZSA9IDENCiAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkrPSAiJCgkU2VydmljZURpc3BsYXlOYW1lKSBTZXJ2aWNlIE5vdCBGb3VuZCINCiAgICAgICAgfQ0KICAgIH0NCiAgICBjYXRjaA0KICAgIHsNCiAgICAgICAgJGdsb2JhbDpDb2RlID0gMg0KICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5Kz0gIkVycm9yIHdoaWxlIFN0YXJ0aW5nICQoJFNlcnZpY2VEaXNwbGF5TmFtZSkgU2VydmljZTogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiDQogICAgfQ0KDQogICAgcmV0dXJuICRJc0NvbnRpbnVlZA0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLVZlcmlmeSBBenVyZSBNb2R1bGUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpGdW5jdGlvbiBWZXJpZnlNb2R1bGUoW1N0cmluZ10gJE1vZHVsZU5hbWUpDQp7DQogICAgJElzQ29udGludWVkID0gJGZhbHNlDQoNCiAgICBXcml0ZS1Ib3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIg0KICAgIFdyaXRlLUhvc3QgIlZlcmlmeWluZyBNb2R1bGUgOiAkTW9kdWxlTmFtZSINCiAgICBXcml0ZS1Ib3N0ICIgICAgIiANCg0KICAgIGlmIChHZXQtTW9kdWxlIC1FcnJvckFjdGlvbsKgU3RvcCB8IFdoZXJlLU9iamVjdCB7JF8uTmFtZSAtZXEgJE1vZHVsZU5hbWV9KSANCiAgICB7DQogICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCAkTW9kdWxlTmFtZSBleGlzdCIgDQogICAgICAgICRJc0NvbnRpbnVlZCA9ICR0cnVlDQogICAgfSANCiAgICBlbHNlIA0KICAgIHsNCiAgICAgICAgIyBJZiBtb2R1bGUgaXMgbm90IGltcG9ydGVkLCBidXQgYXZhaWxhYmxlIG9uIGRpc2sgdGhlbiBpbXBvcnQNCiAgICAgICAgaWYgKEdldC1Nb2R1bGUgLUxpc3RBdmFpbGFibGUgLUVycm9yQWN0aW9uIFN0b3B8IFdoZXJlLU9iamVjdCB7JF8uTmFtZSAtZXEgJE1vZHVsZU5hbWV9KSANCiAgICAgICAgew0KCQkJdHJ5DQogICAgICAgICAgICB7DQoJCQkJSW1wb3J0LU1vZHVsZSAkTW9kdWxlTmFtZSAtRXJyb3JBY3Rpb27CoFN0b3AgIy1WZXJib3NlDQoNCgkJCQl3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHQgJE1vZHVsZU5hbWUgZXhpc3QiIA0KCQkJCSRJc0NvbnRpbnVlZCA9ICR0cnVlDQoJCQl9DQoJCQljYXRjaA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRnbG9iYWw6Q29kZSA9IDINCiAgICAgICAgICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5Kz0gIkVycm9yIHdoaWxlIGltcG9ydGluZyBNb2R1bGUgJCgkTW9kdWxlTmFtZSk6ICRfLmV4Y2VwdGlvbi5tZXNzYWdlIg0KCQkJfQ0KICAgICAgICB9IA0KICAgIH0NCg0KICAgIHJldHVybiAkSXNDb250aW51ZWQNCn0NCg0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLUNoZWNrIElmIGFueSBTeW5jIGlzIHJ1bm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gY2hlY2stQURTeW5jQ29ubmVjdG9yUnVuU3RhdHVzDQp7DQogICAgJElzQ29udGludWVkID0gJGZhbHNlDQoNCiAgICBXcml0ZS1Ib3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIg0KICAgIFdyaXRlLUhvc3QgIkNoZWNraW5nIGZvciBBY3RpdmUgU2Vzc2lvbiINCiAgICBXcml0ZS1Ib3N0ICIgICAgIiANCg0KICAgIGlmKEdldC1BRFN5bmNDb25uZWN0b3JSdW5TdGF0dXMpDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAxDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkrPSAiU3luYyBlbmdpbmUgaXMgQnVzeSINCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAgd3JpdGUtaG9zdCAtRm9yZWdyb3VuZENvbG9yIDggImB0IFN5bmMgZW5naW5lIGlzIGZyZWUiDQogICAgICAgICRJc0NvbnRpbnVlZD0gJHRydWUNCiAgICB9DQoNCiAgICByZXR1cm4gJElzQ29udGludWVkDQp9DQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tTG9naW4gdG8gQXp1cmUgQWNjb3VudCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpGdW5jdGlvbiBMb2dpbi1BenVyZUFjY291bnQgDQp7DQogICAgJElzQ29udGludWVkID0gJGZhbHNlDQoNCiAgICBXcml0ZS1Ib3N0ICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIg0KICAgIFdyaXRlLUhvc3QgIkNoZWNraW5nIEF6dXJlIEFjY291bnQiDQogICAgV3JpdGUtSG9zdCAiICAgICIgDQoNCiAgICAkcGFzc3dvcmQgPSAkUGFzcyB8IENvbnZlcnRUby1TZWN1cmVTdHJpbmcgLWFzUGxhaW5UZXh0IC1Gb3JjZQ0KICAgICRVc2VyQ3JlZGVudGlhbCA9IE5ldy1PYmplY3QgU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbi5QU0NyZWRlbnRpYWwoJHVzZXJuYW1lLCRwYXNzd29yZCkNCg0KICAgIHRyeQ0KICAgIHsNCiAgICAgICAgaWYoQ29ubmVjdC1BenVyZUFEIC1DcmVkZW50aWFsICRVc2VyQ3JlZGVudGlhbCAtRXJyb3JBY3Rpb24gU3RvcCkNCiAgICAgICAgew0KICAgICAgICAgICAgIHdyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJBenVyZSBMb2dpbiBTdWNlc3NmdWxsIg0KICAgICAgICAgICAgICRJc0NvbnRpbnVlZD0gJHRydWUNCiAgICAgICAgfQ0KICAgIH0NCiAgICBjYXRjaA0KICAgIHsNCiAgICAgICAgJGdsb2JhbDpDb2RlID0gMg0KICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5Kz0gIkVycm9yIHdoaWxlIEF6dXJlIExvZ2luOiAkXy5leGNlcHRpb24ubWVzc2FnZSINCiAgICB9DQoNCiAgICByZXR1cm4gJElzQ29udGludWVkDQp9DQoNCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMtLS0tLS1HZXQgQ29tcGFueSBJbmZvcm1hdGlvbiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpGdW5jdGlvbiBHZXQtQ29tcGFueUluZm9ybWF0aW9uDQp7DQogICAgV3JpdGUtSG9zdCAiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSINCiAgICBXcml0ZS1Ib3N0ICJDaGVja2luZyBDb21wYW55IEluZm9ybWF0aW9uIg0KICAgIFdyaXRlLUhvc3QgIiAgICAiIA0KDQogICAgJHBhc3N3b3JkID0gJFBhc3MgfCBDb252ZXJ0VG8tU2VjdXJlU3RyaW5nIC1hc1BsYWluVGV4dCAtRm9yY2UNCiAgICAkVXNlckNyZWRlbnRpYWwgPSBOZXctT2JqZWN0IFN5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDcmVkZW50aWFsKCR1c2VybmFtZSwkcGFzc3dvcmQpDQoNCiAgICB0cnkNCiAgICB7DQogICAgICAgIENvbm5lY3QtTXNvbFNlcnZpY2UgLUNyZWRlbnRpYWwgJFVzZXJDcmVkZW50aWFsDQoNCiAgICAgICAgR2V0LU1zb2xDb21wYW55SW5mb3JtYXRpb24gfCBTZWxlY3QtT2JqZWN0IERpc3BsYXlOYW1lLCBEaXJTeW5jU2VydmljZUFjY291bnQsIExhc3RQYXNzd29yZFN5bmNUaW1lLCBMYXN0RGlyU3luY1RpbWUgfEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJOYW1lIDogJCgkXy5EaXNwbGF5TmFtZSkiIA0KICAgICAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJEaXIgU3luY1NlcnZpY2UgQWNjb3VudCA6ICQoJF8uRGlyU3luY1NlcnZpY2VBY2NvdW50KSINCiAgICAgICAgICAgICN3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiTGFzdCBQYXNzd29yZCBzeW5jIDogJCgkXy5MYXN0UGFzc3dvcmRTeW5jVGltZSkiIA0KICAgICAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJMYXN0IGRpciBzeW5jIDogJCgkXy5MYXN0RGlyU3luY1RpbWUpIg0KICAgICAgICAgICAgDQogICAgICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTmFtZScgLVZhbHVlICQoJF8uRGlzcGxheU5hbWUpDQogICAgICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnRGlyIFN5bmNTZXJ2aWNlIEFjY291bnQnIC1WYWx1ZSAkKCRfLkRpclN5bmNTZXJ2aWNlQWNjb3VudCkgDQogICAgICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTGFzdCBQYXNzd29yZCBzeW5jJyAtVmFsdWUgJCgkXy5MYXN0UGFzc3dvcmRTeW5jVGltZSkgDQogICAgICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTGFzdCBkaXIgc3luYycgLVZhbHVlICQoJF8uTGFzdERpclN5bmNUaW1lKSANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJOYW1lOiAkKCRfLkRpc3BsYXlOYW1lKSINCiAgICAgICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiRGlyIFN5bmNTZXJ2aWNlIEFjY291bnQ6ICQoJF8uRGlyU3luY1NlcnZpY2VBY2NvdW50KSIgDQogICAgICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gIkxhc3QgUGFzc3dvcmQgc3luYzogJCgkXy5MYXN0UGFzc3dvcmRTeW5jVGltZSkiIA0KICAgICAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJMYXN0IGRpciBzeW5jOiAkKCRfLkxhc3REaXJTeW5jVGltZSkiIA0KICAgICAgICB9DQoNCiAgICAgICAgI3dyaXRlLWhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiTmV4dCBzeW5jIg0KDQogICAgICAgICRzY2hkbCA9IEdldC1BRFN5bmNTY2hlZHVsZXINCiAgICAgICAgJENvbXBueUluZm9ybWF0aW9uT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ0FsbG93ZWRTeW5jQ3ljbGVJbnRlcnZhbCcgLVZhbHVlICQoJHNjaGRsLkFsbG93ZWRTeW5jQ3ljbGVJbnRlcnZhbCkNCiAgICAgICAgJENvbXBueUluZm9ybWF0aW9uT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ0N1cnJlbnRseUVmZmVjdGl2ZVN5bmNDeWNsZUludGVydmFsJyAtVmFsdWUgJCgkc2NoZGwuQ3VycmVudGx5RWZmZWN0aXZlU3luY0N5Y2xlSW50ZXJ2YWwpDQogICAgICAgICRDb21wbnlJbmZvcm1hdGlvbk9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdDdXN0b21pemVkU3luY0N5Y2xlSW50ZXJ2YWwnIC1WYWx1ZSAkKCRzY2hkbC5DdXN0b21pemVkU3luY0N5Y2xlSW50ZXJ2YWwpDQogICAgICAgICRDb21wbnlJbmZvcm1hdGlvbk9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdOZXh0U3luY0N5Y2xlUG9saWN5VHlwZScgLVZhbHVlICQoJHNjaGRsLk5leHRTeW5jQ3ljbGVQb2xpY3lUeXBlKQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTmV4dFN5bmNDeWNsZVN0YXJ0VGltZUluVVRDJyAtVmFsdWUgJCgkc2NoZGwuTmV4dFN5bmNDeWNsZVN0YXJ0VGltZUluVVRDKQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnUHVyZ2VSdW5IaXN0b3J5SW50ZXJ2YWwnIC1WYWx1ZSAkKCRzY2hkbC5QdXJnZVJ1bkhpc3RvcnlJbnRlcnZhbCkNCiAgICAgICAgJENvbXBueUluZm9ybWF0aW9uT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1N5bmNDeWNsZUVuYWJsZWQnIC1WYWx1ZSAkKCRzY2hkbC5TeW5jQ3ljbGVFbmFibGVkKQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnTWFpbnRlbmFuY2VFbmFibGVkJyAtVmFsdWUgJCgkc2NoZGwuTWFpbnRlbmFuY2VFbmFibGVkKQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnU3RhZ2luZ01vZGVFbmFibGVkJyAtVmFsdWUgJCgkc2NoZGwuU3RhZ2luZ01vZGVFbmFibGVkKQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnU2NoZWR1bGVyU3VzcGVuZGVkJyAtVmFsdWUgJCgkc2NoZGwuU2NoZWR1bGVyU3VzcGVuZGVkKQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnU3luY0N5Y2xlSW5Qcm9ncmVzcycgLVZhbHVlICQoJHNjaGRsLlN5bmNDeWNsZUluUHJvZ3Jlc3MpDQoNCiAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJBbGxvd2VkU3luY0N5Y2xlSW50ZXJ2YWw6ICQoJHNjaGRsLkFsbG93ZWRTeW5jQ3ljbGVJbnRlcnZhbCkiDQogICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiQ3VycmVudGx5RWZmZWN0aXZlU3luY0N5Y2xlSW50ZXJ2YWw6ICQoJHNjaGRsLkN1cnJlbnRseUVmZmVjdGl2ZVN5bmNDeWNsZUludGVydmFsKSINCiAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJDdXN0b21pemVkU3luY0N5Y2xlSW50ZXJ2YWw6ICQoJHNjaGRsLkN1c3RvbWl6ZWRTeW5jQ3ljbGVJbnRlcnZhbCkiDQogICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiTmV4dFN5bmNDeWNsZVBvbGljeVR5cGU6ICQoJHNjaGRsLk5leHRTeW5jQ3ljbGVQb2xpY3lUeXBlKSINCiAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJOZXh0U3luY0N5Y2xlU3RhcnRUaW1lSW5VVEM6ICQoJHNjaGRsLk5leHRTeW5jQ3ljbGVTdGFydFRpbWVJblVUQykiDQogICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiUHVyZ2VSdW5IaXN0b3J5SW50ZXJ2YWw6ICQoJHNjaGRsLlB1cmdlUnVuSGlzdG9yeUludGVydmFsKSINCiAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJTeW5jQ3ljbGVFbmFibGVkOiAkKCRzY2hkbC5TeW5jQ3ljbGVFbmFibGVkKSINCiAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJNYWludGVuYW5jZUVuYWJsZWQ6ICQoJHNjaGRsLk1haW50ZW5hbmNlRW5hYmxlZCkiDQogICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiU3RhZ2luZ01vZGVFbmFibGVkOiAkKCRzY2hkbC5TdGFnaW5nTW9kZUVuYWJsZWQpIg0KICAgICAgICAkZ2xvYmFsOlN1Y2Nlc3NNZXNzYWdlQXJyYXkgKz0gIlNjaGVkdWxlclN1c3BlbmRlZDogJCgkc2NoZGwuU2NoZWR1bGVyU3VzcGVuZGVkKSINCiAgICAgICAgJGdsb2JhbDpTdWNjZXNzTWVzc2FnZUFycmF5ICs9ICJTeW5jQ3ljbGVJblByb2dyZXNzOiAkKCRzY2hkbC5TeW5jQ3ljbGVJblByb2dyZXNzKSINCg0KDQogICAgICAgICNTdGFydC1TbGVlcCAtcyAxMA0KDQogICAgICAgICRPdUluZm8gPSBHZXQtTVNPbFVzZXIgLUFMTCB8IFNlbGVjdC1PYmplY3QgVXNlclByaW5jaXBhbE5hbWUsIExhc3REaXJTeW5jVGltZQ0KICAgICAgICAkQ29tcG55SW5mb3JtYXRpb25PYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnVXNlclByaW5jaXBhbE5hbWUnIC1WYWx1ZSAkKCRPdUluZm8uVXNlclByaW5jaXBhbE5hbWUpDQogICAgICAgICRDb21wbnlJbmZvcm1hdGlvbk9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdMYXN0RGlyU3luY1RpbWUnIC1WYWx1ZSAkKCRPdUluZm8uTGFzdERpclN5bmNUaW1lKQ0KDQogICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiVXNlclByaW5jaXBhbE5hbWU6ICQoJE91SW5mby5Vc2VyUHJpbmNpcGFsTmFtZSkiDQogICAgICAgICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheSArPSAiTGFzdERpclN5bmNUaW1lOiAkKCRPdUluZm8uTGFzdERpclN5bmNUaW1lKSINCiAgICB9DQogICAgY2F0Y2gNCiAgICB7DQogICAgICAgICRnbG9iYWw6Q29kZSA9IDINCiAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSs9ICJFcnJvciB3aGlsZSBnZXR0aW5nIENvbXBhbnkgSW5mb3JtYXRpb246ICRfLmV4Y2VwdGlvbi5tZXNzYWdlIg0KICAgIH0NCg0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLVN5bmMgQUQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gU3luYy1BRCANCnsNCiAgICAkSXNDb250aW51ZWQgPSAkZmFsc2UNCg0KICAgIFdyaXRlLUhvc3QgIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iDQogICAgV3JpdGUtSG9zdCAiU3luY2luZyBBY3RpdmUgRGlyZWN0b3J5Li4gKCRTeW5jVHlwZSkiDQogICAgV3JpdGUtSG9zdCAiICAgICIgDQogICAgDQogICAgdHJ5DQogICAgew0KICAgICAgICBpZigkU3luY1R5cGUgLWVxICJEZWx0YVN5bmMiKQ0KICAgICAgICB7DQogICAgICAgICAgICBTdGFydC1BRFN5bmNTeW5jQ3ljbGUgLVBvbGljeVR5cGUgZGVsdGENCiAgICAgICAgICAgIFdyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBTeW5jIHN0cnRlZCBTdWNlc3NmdWxseSINCiAgICAgICAgICAgICRJc0NvbnRpbnVlZCA9ICR0cnVlDQogICAgICAgIH0NCiAgICAgICAgZWxzZWlmKCRTeW5jVHlwZSAtZXEgIkZ1bGxTeW5jIikNCiAgICAgICAgew0KICAgICAgICAgICAgU3RhcnQtQURTeW5jU3luY0N5Y2xlIC1Qb2xpY3lUeXBlIGluaXRpYWwNCiAgICAgICAgICAgIFdyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciA4ICJgdCBTeW5jIHN0cnRlZCBTdWNlc3NmdWxseSINCiAgICAgICAgICAgICRJc0NvbnRpbnVlZCA9ICR0cnVlDQogICAgICAgIH0NCiAgICAgICAgZWxzZQ0KICAgICAgICB7DQogICAgICAgICAgICAkZ2xvYmFsOkNvZGUgPSAxDQogICAgICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5Kz0gIlN5bmMgdHlwZSBOb3QgRm91bmQgaXQgc2hvdWxkIGJlICgnRnVsbFN5bmMnIG9yICdEZWx0YVN5bmMnKSINCg0KICAgICAgICAgICAgI1dyaXRlLUhvc3QgLUZvcmVncm91bmRDb2xvciAxMCAiYHQgU3luYyB0eXBlIE5vdCBGb3VuZCBpdCBzaG91bGQgYmUgKCdGdWxsU3luYycgb3IgJ0RlbHRhU3luYycpIg0KICAgICAgICB9DQogICAgfQ0KICAgIGNhdGNoDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAyDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkrPSAiRXJyb3Igd2hpbGUgU3luY2luZyBBY3RpdmUgRGlyZWN0b3J5OiAkXy5leGNlcHRpb24ubWVzc2FnZSINCg0KICAgICAgICAjV3JpdGUtV2FybmluZyAiRXJyb3Igd2hpbGUgQXp1cmUgTG9naW4iIzogJF8uZXhjZXB0aW9uLm1lc3NhZ2UiDQogICAgfQ0KDQogICAgcmV0dXJuICRJc0NvbnRpbnVlZA0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIy0tLS0tLUNoZWNrIFNlcnZpY2UgU3RhdHVzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KRnVuY3Rpb24gQ2hlY2tTZXJ2aWNlU3RhdHVzKFtTdHJpbmddICRTZXJ2aWNlTmFtZSkNCnsNCiAgICBXcml0ZS1Ib3N0ICIiDQoNCiAgICBpZihHZXQtU2VydmljZSB8IFdoZXJlIHskXy5uYW1lIC1lcSAkU2VydmljZU5hbWV9KQ0KICAgIHsNCiAgICAgICAgIy0tLS0tU3Bvb2xlciBDaGVjay0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQogICAgICAgIEdldC1XbWlPYmplY3QgV2luMzJfU2VydmljZSAtQ29tcHV0ZXJOYW1lIC58IFdoZXJlLU9iamVjdCB7JF8uTmFtZSAtZXEgJFNlcnZpY2VOYW1lICAtYW5kICAkXy5TdGF0ZSAtZXEgJ3J1bm5pbmcnfXxmb3JlYWNoIHsNCiAgICAgICAgICAgICN3cml0ZS1ob3N0ICJTdGF0ZTogIiAkXy5TdGF0ZQ0KICAgICAgICAgICAgI3dyaXRlLWhvc3QgIlN0YXR1czogIiAkXy5TdGF0dXMNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgaWYoJF8uU3RhdGUgLWVxICJSdW5uaW5nIikNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZigkXy5TdGF0dXMgLWVxICJEZWdyYWRlZCIpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAkZ2xvYmFsOkNvZGUgPSAzDQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkrPSAiJCgkU2VydmljZU5hbWUpIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciDQoNCiAgICAgICAgICAgICAgICAgICAgI1dyaXRlLVdhcm5pbmcgIiRTZXJ2aWNlTmFtZSBTZXJ2aWNlIGlzIG5vdCByZXNwb25kaW5nIg0KICAgICAgICAgICAgICAgICAgICBleGl0DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIA0KICAgICAgICAjLS0tLS1SZWdpc3RvcnkgQ2hlY2stLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICAgICAgICBHZXQtU2VydmljZSAtTmFtZSAkU2VydmljZU5hbWUgfCBTZWxlY3QtT2JqZWN0IC1Qcm9wZXJ0eSAqIHxmb3JlYWNoIHsNCiAgICAgICAgICAgICN3cml0ZS1ob3N0ICJTdGF0dXM6ICIgJF8uU3RhdHVzDQogICAgICAgICAgICAjd3JpdGUtaG9zdCAiUmVxdWlyZWRTZXJ2aWNlczogIiAkXy5TZXJ2aWNlc0RlcGVuZGVkT24NCg0KICAgICAgICAgICAgSUYgKFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRfLlNlcnZpY2VzRGVwZW5kZWRPbikpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJGdsb2JhbDpDb2RlID0gMw0KICAgICAgICAgICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkrPSAiJCgkU2VydmljZU5hbWUpIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciDQoNCiAgICAgICAgICAgICAgICAjV3JpdGUtV2FybmluZyAiJFNlcnZpY2VOYW1lIFNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmciDQogICAgICAgICAgICAgICAgZXhpdA0KICAgICAgICAgICAgfSANCiAgICAgICAgfSAgICAgICANCiAgICAgICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAgJGdsb2JhbDpDb2RlID0gMw0KICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5Kz0gIiQoJFNlcnZpY2VOYW1lKSBTZXJ2aWNlIGlzIG5vdCByZXNwb25kaW5nIg0KDQogICAgICAgICNXcml0ZS1XYXJuaW5nICIkU2VydmljZU5hbWUgU2VydmljZSBpcyBub3QgcmVzcG9uZGluZyINCiAgICAgICAgZXhpdA0KICAgIH0NCg0KfQ0KDQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tSlNPTiBmb3IgUFMyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpmdW5jdGlvbiBFc2NhcGUtSlNPTlN0cmluZygkc3RyKQ0Kew0KCWlmICgkc3RyIC1lcSAkbnVsbCkgDQogICAgew0KICAgICAgICByZXR1cm4gIiINCiAgICB9DQoNCgkkc3RyID0gJHN0ci5Ub1N0cmluZygpLlJlcGxhY2UoJyInLCdcIicpLlJlcGxhY2UoJ1wnLCdcXCcpLlJlcGxhY2UoImBuIiwnXG4nKS5SZXBsYWNlKCJgciIsJ1xyJykuUmVwbGFjZSgiYHQiLCdcdCcpDQoNCglyZXR1cm4gJHN0cjsNCn0NCg0KDQpmdW5jdGlvbiBDb252ZXJ0VG8tSlNPTlBTMigkbWF4RGVwdGggPSA0LCRmb3JjZUFycmF5ID0gJGZhbHNlKSANCnsNCgliZWdpbiB7DQoJCSRkYXRhID0gQCgpDQoJfQ0KCXByb2Nlc3N7DQoJCSRkYXRhICs9ICRfDQoJfQ0KCQ0KCWVuZHsNCgkNCgkJaWYgKCRkYXRhLmxlbmd0aCAtZXEgMSAtYW5kICRmb3JjZUFycmF5IC1lcSAkZmFsc2UpIHsNCgkJCSR2YWx1ZSA9ICRkYXRhWzBdDQoJCX0gZWxzZSB7CQ0KCQkJJHZhbHVlID0gJGRhdGENCgkJfQ0KDQoJCWlmICgkdmFsdWUgLWVxICRudWxsKSB7DQoJCQlyZXR1cm4gIm51bGwiDQoJCX0NCg0KCQkNCg0KCQkkZGF0YVR5cGUgPSAkdmFsdWUuR2V0VHlwZSgpLk5hbWUNCgkJDQoJCXN3aXRjaCAtcmVnZXggKCRkYXRhVHlwZSkgew0KCSAgICAgICAgICAgICdTdHJpbmcnICB7DQoJCQkJCXJldHVybiAgImAiezB9YCIiIC1mIChFc2NhcGUtSlNPTlN0cmluZyAkdmFsdWUgKQ0KCQkJCX0NCg0KCSAgICAgICAgICAgICcoU3lzdGVtXC4pP0RhdGVUaW1lJyAge3JldHVybiAgImAiezA6eXl5eS1NTS1kZH1UezA6SEg6bW06c3N9YCIiIC1mICR2YWx1ZX0NCg0KCSAgICAgICAgICAgICdJbnQzMnxEb3VibGUnIHtyZXR1cm4gICIkdmFsdWUifQ0KDQoJCQkJJ0Jvb2xlYW4nIHtyZXR1cm4gICIkdmFsdWUiLlRvTG93ZXIoKX0NCg0KCSAgICAgICAgICAgICcoU3lzdGVtXC4pP09iamVjdFxbXF0nIHsgIyBhcnJheQ0KCQkJCQkNCgkJCQkJaWYgKCRtYXhEZXB0aCAtbGUgMCl7cmV0dXJuICJgIiR2YWx1ZWAiIn0NCgkJCQkJDQoJCQkJCSRqc29uUmVzdWx0ID0gJycNCgkJCQkJZm9yZWFjaCgkZWxlbSBpbiAkdmFsdWUpew0KCQkJCQkJI2lmICgkZWxlbSAtZXEgJG51bGwpIHtjb250aW51ZX0NCgkJCQkJCWlmICgkanNvblJlc3VsdC5MZW5ndGggLWd0IDApIHskanNvblJlc3VsdCArPScsICd9CQkJCQ0KCQkJCQkJJGpzb25SZXN1bHQgKz0gKCRlbGVtIHwgQ29udmVydFRvLUpTT05QUzIgLW1heERlcHRoICgkbWF4RGVwdGggLTEpKQ0KCQkJCQl9DQoJCQkJCXJldHVybiAiWyIgKyAkanNvblJlc3VsdCArICJdIg0KCSAgICAgICAgICAgIH0NCg0KCQkJCScoU3lzdGVtXC4pP0hhc2h0YWJsZScgeyAjIGhhc2h0YWJsZQ0KCQkJCQkkanNvblJlc3VsdCA9ICcnDQoJCQkJCWZvcmVhY2goJGtleSBpbiAkdmFsdWUuS2V5cyl7DQoJCQkJCQlpZiAoJGpzb25SZXN1bHQuTGVuZ3RoIC1ndCAwKSB7JGpzb25SZXN1bHQgKz0nLCAnfQ0KCQkJCQkJJGpzb25SZXN1bHQgKz0gDQpAIg0KCSJ7MH0iOiB7MX0NCiJAIC1mICRrZXkgLCAoJHZhbHVlWyRrZXldIHwgQ29udmVydFRvLUpTT05QUzIgLW1heERlcHRoICgkbWF4RGVwdGggLTEpICkNCgkJCQkJfQ0KCQkJCQlyZXR1cm4gInsiICsgJGpzb25SZXN1bHQgKyAifSINCgkJCQl9DQoNCgkgICAgICAgICAgICBkZWZhdWx0IHsgI29iamVjdA0KCQkJCQlpZiAoJG1heERlcHRoIC1sZSAwKXtyZXR1cm4gICJgInswfWAiIiAtZiAoRXNjYXBlLUpTT05TdHJpbmcgJHZhbHVlKX0NCgkJCQkJDQoJCQkJCXJldHVybiAieyIgKw0KCQkJCQkJKCgkdmFsdWUgfCBHZXQtTWVtYmVyIC1NZW1iZXJUeXBlICpwcm9wZXJ0eSB8ICUgeyANCkAiDQoJInswfSI6IHsxfQ0KIkAgLWYgJF8uTmFtZSAsICgkdmFsdWUuKCRfLk5hbWUpIHwgQ29udmVydFRvLUpTT05QUzIgLW1heERlcHRoICgkbWF4RGVwdGggLTEpICkJCQkNCgkJCQkJDQoJCQkJCX0pIC1qb2luICcsICcpICsgIn0iDQoJICAgIAkJfQ0KCQl9DQoJfQ0KfQ0KDQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIyMjLS0tLS0tU2V0IFJlc3VsdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpmdW5jdGlvbiBTZXRSZXN1bHQgDQp7DQogICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdDb2RlJyAtVmFsdWUgJGdsb2JhbDpDb2RlDQoNCiAgICBpZigkZ2xvYmFsOkNvZGUgLWVxIDApDQogICAgew0KICAgICAgICBpZigkU3luY1R5cGUgLW5lICJOb25lIikNCiAgICAgICAgew0KICAgICAgICAgICAgJHN1Y2Nlc3NTdHJpbmcgPSAiU3VjY2VzczogIiArICJTeW5jIGNvbXBsZXRlZCBTdWNlc3NmdWxseSINCiAgICAgICAgfQ0KICAgICAgICBlbHNlDQogICAgICAgIHsNCiAgICAgICAgICAgICRzdWNjZXNzU3RyaW5nID0gIlN1Y2Nlc3M6ICIgKyAiY29tcGxldGVkIFN1Y2Vzc2Z1bGx5Ig0KICAgICAgICB9DQoNCg0KICAgICAgICAkUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1N0YXR1cycgLVZhbHVlICJzdWNjZXNzIg0KICAgICAgICAkUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ3Jlc3VsdCcgLVZhbHVlICRzdWNjZXNzU3RyaW5nDQogICAgICAgIA0KDQogICAgICAgIGlmKCRTeW5jVHlwZSAtZXEgIk5vbmUiKQ0KICAgICAgICB7DQogICAgICAgICAgICAkUmVzdWx0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ3N0ZG91dCcgLVZhbHVlICRnbG9iYWw6U3VjY2Vzc01lc3NhZ2VBcnJheQ0KDQogICAgICAgICAgICAkT3V0cHV0T2JqZWN0ID0gTmV3LU9iamVjdCAtVHlwZU5hbWUgcHNvYmplY3QNCiAgICAgICAgICAgICRPdXRwdXRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnQ29tcG55SW5mb3JtYXRpb24nIC1WYWx1ZSAkKCRDb21wbnlJbmZvcm1hdGlvbk9iamVjdCkNCiAgICAgICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnZGF0YU9iamVjdCcgLVZhbHVlICRPdXRwdXRPYmplY3QNCiAgICAgICAgfQ0KICAgICAgICBlbHNlDQogICAgICAgIHsNCiAgICAgICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnc3Rkb3V0JyAtVmFsdWUgJFN1Y2Nlc3NPYmplY3QNCg0KICAgICAgICAgICAgJE91dHB1dE9iamVjdCA9IE5ldy1PYmplY3QgLVR5cGVOYW1lIHBzb2JqZWN0DQogICAgICAgICAgICAkT3V0cHV0T2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1NlcnZpY2VzJyAtVmFsdWUgJCgkU3VjY2Vzc09iamVjdCkNCiAgICAgICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnZGF0YU9iamVjdCcgLVZhbHVlICRPdXRwdXRPYmplY3QNCiAgICAgICAgfQ0KDQogICAgfQ0KICAgIGVsc2UNCiAgICB7DQogICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnU3RhdHVzJyAtVmFsdWUgImZhaWwiDQoNCiAgICAgICAgJEVycm9yT2JqZWN0QXJheT0gQCgpDQogICAgICAgICRlcnJvckNvdW50PSAwDQogICAgICAgICRlcnJvclN0cmluZyA9ICJFcnJvcjogIg0KDQogICAgICAgIGZvcmVhY2goJEVycm9yTWVzc2FnZSBpbiAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5KQ0KICAgICAgICB7DQogICAgICAgICAgICAkZXJyb3JTdHJpbmcgKz0gJEVycm9yTWVzc2FnZSArICIsICINCiAgICAgICAgICAgIA0KICAgICAgICAgICAgJEVyck9iamVjdCA9IE5ldy1PYmplY3QgLVR5cGVOYW1lIHBzb2JqZWN0DQogICAgICAgICAgICAkRXJyT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ2lkJyAtVmFsdWUgJGVycm9yQ291bnQNCiAgICAgICAgICAgICRFcnJPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAndGl0bGUnIC1WYWx1ZSAkRXJyb3JNZXNzYWdlDQogICAgICAgICAgICAkRXJyT2JqZWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ2RldGFpbCcgLVZhbHVlICRFcnJvck1lc3NhZ2UNCg0KICAgICAgICAgICAgJEVycm9yT2JqZWN0QXJheSArPSAkRXJyT2JqZWN0DQoNCiAgICAgICAgICAgICRlcnJvckNvdW50ID0gJGVycm9yQ291bnQgKzENCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdyZXN1bHQnIC1WYWx1ZSAkZXJyb3JTdHJpbmcNCiAgICAgICAgJFJlc3VsdE9iamVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdzdGRvdXQnIC1WYWx1ZSAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5DQogICAgICAgICRSZXN1bHRPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnc3RkZXJyJyAtVmFsdWUgJEVycm9yT2JqZWN0QXJheQ0KICAgIH0NCn0NCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMtLS0tLS1EaXNwbGF5IFJlc3VsdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCmZ1bmN0aW9uIERpc3BsYXlSZXN1bHQgDQp7DQoNCiAgICBpZigkUFNWZXJzaW9uVGFibGUuUFNWZXJzaW9uLk1ham9yIC1ndCAyKQ0KICAgIHsNCiAgICAgICAgJEpTT05SZXN1bHQ9ICRSZXN1bHRPYmplY3R8Q29udmVydFRvLUpzb24NCiAgICAgICAgJEpTT05SZXN1bHQNCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAgJEpTT05SZXN1bHQ9ICRSZXN1bHRPYmplY3R8Q29udmVydFRvLUpTT05QUzINCiAgICAgICAgJEpTT05SZXN1bHQNCiAgICB9DQp9DQoNCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIyMtLS0tLS1FeGVjdXRlIEZ1bmN0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQpjbHMNCg0KaWYoQ2hlY2stUHJlQ29uZGl0aW9uKQ0Kew0KICAgIGlmKCRTeW5jVHlwZS5MZW5ndGggLWxlIDApDQogICAgew0KICAgICAgICAkZ2xvYmFsOkNvZGUgPSAxDQogICAgICAgICRnbG9iYWw6RXJyb3JNZXNzYWdlQXJyYXkrPSAiU3luYyBUeXBlIGlzIG5vdCBwcm92aWRlZCINCiAgICB9DQogICAgaWYoJFBhc3MuTGVuZ3RoIC1sZSAwKQ0KICAgIHsNCiAgICAgICAgJGdsb2JhbDpDb2RlID0gMQ0KICAgICAgICAkZ2xvYmFsOkVycm9yTWVzc2FnZUFycmF5Kz0gIlBhc3N3b3JkIGlzIG5vdCBwcm92aWRlZCINCiAgICB9DQogICAgaWYoJHVzZXJuYW1lLkxlbmd0aCAtbGUgMCkNCiAgICB7DQogICAgICAgICRnbG9iYWw6Q29kZSA9IDENCiAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSs9ICJVc2VyTmFtZSBpcyBub3QgcHJvdmlkZWQiDQogICAgfQ0KICAgDQoNCiAgICBpZigkZ2xvYmFsOkNvZGUgLWVxIDApDQogICAgew0KDQogICAgICAgICRQcm9jZWVkID0gJGZhbHNlDQoNCiAgICAgICAgaWYoVmVyaWZ5LUF6dXJlLVNlcnZpY2UpDQogICAgICAgIHsNCiAgICAgICAgICAgICRQcm9jZWVkID0gJHRydWUNCiAgICAgICAgfQ0KDQogICAgICAgIGlmKCRQcm9jZWVkIC1lcSAkdHJ1ZSkNCiAgICAgICAgew0KICAgICAgICAgICAgJFByb2NlZWQgPSAkZmFsc2UNCg0KICAgICAgICAgICAgaWYoVmVyaWZ5TW9kdWxlIC1Nb2R1bGVOYW1lICdBenVyZUFEJykNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZihWZXJpZnlNb2R1bGUgLU1vZHVsZU5hbWUgJ01TT25saW5lJykNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICRQcm9jZWVkID0gJHRydWUNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZigkUHJvY2VlZCAtZXEgJHRydWUpDQogICAgICAgIHsNCiAgICAgICAgICAgIGlmKGNoZWNrLUFEU3luY0Nvbm5lY3RvclJ1blN0YXR1cykNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZihMb2dpbi1BenVyZUFjY291bnQpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICB3cml0ZS1ob3N0IC1Gb3JlZ3JvdW5kQ29sb3IgOCAiYHQgQXp1cmUgTG9naW4gU3VjZXNzZnVsbCINCg0KICAgICAgICAgICAgICAgICAgICBpZigkU3luY1R5cGUgLWVxICJOb25lIikNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgR2V0LUNvbXBhbnlJbmZvcm1hdGlvbg0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3luYy1BRCANCg0KICAgICAgICAgICAgICAgICAgICAgICAgJFN5bmNEb25lPSAkdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUoJFN5bmNEb25lKQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLUhvc3QgImB0IFN5bmNpbmcsIFBsZWFzZSBXYWl0Li4iDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhcnQtU2xlZXAgLXMgMjANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkU3luY0RvbmU9IEdldC1BRFN5bmNDb25uZWN0b3JSdW5TdGF0dXMNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgU3RhcnQtU2xlZXAgLXMgMjANCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgJFN1Y2Nlc3NPYmplY3QgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSAnUmVzdWx0JyAtVmFsdWUgIlN5bmMgY29tcGxldGVkIFN1Y2Vzc2Z1bGx5Ig0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICRnbG9iYWw6Q29kZSA9IDENCiAgICAgICAgICAgICAgICAgICAgJGdsb2JhbDpFcnJvck1lc3NhZ2VBcnJheSs9ICJBenVyZSBMb2dpbiBGYWlsIg0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KDQogICAgU2V0UmVzdWx0DQogICAgRGlzcGxheVJlc3VsdCANCn0NCmVsc2UNCnsNCiAgICBTZXRSZXN1bHQNCiAgICBEaXNwbGF5UmVzdWx0DQp9",
"jsonSchema":{
"type":"object",
"properties":{
	"username":{
      "type":"string",
      "title":"User Name",
      "minLength":1
    },
	"Pass":{
      "type":"string",
      "title":"Password",
      "minLength":1
    },	
	"SyncType":{
      "type":"string",
      "title":"Sync Type",
      "enum": ["None", "DeltaSync", "FullSync"]
	}
 },
  "required":[
    "username",
    "Pass",
	"SyncType"
  ],
  "additionalProperties": false
},
"uiSchema":{
"username":{
    "ui:autofocus":true,
    "classNames":"col-sm-12"
  },
"Pass":{
    "ui:autofocus":true,
    "classNames":"col-sm-12"
  },
"SyncType":{
    "ui:autofocus":true,
    "classNames":"col-sm-12"
  },
  
  "ui:order":["username", "Pass", "SyncType"]
},
"isHDScript":true
}
