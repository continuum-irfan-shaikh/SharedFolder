{"id":"da2a7288-4fee-11e9-8606-00155d130b17","partnerId":"00000000-0000-0000-0000-000000000000","category":["Setup"],"description":"Script with assist in configureing the display setting","engine":"powershell","engineMaxVersion":5,"expectedExecutionTimeSec":300,"failureMessage":"Executed with errors","successMessage":"Script executed Successfully","internal":false,"name":"Configure display settings","tags":["Windows 7","Windows 10"],"sequence":true,"content":"","jsonSchema":{"properties":{"Command_Prompt_Here":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Command Prompt Here","type":"string"},"Desktop_Cleanup_Wizard":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Desktop Cleanup Wizard","type":"string"},"Enable_Num_Lock_on_Boot":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Enable Num Lock on Boot","type":"string"},"Registered_Company":{"title":"Registered Company","type":"string"},"Registered_Owner":{"title":"Registered Owner","type":"string"},"Remove_My_Documents_Desktop_Icon":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Remove My Documents Desktop Icon","type":"string"},"Remove_Shortcut_To_Prefix":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Remove Shortcut To Prefix","type":"string"},"Remove_Windows_Welcome":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Remove Windows Welcome","type":"string"},"Rename_My_Computer":{"title":"Rename My Computer","type":"string"},"Rename_My_Documents":{"title":"Rename My Documnets","type":"string"},"Rename_My_Network_places":{"title":"Rename My Network places","type":"string"},"Rename_Recycle_bin":{"title":"Rename Recycle bin","type":"string"},"Sort_Start_Menu_by_Name":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Sort Start Menu by Name","type":"string"},"Tab_Auto_Complete":{"enum":["No change","Yes","No"],"enumNames":["No change","Yes","No"],"title":"Tab Auto Complete","type":"string"},"Wallpaper_File":{"title":"Wallpaper File","type":"string"}},"type":"object"},"uiSchema":{"Command_Prompt_Here":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Desktop_Cleanup_Wizard":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Enable_Num_Lock_on_Boot":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Registered_Company":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true},"Registered_Owner":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true},"Remove_My_Documents_Desktop_Icon":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Remove_Shortcut_To_Prefix":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Remove_Windows_Welcome":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Rename_My_Computer":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true},"Rename_My_Documents":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true},"Rename_My_Network_places":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true},"Rename_Recycle_bin":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true},"Sort_Start_Menu_by_Name":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Tab_Auto_Complete":{"classNames":"col-sm=4 col-sm-offset-right-8","ui:autofocus":true},"Wallpaper_File":{"classNames":"col-sm=6 col-sm-offset-right-6","ui:autofocus":true}},"isHDScript":false}